Sat, 02 Apr 2022 20:23:35 craigdataloader.py[line:44] INFO CRAIG dataloader initialized. 
Sat, 02 Apr 2022 20:23:35 adaptivedataloader.py[line:68] DEBUG Epoch: 1, reading dataloader... 
Sat, 02 Apr 2022 20:23:35 adaptivedataloader.py[line:72] DEBUG Epoch: 1, finished reading dataloader. 
Sat, 02 Apr 2022 20:24:14 adaptivedataloader.py[line:68] DEBUG Epoch: 2, reading dataloader... 
Sat, 02 Apr 2022 20:24:14 adaptivedataloader.py[line:72] DEBUG Epoch: 2, finished reading dataloader. 
Sat, 02 Apr 2022 20:24:53 adaptivedataloader.py[line:68] DEBUG Epoch: 3, reading dataloader... 
Sat, 02 Apr 2022 20:24:53 adaptivedataloader.py[line:72] DEBUG Epoch: 3, finished reading dataloader. 
Sat, 02 Apr 2022 20:25:32 adaptivedataloader.py[line:68] DEBUG Epoch: 4, reading dataloader... 
Sat, 02 Apr 2022 20:25:32 craigdataloader.py[line:52] INFO Epoch: 4, requires subset selection. 
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=24)
           2	LOAD_GLOBAL(arg=0, lineno=24)
           4	LOAD_FAST(arg=3, lineno=24)
           6	LOAD_ATTR(arg=1, lineno=24)
           8	LOAD_CONST(arg=1, lineno=24)
          10	BINARY_SUBSCR(arg=None, lineno=24)
          12	CALL_FUNCTION(arg=1, lineno=24)
          14	GET_ITER(arg=None, lineno=24)
>         16	FOR_ITER(arg=36, lineno=24)
          18	STORE_FAST(arg=4, lineno=24)
          20	LOAD_FAST(arg=3, lineno=25)
          22	LOAD_FAST(arg=4, lineno=25)
          24	BINARY_SUBSCR(arg=None, lineno=25)
          26	STORE_FAST(arg=5, lineno=25)
          28	LOAD_GLOBAL(arg=2, lineno=26)
          30	LOAD_METHOD(arg=3, lineno=26)
          32	LOAD_FAST(arg=0, lineno=26)
          34	LOAD_FAST(arg=5, lineno=26)
          36	BINARY_SUBSCR(arg=None, lineno=26)
          38	LOAD_FAST(arg=2, lineno=26)
          40	CALL_METHOD(arg=2, lineno=26)
          42	LOAD_METHOD(arg=4, lineno=26)
          44	CALL_METHOD(arg=0, lineno=26)
          46	LOAD_FAST(arg=1, lineno=26)
          48	LOAD_FAST(arg=4, lineno=26)
          50	STORE_SUBSCR(arg=None, lineno=26)
          52	JUMP_ABSOLUTE(arg=16, lineno=26)
>         54	LOAD_CONST(arg=0, lineno=26)
          56	RETURN_VALUE(arg=None, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_FAST(arg=3, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$idxs4.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$6load_attr.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$6load_attr.2', '$const8.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=12, inst=CALL_FUNCTION(arg=1, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$10binary_subscr.4']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=14, inst=GET_ITER(arg=None, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$12call_function.5']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=16, stack=('$14get_iter.6',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=16 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: ['$phi16.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=16, inst=FOR_ITER(arg=36, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi16.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=54, inst=LOAD_CONST(arg=0, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$const54.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=18 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: ['$phi18.0', '$phi18.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=18, inst=STORE_FAST(arg=4, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$phi18.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_FAST(arg=3, lineno=25)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_FAST(arg=4, lineno=25)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$idxs20.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=24, inst=BINARY_SUBSCR(arg=None, lineno=25)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$idxs20.2', '$i22.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=26, inst=STORE_FAST(arg=5, lineno=25)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$24binary_subscr.4']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=30, inst=LOAD_METHOD(arg=3, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$28load_global.5']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=34, inst=LOAD_FAST(arg=5, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$X32.7']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$X32.7', '$idx34.8']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$36binary_subscr.9']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=40, inst=CALL_METHOD(arg=2, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$36binary_subscr.9', '$current_values38.10']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=42, inst=LOAD_METHOD(arg=4, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$40call_method.11']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=44, inst=CALL_METHOD(arg=0, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$42load_method.12']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=46, inst=LOAD_FAST(arg=1, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$44call_method.13']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=48, inst=LOAD_FAST(arg=4, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$44call_method.13', '$gains46.14']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=50, inst=STORE_SUBSCR(arg=None, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$44call_method.13', '$gains46.14', '$i48.15']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=52, inst=JUMP_ABSOLUTE(arg=16, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=16 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=54 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:189] DEBUG defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:220] DEBUG keep phismap: {'$phi16.0': {('$14get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.6'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$idxs4.1'}), (6, {'item': '$idxs4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'index': '$const8.3', 'target': '$6load_attr.2', 'res': '$10binary_subscr.4'}), (12, {'func': '$2load_global.0', 'args': ['$10binary_subscr.4'], 'res': '$12call_function.5'}), (14, {'value': '$12call_function.5', 'res': '$14get_iter.6'})), outgoing_phis={'$phi16.0': '$14get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.6',)})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 18: ('$phi16.0', '$16for_iter.2')})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$idxs20.2'}), (22, {'res': '$i22.3'}), (24, {'index': '$i22.3', 'target': '$idxs20.2', 'res': '$24binary_subscr.4'}), (26, {'value': '$24binary_subscr.4'}), (28, {'res': '$28load_global.5'}), (30, {'item': '$28load_global.5', 'res': '$30load_method.6'}), (32, {'res': '$X32.7'}), (34, {'res': '$idx34.8'}), (36, {'index': '$idx34.8', 'target': '$X32.7', 'res': '$36binary_subscr.9'}), (38, {'res': '$current_values38.10'}), (40, {'func': '$30load_method.6', 'args': ['$36binary_subscr.9', '$current_values38.10'], 'res': '$40call_method.11'}), (42, {'item': '$40call_method.11', 'res': '$42load_method.12'}), (44, {'func': '$42load_method.12', 'args': [], 'res': '$44call_method.13'}), (46, {'res': '$gains46.14'}), (48, {'res': '$i48.15'}), (50, {'target': '$gains46.14', 'index': '$i48.15', 'value': '$44call_method.13'}), (52, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'retval': '$const54.0', 'castval': '$56return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:35 interpreter.py[line:379] DEBUG label 0:
    X = arg(0, name=X)                       ['X']
    gains = arg(1, name=gains)               ['gains']
    current_values = arg(2, name=current_values) ['current_values']
    idxs = arg(3, name=idxs)                 ['idxs']
    $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>) ['$2load_global.0']
    $6load_attr.2 = getattr(value=idxs, attr=shape) ['$6load_attr.2', 'idxs']
    $const8.3 = const(int, 0)                ['$const8.3']
    $10binary_subscr.4 = getitem(value=$6load_attr.2, index=$const8.3, fn=<built-in function getitem>) ['$10binary_subscr.4', '$6load_attr.2', '$const8.3']
    $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, facilityLocation.py:24)], kws=(), vararg=None) ['$10binary_subscr.4', '$12call_function.5', '$2load_global.0']
    $14get_iter.6 = getiter(value=$12call_function.5) ['$12call_function.5', '$14get_iter.6']
    $phi16.0 = $14get_iter.6                 ['$14get_iter.6', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 54             ['$16for_iter.3']
label 18:
    i = $phi18.1                             ['$phi18.1', 'i']
    idx = getitem(value=idxs, index=i, fn=<built-in function getitem>) ['i', 'idx', 'idxs']
    $28load_global.5 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>) ['$28load_global.5']
    $30load_method.6 = getattr(value=$28load_global.5, attr=maximum) ['$28load_global.5', '$30load_method.6']
    $36binary_subscr.9 = getitem(value=X, index=idx, fn=<built-in function getitem>) ['$36binary_subscr.9', 'X', 'idx']
    $40call_method.11 = call $30load_method.6($36binary_subscr.9, current_values, func=$30load_method.6, args=[Var($36binary_subscr.9, facilityLocation.py:26), Var(current_values, facilityLocation.py:24)], kws=(), vararg=None) ['$30load_method.6', '$36binary_subscr.9', '$40call_method.11', 'current_values']
    $42load_method.12 = getattr(value=$40call_method.11, attr=sum) ['$40call_method.11', '$42load_method.12']
    $44call_method.13 = call $42load_method.12(func=$42load_method.12, args=[], kws=(), vararg=None) ['$42load_method.12', '$44call_method.13']
    gains[i] = $44call_method.13             ['$44call_method.13', 'gains', 'i']
    jump 16                                  []
label 54:
    $const54.0 = const(NoneType, None)       ['$const54.0']
    $56return_value.1 = cast(value=$const54.0) ['$56return_value.1', '$const54.0']
    return $56return_value.1                 ['$56return_value.1']

Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9662bef640>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: X = arg(0, name=X)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: gains = arg(1, name=gains)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: current_values = arg(2, name=current_values)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: idxs = arg(3, name=idxs)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $6load_attr.2 = getattr(value=idxs, attr=shape)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $const8.3 = const(int, 0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $10binary_subscr.4 = static_getitem(value=$6load_attr.2, index=0, index_var=$const8.3, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, facilityLocation.py:24)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $14get_iter.6 = getiter(value=$12call_function.5)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi16.0 = $14get_iter.6
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9662bef640>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.1 = iternext(value=$phi16.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi18.1 = $16for_iter.2
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: branch $16for_iter.3, 18, 54
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9662bef640>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: i = $phi18.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: idx = getitem(value=idxs, index=i, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $28load_global.5 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $30load_method.6 = getattr(value=$28load_global.5, attr=maximum)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $36binary_subscr.9 = getitem(value=X, index=idx, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $40call_method.11 = call $30load_method.6($36binary_subscr.9, current_values, func=$30load_method.6, args=[Var($36binary_subscr.9, facilityLocation.py:26), Var(current_values, facilityLocation.py:24)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $42load_method.12 = getattr(value=$40call_method.11, attr=sum)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $44call_method.13 = call $42load_method.12(func=$42load_method.12, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: gains[i] = $44call_method.13
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 54
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9662bef640>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $const54.0 = const(NoneType, None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $56return_value.1 = cast(value=$const54.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: return $56return_value.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7f9662bd9160>],
             '$12call_function.5': [<numba.core.ir.Assign object at 0x7f967ed1fb20>],
             '$14get_iter.6': [<numba.core.ir.Assign object at 0x7f967ed1f310>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x7f967ec43ee0>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x7f967ec43d60>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x7f967ec43370>],
             '$28load_global.5': [<numba.core.ir.Assign object at 0x7f9662bc4850>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f967ed3d850>],
             '$30load_method.6': [<numba.core.ir.Assign object at 0x7f9662bc45b0>],
             '$36binary_subscr.9': [<numba.core.ir.Assign object at 0x7f967ec43be0>],
             '$40call_method.11': [<numba.core.ir.Assign object at 0x7f967ec43700>],
             '$42load_method.12': [<numba.core.ir.Assign object at 0x7f967ec43130>],
             '$44call_method.13': [<numba.core.ir.Assign object at 0x7f967ec80fa0>],
             '$56return_value.1': [<numba.core.ir.Assign object at 0x7f967ec80a90>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f967ed1f520>],
             '$const54.0': [<numba.core.ir.Assign object at 0x7f967ec43220>],
             '$const8.3': [<numba.core.ir.Assign object at 0x7f967ed1f9d0>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x7f967ecb1310>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x7f967ec43fa0>],
             'X': [<numba.core.ir.Assign object at 0x7f967ecb12e0>],
             'current_values': [<numba.core.ir.Assign object at 0x7f967ed3da00>],
             'gains': [<numba.core.ir.Assign object at 0x7f967ed3d310>],
             'i': [<numba.core.ir.Assign object at 0x7f967ec435b0>],
             'idx': [<numba.core.ir.Assign object at 0x7f967ecb1b20>],
             'idxs': [<numba.core.ir.Assign object at 0x7f967ed3d340>]})
Sat, 02 Apr 2022 20:25:35 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=26)
           6	LOAD_FAST(arg=1, lineno=24)
           8	CALL_FUNCTION(arg=2, lineno=1)
          10	RETURN_VALUE(arg=None, lineno=1)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=1)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=26)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=24)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$_36binary_subscr_9_14.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=1)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$_36binary_subscr_9_14.1', '$current_values_16.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=1)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$8call_function.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:189] DEBUG defmap: {}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>, {})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>, {})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:220] DEBUG keep phismap: {}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>, {})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$_36binary_subscr_9_14.1'}), (6, {'res': '$current_values_16.2'}), (8, {'func': '$2load_global.0', 'args': ['$_36binary_subscr_9_14.1', '$current_values_16.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:35 interpreter.py[line:379] DEBUG label 0:
    _36binary_subscr_9_1 = arg(0, name=_36binary_subscr_9_1) ['_36binary_subscr_9_1']
    current_values_1 = arg(1, name=current_values_1) ['current_values_1']
    $2load_global.0 = global(__ufunc_or_dufunc_0x7f969f7879a: <ufunc 'maximum'>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(_36binary_subscr_9_1, current_values_1, func=$2load_global.0, args=[Var(_36binary_subscr_9_1, facilityLocation.py:1), Var(current_values_1, facilityLocation.py:1)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '_36binary_subscr_9_1', 'current_values_1']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967edc4fa0>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: _36binary_subscr_9_1 = arg(0, name=_36binary_subscr_9_1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: current_values_1 = arg(1, name=current_values_1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $2load_global.0 = global(__ufunc_or_dufunc_0x7f969f7879a: <ufunc 'maximum'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $8call_function.3 = call $2load_global.0(_36binary_subscr_9_1, current_values_1, func=$2load_global.0, args=[Var(_36binary_subscr_9_1, facilityLocation.py:1), Var(current_values_1, facilityLocation.py:1)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $10return_value.4 = cast(value=$8call_function.3)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: return $10return_value.4
Sat, 02 Apr 2022 20:25:35 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x7f967edbd3d0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f967ed53d90>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x7f967edbdfd0>],
             '_36binary_subscr_9_1': [<numba.core.ir.Assign object at 0x7f967ed53fd0>],
             'current_values_1': [<numba.core.ir.Assign object at 0x7f967ed53ee0>]})
Sat, 02 Apr 2022 20:25:35 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=167)
           2	LOAD_DEREF(arg=0, lineno=167)
           4	STORE_FAST(arg=1, lineno=167)
           6	LOAD_GLOBAL(arg=0, lineno=168)
           8	LOAD_METHOD(arg=1, lineno=168)
          10	LOAD_FAST(arg=0, lineno=168)
          12	CALL_METHOD(arg=1, lineno=168)
          14	GET_ITER(arg=None, lineno=168)
>         16	FOR_ITER(arg=16, lineno=168)
          18	STORE_FAST(arg=2, lineno=168)
          20	LOAD_FAST(arg=1, lineno=169)
          22	LOAD_FAST(arg=2, lineno=169)
          24	LOAD_METHOD(arg=2, lineno=169)
          26	CALL_METHOD(arg=0, lineno=169)
          28	INPLACE_ADD(arg=None, lineno=169)
          30	STORE_FAST(arg=1, lineno=169)
          32	JUMP_ABSOLUTE(arg=16, lineno=169)
>         34	LOAD_FAST(arg=1, lineno=170)
          36	RETURN_VALUE(arg=None, lineno=170)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=167)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=167)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=4, inst=STORE_FAST(arg=1, lineno=167)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_deref.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=168)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=168)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$6load_global.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=168)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$8load_method.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=168)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$8load_method.2', '$arr10.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=14, inst=GET_ITER(arg=None, lineno=168)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$12call_method.4']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=16 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: ['$phi16.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=16, inst=FOR_ITER(arg=16, lineno=168)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi16.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=170)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=36, inst=RETURN_VALUE(arg=None, lineno=170)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$c34.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=18 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: ['$phi18.0', '$phi18.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=18, inst=STORE_FAST(arg=2, lineno=168)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$phi18.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=169)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=169)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$c20.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=169)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$c20.2', '$v22.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=169)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$c20.2', '$24load_method.4']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=169)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$c20.2', '$26call_method.5']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=30, inst=STORE_FAST(arg=1, lineno=169)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$28inplace_add.6']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=32, inst=JUMP_ABSOLUTE(arg=16, lineno=169)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=16 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:189] DEBUG defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:220] DEBUG keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$arr10.3'}), (12, {'func': '$8load_method.2', 'args': ['$arr10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'retval': '$c34.0', 'castval': '$36return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:35 interpreter.py[line:379] DEBUG label 0:
    arr = arg(0, name=arr)                   ['arr']
    c = freevar(zero: 0.0)                   ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, arraymath.py:167)], kws=(), vararg=None) ['$12call_method.4', '$8load_method.2', 'arr']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $36return_value.1 = cast(value=c)        ['$36return_value.1', 'c']
    return $36return_value.1                 ['$36return_value.1']

Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967eeff4f0>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: arr = arg(0, name=arr)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: c = freevar(zero: 0.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, arraymath.py:167)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi16.0 = $14get_iter.5
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967eeff4f0>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.1 = iternext(value=$phi16.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi18.1 = $16for_iter.2
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: branch $16for_iter.3, 18, 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967eeff4f0>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: v = $phi18.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $24load_method.4 = getattr(value=v, attr=item)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: c = $28inplace_add.6
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967eeff4f0>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $36return_value.1 = cast(value=c)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: return $36return_value.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$12call_method.4': [<numba.core.ir.Assign object at 0x7f967ec67d00>],
             '$14get_iter.5': [<numba.core.ir.Assign object at 0x7f967ec67490>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x7f967ec67760>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x7f967ec67b50>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x7f967ec675b0>],
             '$24load_method.4': [<numba.core.ir.Assign object at 0x7f967ed710d0>],
             '$26call_method.5': [<numba.core.ir.Assign object at 0x7f967ed713a0>],
             '$28inplace_add.6': [<numba.core.ir.Assign object at 0x7f967ed715e0>],
             '$36return_value.1': [<numba.core.ir.Assign object at 0x7f967ed712b0>],
             '$6load_global.1': [<numba.core.ir.Assign object at 0x7f967ec67ac0>],
             '$8load_method.2': [<numba.core.ir.Assign object at 0x7f967ec67c10>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x7f967ec67a30>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x7f967ec677c0>],
             'arr': [<numba.core.ir.Assign object at 0x7f967eb7b880>],
             'c': [<numba.core.ir.Assign object at 0x7f967ec67160>,
                   <numba.core.ir.Assign object at 0x7f967ed717f0>],
             'v': [<numba.core.ir.Assign object at 0x7f967ed71790>]})
Sat, 02 Apr 2022 20:25:35 ssa.py[line:143] DEBUG SSA violators {'c'}
Sat, 02 Apr 2022 20:25:35 ssa.py[line:49] DEBUG Fix SSA violator on var c
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 0
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: arr = arg(0, name=arr)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: c = freevar(zero: 0.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:256] DEBUG first assign: c
Sat, 02 Apr 2022 20:25:35 ssa.py[line:186] DEBUG replaced with: c = freevar(zero: 0.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, arraymath.py:167)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi16.0 = $14get_iter.5
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.1 = iternext(value=$phi16.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi18.1 = $16for_iter.2
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: branch $16for_iter.3, 18, 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: v = $phi18.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $24load_method.4 = getattr(value=v, attr=item)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: c = $28inplace_add.6
Sat, 02 Apr 2022 20:25:35 ssa.py[line:186] DEBUG replaced with: c.1 = $28inplace_add.6
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $36return_value.1 = cast(value=c)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: return $36return_value.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:55] DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f967eeffe80>],
             18: [<numba.core.ir.Assign object at 0x7f967eeffeb0>]})
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 0
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: arr = arg(0, name=arr)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: c = freevar(zero: 0.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $12call_method.4 = call $8load_method.2(arr, func=$8load_method.2, args=[Var(arr, arraymath.py:167)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi16.0 = $14get_iter.5
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.1 = iternext(value=$phi16.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi18.1 = $16for_iter.2
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: branch $16for_iter.3, 18, 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: v = $phi18.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $24load_method.4 = getattr(value=v, attr=item)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:332] DEBUG find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:363] DEBUG find_def_from_top label 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:400] DEBUG idom 16 from label 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:406] DEBUG find_def_from_bottom label 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:363] DEBUG find_def_from_top label 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:380] DEBUG insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:406] DEBUG find_def_from_bottom label 0
Sat, 02 Apr 2022 20:25:35 ssa.py[line:388] DEBUG incoming_def c = freevar(zero: 0.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:406] DEBUG find_def_from_bottom label 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:388] DEBUG incoming_def c.1 = $28inplace_add.6
Sat, 02 Apr 2022 20:25:35 ssa.py[line:186] DEBUG replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: c.1 = $28inplace_add.6
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:157] DEBUG ==== SSA block rewrite pass on 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f967eeff160>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $36return_value.1 = cast(value=c)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:332] DEBUG find_def var='c' stmt=$36return_value.1 = cast(value=c)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:363] DEBUG find_def_from_top label 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:400] DEBUG idom 16 from label 34
Sat, 02 Apr 2022 20:25:35 ssa.py[line:406] DEBUG find_def_from_bottom label 16
Sat, 02 Apr 2022 20:25:35 ssa.py[line:186] DEBUG replaced with: $36return_value.1 = cast(value=c.2)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: return $36return_value.1
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=2716)
           2	LOAD_GLOBAL(arg=0, lineno=2716)
           4	LOAD_FAST(arg=0, lineno=2716)
           6	CALL_FUNCTION(arg=1, lineno=2716)
           8	STORE_FAST(arg=2, lineno=2716)
          10	LOAD_GLOBAL(arg=1, lineno=2717)
          12	LOAD_FAST(arg=2, lineno=2717)
          14	CALL_FUNCTION(arg=1, lineno=2717)
          16	GET_ITER(arg=None, lineno=2717)
>         18	FOR_ITER(arg=40, lineno=2717)
          20	STORE_FAST(arg=3, lineno=2717)
          22	LOAD_FAST(arg=0, lineno=2718)
          24	LOAD_FAST(arg=3, lineno=2718)
          26	BINARY_SUBSCR(arg=None, lineno=2718)
          28	LOAD_FAST(arg=1, lineno=2718)
          30	LOAD_GLOBAL(arg=0, lineno=2718)
          32	LOAD_FAST(arg=1, lineno=2718)
          34	CALL_FUNCTION(arg=1, lineno=2718)
          36	LOAD_FAST(arg=2, lineno=2718)
          38	BINARY_SUBTRACT(arg=None, lineno=2718)
          40	LOAD_FAST(arg=3, lineno=2718)
          42	BINARY_ADD(arg=None, lineno=2718)
          44	BINARY_SUBSCR(arg=None, lineno=2718)
          46	COMPARE_OP(arg=3, lineno=2718)
          48	POP_JUMP_IF_FALSE(arg=18, lineno=2718)
          50	LOAD_GLOBAL(arg=2, lineno=2719)
          52	LOAD_CONST(arg=1, lineno=2719)
          54	CALL_FUNCTION(arg=1, lineno=2719)
          56	RAISE_VARARGS(arg=1, lineno=2719)
          58	JUMP_ABSOLUTE(arg=18, lineno=2719)
>         60	LOAD_CONST(arg=0, lineno=2719)
          62	RETURN_VALUE(arg=None, lineno=2719)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=2716)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2716)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2716)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=2716)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$shape4.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=8, inst=STORE_FAST(arg=2, lineno=2716)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$6call_function.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=2717)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=2717)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$10load_global.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=2717)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$10load_global.3', '$n12.4']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=16, inst=GET_ITER(arg=None, lineno=2717)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$14call_function.5']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=18, stack=('$16get_iter.6',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=18 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: ['$phi18.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=18, inst=FOR_ITER(arg=40, lineno=2717)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=2719)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=2719)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$const60.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=20 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: ['$phi20.0', '$phi20.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=20, inst=STORE_FAST(arg=3, lineno=2717)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$phi20.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$shape22.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$shape22.2', '$i24.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=30, inst=LOAD_GLOBAL(arg=0, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6', '$main_shape32.7']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8', '$n36.9']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=40, inst=LOAD_FAST(arg=3, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10', '$i40.11']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$42binary_add.12']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=46, inst=COMPARE_OP(arg=3, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$26binary_subscr.4', '$44binary_subscr.13']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=18, lineno=2718)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi20.0', '$46compare_op.14']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=50, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=18, stack=('$phi20.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:103] DEBUG stack: ['$phi50.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=2719)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi50.0']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=2719)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi50.0', '$50load_global.1']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=2719)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi50.0', '$50load_global.1', '$const52.2']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:262] DEBUG dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=2719)
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:263] DEBUG stack ['$phi50.0', '$54call_function.3']
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=18 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=60 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:189] DEBUG defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:220] DEBUG keep phismap: {'$phi18.0': {('$16get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.6'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'func': '$2load_global.0', 'args': ['$shape4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$n12.4'}), (14, {'func': '$10load_global.3', 'args': ['$n12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5', 'res': '$16get_iter.6'})), outgoing_phis={'$phi18.0': '$16get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.6',)})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 20: ('$phi18.0', '$18for_iter.2')})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$shape22.2'}), (24, {'res': '$i24.3'}), (26, {'index': '$i24.3', 'target': '$shape22.2', 'res': '$26binary_subscr.4'}), (28, {'res': '$main_shape28.5'}), (30, {'res': '$30load_global.6'}), (32, {'res': '$main_shape32.7'}), (34, {'func': '$30load_global.6', 'args': ['$main_shape32.7'], 'res': '$34call_function.8'}), (36, {'res': '$n36.9'}), (38, {'lhs': '$34call_function.8', 'rhs': '$n36.9', 'res': '$38binary_subtract.10'}), (40, {'res': '$i40.11'}), (42, {'lhs': '$38binary_subtract.10', 'rhs': '$i40.11', 'res': '$42binary_add.12'}), (44, {'index': '$42binary_add.12', 'target': '$main_shape28.5', 'res': '$44binary_subscr.13'}), (46, {'lhs': '$26binary_subscr.4', 'rhs': '$44binary_subscr.13', 'res': '$46compare_op.14'}), (48, {'pred': '$46compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi20.0',), 18: ('$phi20.0',)})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.1'}), (52, {'res': '$const52.2'}), (54, {'func': '$50load_global.1', 'args': ['$const52.2'], 'res': '$54call_function.3'}), (56, {'exc': '$54call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:35 byteflow.py[line:147] DEBUG block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$const60.0'}), (62, {'retval': '$const60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:35 interpreter.py[line:379] DEBUG label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:2716)], kws=(), vararg=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:2716)], kws=(), vararg=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:2718),), kws=(), vararg=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 18                   ['$48pred']
label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None) ['$50load_global.1', '$54call_function.3', '$const52.2']
    raise $54call_function.3                 ['$54call_function.3']
label 60:
    $const60.0 = const(NoneType, None)       ['$const60.0']
    $62return_value.1 = cast(value=$const60.0) ['$62return_value.1', '$const60.0']
    return $62return_value.1                 ['$62return_value.1']

Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967ec60220>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: shape = arg(0, name=shape)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: main_shape = arg(1, name=main_shape)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $2load_global.0 = global(len: <built-in function len>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: n = const(int, 1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $10load_global.3 = global(range: <class 'range'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $16get_iter.6 = getiter(value=$14call_function.5)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi18.0 = $16get_iter.6
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: jump 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967ec60220>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $18for_iter.1 = iternext(value=$phi18.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $phi20.1 = $18for_iter.2
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: branch $18for_iter.3, 20, 60
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 20
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967ec60220>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: i = $phi20.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $30load_global.6 = global(len: <built-in function len>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $34call_function.8 = const(int, 1)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $38binary_subtract.10 = $34call_function.8 - n
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $42binary_add.12 = $38binary_subtract.10 + i
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: bool48 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:2718),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: branch $48pred, 50, 18
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 50
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967ec60220>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $50load_global.1 = global(ValueError: <class 'ValueError'>)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
Sat, 02 Apr 2022 20:25:35 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 60
Sat, 02 Apr 2022 20:25:35 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f967ec60220>
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $const60.0 = const(NoneType, None)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: $62return_value.1 = cast(value=$const60.0)
Sat, 02 Apr 2022 20:25:35 ssa.py[line:180] DEBUG on stmt: return $62return_value.1
Sat, 02 Apr 2022 20:25:35 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$10load_global.3': [<numba.core.ir.Assign object at 0x7f967ec4dc70>],
             '$14call_function.5': [<numba.core.ir.Assign object at 0x7f967ec4d4f0>],
             '$16get_iter.6': [<numba.core.ir.Assign object at 0x7f967ec4dd90>],
             '$18for_iter.1': [<numba.core.ir.Assign object at 0x7f967ec4d5b0>],
             '$18for_iter.2': [<numba.core.ir.Assign object at 0x7f967ec4df10>],
             '$18for_iter.3': [<numba.core.ir.Assign object at 0x7f967ec4dac0>],
             '$26binary_subscr.4': [<numba.core.ir.Assign object at 0x7f967ec516d0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f967ec4d130>],
             '$30load_global.6': [<numba.core.ir.Assign object at 0x7f967ec51e50>],
             '$34call_function.8': [<numba.core.ir.Assign object at 0x7f967ec512b0>],
             '$38binary_subtract.10': [<numba.core.ir.Assign object at 0x7f967ec51340>],
             '$42binary_add.12': [<numba.core.ir.Assign object at 0x7f967ec60670>],
             '$44binary_subscr.13': [<numba.core.ir.Assign object at 0x7f967ec60c40>],
             '$46compare_op.14': [<numba.core.ir.Assign object at 0x7f967ec606d0>],
             '$48pred': [<numba.core.ir.Assign object at 0x7f967ebfeca0>],
             '$50load_global.1': [<numba.core.ir.Assign object at 0x7f967ebfed90>],
             '$54call_function.3': [<numba.core.ir.Assign object at 0x7f967ec9e940>],
             '$62return_value.1': [<numba.core.ir.Assign object at 0x7f967ec60e20>],
             '$const52.2': [<numba.core.ir.Assign object at 0x7f967ebfea60>],
             '$const60.0': [<numba.core.ir.Assign object at 0x7f967ec9e340>],
             '$phi18.0': [<numba.core.ir.Assign object at 0x7f967ec4d340>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x7f967ec4d700>],
             'bool48': [<numba.core.ir.Assign object at 0x7f967ec60f10>],
             'i': [<numba.core.ir.Assign object at 0x7f967ec51130>],
             'main_shape': [<numba.core.ir.Assign object at 0x7f967ecf6520>],
             'n': [<numba.core.ir.Assign object at 0x7f967ec4d370>],
             'shape': [<numba.core.ir.Assign object at 0x7f967ecf6190>]})
Sat, 02 Apr 2022 20:25:35 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=49)
           2	LOAD_FAST(arg=0, lineno=49)
           4	LOAD_ATTR(arg=0, lineno=49)
           6	UNPACK_SEQUENCE(arg=2, lineno=49)
           8	STORE_FAST(arg=9, lineno=49)
          10	STORE_FAST(arg=10, lineno=49)
          12	LOAD_FAST(arg=6, lineno=50)
          14	LOAD_ATTR(arg=0, lineno=50)
          16	LOAD_CONST(arg=1, lineno=50)
          18	BINARY_SUBSCR(arg=None, lineno=50)
          20	STORE_FAST(arg=11, lineno=50)
          22	LOAD_GLOBAL(arg=1, lineno=52)
          24	LOAD_FAST(arg=11, lineno=52)
          26	CALL_FUNCTION(arg=1, lineno=52)
          28	GET_ITER(arg=None, lineno=52)
>         30	FOR_ITER(arg=210, lineno=52)
          32	STORE_FAST(arg=12, lineno=52)
          34	LOAD_GLOBAL(arg=2, lineno=53)
          36	LOAD_FAST(arg=9, lineno=53)
          38	CALL_FUNCTION(arg=1, lineno=53)
          40	GET_ITER(arg=None, lineno=53)
>         42	FOR_ITER(arg=196, lineno=53)
          44	STORE_FAST(arg=13, lineno=53)
          46	LOAD_FAST(arg=7, lineno=54)
          48	LOAD_FAST(arg=12, lineno=54)
          50	BINARY_SUBSCR(arg=None, lineno=54)
          52	LOAD_FAST(arg=1, lineno=54)
          54	COMPARE_OP(arg=2, lineno=54)
          56	POP_JUMP_IF_FALSE(arg=62, lineno=54)
          58	POP_TOP(arg=None, lineno=55)
          60	JUMP_ABSOLUTE(arg=30, lineno=55)
>         62	LOAD_FAST(arg=8, lineno=57)
          64	LOAD_FAST(arg=13, lineno=57)
          66	BINARY_SUBSCR(arg=None, lineno=57)
          68	STORE_FAST(arg=14, lineno=57)
          70	LOAD_FAST(arg=6, lineno=58)
          72	LOAD_FAST(arg=12, lineno=58)
          74	BINARY_SUBSCR(arg=None, lineno=58)
          76	LOAD_CONST(arg=2, lineno=58)
          78	BINARY_TRUE_DIVIDE(arg=None, lineno=58)
          80	LOAD_FAST(arg=5, lineno=58)
          82	LOAD_FAST(arg=12, lineno=58)
          84	BINARY_SUBSCR(arg=None, lineno=58)
          86	BINARY_SUBTRACT(arg=None, lineno=58)
          88	LOAD_FAST(arg=1, lineno=58)
          90	LOAD_FAST(arg=7, lineno=58)
          92	LOAD_FAST(arg=12, lineno=58)
          94	BINARY_SUBSCR(arg=None, lineno=58)
          96	BINARY_SUBTRACT(arg=None, lineno=58)
          98	BINARY_TRUE_DIVIDE(arg=None, lineno=58)
         100	STORE_FAST(arg=15, lineno=58)
         102	LOAD_GLOBAL(arg=3, lineno=59)
         104	LOAD_METHOD(arg=4, lineno=59)
         106	LOAD_FAST(arg=0, lineno=59)
         108	LOAD_FAST(arg=13, lineno=59)
         110	BINARY_SUBSCR(arg=None, lineno=59)
         112	LOAD_CONST(arg=0, lineno=59)
         114	LOAD_FAST(arg=10, lineno=59)
         116	BUILD_SLICE(arg=2, lineno=59)
         118	BINARY_SUBSCR(arg=None, lineno=59)
         120	LOAD_FAST(arg=2, lineno=59)
         122	LOAD_FAST(arg=12, lineno=59)
         124	BINARY_SUBSCR(arg=None, lineno=59)
         126	LOAD_CONST(arg=0, lineno=59)
         128	LOAD_FAST(arg=10, lineno=59)
         130	BUILD_SLICE(arg=2, lineno=59)
         132	BINARY_SUBSCR(arg=None, lineno=59)
         134	CALL_METHOD(arg=2, lineno=59)
         136	STORE_FAST(arg=16, lineno=59)
         138	LOAD_FAST(arg=16, lineno=60)
         140	LOAD_METHOD(arg=5, lineno=60)
         142	CALL_METHOD(arg=0, lineno=60)
         144	LOAD_FAST(arg=5, lineno=60)
         146	LOAD_FAST(arg=12, lineno=60)
         148	BINARY_SUBSCR(arg=None, lineno=60)
         150	BINARY_SUBTRACT(arg=None, lineno=60)
         152	STORE_FAST(arg=17, lineno=60)
         154	LOAD_FAST(arg=17, lineno=62)
         156	LOAD_FAST(arg=15, lineno=62)
         158	COMPARE_OP(arg=4, lineno=62)
         160	POP_JUMP_IF_FALSE(arg=42, lineno=62)
         162	LOAD_FAST(arg=16, lineno=63)
         164	LOAD_FAST(arg=2, lineno=63)
         166	LOAD_FAST(arg=12, lineno=63)
         168	BINARY_SUBSCR(arg=None, lineno=63)
         170	LOAD_CONST(arg=0, lineno=63)
         172	LOAD_FAST(arg=10, lineno=63)
         174	BUILD_SLICE(arg=2, lineno=63)
         176	STORE_SUBSCR(arg=None, lineno=63)
         178	LOAD_FAST(arg=16, lineno=64)
         180	LOAD_METHOD(arg=5, lineno=64)
         182	CALL_METHOD(arg=0, lineno=64)
         184	LOAD_FAST(arg=5, lineno=64)
         186	LOAD_FAST(arg=12, lineno=64)
         188	STORE_SUBSCR(arg=None, lineno=64)
         190	LOAD_FAST(arg=14, lineno=66)
         192	LOAD_FAST(arg=3, lineno=66)
         194	LOAD_FAST(arg=12, lineno=66)
         196	LOAD_FAST(arg=7, lineno=66)
         198	LOAD_FAST(arg=12, lineno=66)
         200	BINARY_SUBSCR(arg=None, lineno=66)
         202	BUILD_TUPLE(arg=2, lineno=66)
         204	STORE_SUBSCR(arg=None, lineno=66)
         206	LOAD_FAST(arg=17, lineno=67)
         208	LOAD_FAST(arg=4, lineno=67)
         210	LOAD_FAST(arg=12, lineno=67)
         212	LOAD_FAST(arg=7, lineno=67)
         214	LOAD_FAST(arg=12, lineno=67)
         216	BINARY_SUBSCR(arg=None, lineno=67)
         218	BUILD_TUPLE(arg=2, lineno=67)
         220	STORE_SUBSCR(arg=None, lineno=67)
         222	LOAD_FAST(arg=7, lineno=68)
         224	LOAD_FAST(arg=12, lineno=68)
         226	DUP_TOP_TWO(arg=None, lineno=68)
         228	BINARY_SUBSCR(arg=None, lineno=68)
         230	LOAD_CONST(arg=3, lineno=68)
         232	INPLACE_ADD(arg=None, lineno=68)
         234	ROT_THREE(arg=None, lineno=68)
         236	STORE_SUBSCR(arg=None, lineno=68)
         238	JUMP_ABSOLUTE(arg=42, lineno=68)
>        240	JUMP_ABSOLUTE(arg=30, lineno=68)
>        242	LOAD_CONST(arg=0, lineno=68)
         244	RETURN_VALUE(arg=None, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=49)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=49)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=49)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$X2.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=6, inst=UNPACK_SEQUENCE(arg=2, lineno=49)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$4load_attr.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=8, inst=STORE_FAST(arg=9, lineno=49)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$6unpack_sequence.3', '$6unpack_sequence.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=10, inst=STORE_FAST(arg=10, lineno=49)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$6unpack_sequence.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=12, inst=LOAD_FAST(arg=6, lineno=50)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=14, inst=LOAD_ATTR(arg=0, lineno=50)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$max_values12.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=50)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$14load_attr.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=18, inst=BINARY_SUBSCR(arg=None, lineno=50)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$14load_attr.6', '$const16.7']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=20, inst=STORE_FAST(arg=11, lineno=50)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$18binary_subscr.8']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_GLOBAL(arg=1, lineno=52)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_FAST(arg=11, lineno=52)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$22load_global.9']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=26, inst=CALL_FUNCTION(arg=1, lineno=52)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$22load_global.9', '$t24.10']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=28, inst=GET_ITER(arg=None, lineno=52)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$26call_function.11']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$28get_iter.12',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi30.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=30, inst=FOR_ITER(arg=210, lineno=52)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi30.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=242, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=242 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=242, inst=LOAD_CONST(arg=0, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=244, inst=RETURN_VALUE(arg=None, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$const242.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=32, inst=STORE_FAST(arg=12, lineno=52)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=34, inst=LOAD_GLOBAL(arg=2, lineno=53)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=36, inst=LOAD_FAST(arg=9, lineno=53)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$34load_global.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=38, inst=CALL_FUNCTION(arg=1, lineno=53)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$34load_global.2', '$n36.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=40, inst=GET_ITER(arg=None, lineno=53)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$38call_function.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=42, stack=('$phi32.0', '$40get_iter.5'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi42.0', '$phi42.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=42, inst=FOR_ITER(arg=196, lineno=53)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi42.0', '$phi42.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=240, stack=('$phi42.0',), blockstack=(), npush=0), Edge(pc=44, stack=('$phi42.0', '$phi42.1', '$42for_iter.3'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=240 nstack_initial=1), State(pc_initial=44 nstack_initial=3)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi240.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=240, inst=JUMP_ABSOLUTE(arg=30, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi240.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$phi240.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=44 nstack_initial=3), State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi44.0', '$phi44.1', '$phi44.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=44, inst=STORE_FAST(arg=13, lineno=53)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$phi44.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=46, inst=LOAD_FAST(arg=7, lineno=54)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=48, inst=LOAD_FAST(arg=12, lineno=54)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$n_selected46.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=54)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$n_selected46.3', '$j48.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=54)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$50binary_subscr.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=54, inst=COMPARE_OP(arg=2, lineno=54)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$50binary_subscr.5', '$k52.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=62, lineno=54)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$54compare_op.7']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=58, stack=('$phi44.0', '$phi44.1'), blockstack=(), npush=0), Edge(pc=62, stack=('$phi44.0', '$phi44.1'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=58 nstack_initial=2), State(pc_initial=62 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=58 nstack_initial=2), State(pc_initial=62 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi58.0', '$phi58.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=58, inst=POP_TOP(arg=None, lineno=55)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi58.0', '$phi58.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=60, inst=JUMP_ABSOLUTE(arg=30, lineno=55)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi58.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$phi58.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=62 nstack_initial=2), State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=57)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=64, inst=LOAD_FAST(arg=13, lineno=57)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$idxs62.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=57)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$idxs62.2', '$i64.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=68, inst=STORE_FAST(arg=14, lineno=57)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$66binary_subscr.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=70, inst=LOAD_FAST(arg=6, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=72, inst=LOAD_FAST(arg=12, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$max_values70.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=74, inst=BINARY_SUBSCR(arg=None, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$max_values70.5', '$j72.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$74binary_subscr.7']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=78, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$74binary_subscr.7', '$const76.8']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=80, inst=LOAD_FAST(arg=5, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=82, inst=LOAD_FAST(arg=12, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9', '$total_gains80.10']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=84, inst=BINARY_SUBSCR(arg=None, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9', '$total_gains80.10', '$j82.11']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=86, inst=BINARY_SUBTRACT(arg=None, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9', '$84binary_subscr.12']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=88, inst=LOAD_FAST(arg=1, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=90, inst=LOAD_FAST(arg=7, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=92, inst=LOAD_FAST(arg=12, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14', '$n_selected90.15']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14', '$n_selected90.15', '$j92.16']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=96, inst=BINARY_SUBTRACT(arg=None, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14', '$94binary_subscr.17']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=98, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$96binary_subtract.18']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=100, inst=STORE_FAST(arg=15, lineno=58)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$98binary_true_divide.19']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=104, inst=LOAD_METHOD(arg=4, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$102load_global.20']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=106, inst=LOAD_FAST(arg=0, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=108, inst=LOAD_FAST(arg=13, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$X106.22']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=110, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$X106.22', '$i108.23']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=114, inst=LOAD_FAST(arg=10, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24', '$const112.25']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24', '$const112.25', '$d114.26']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=118, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24', '$116build_slice.28']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=120, inst=LOAD_FAST(arg=2, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=122, inst=LOAD_FAST(arg=12, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$current_values120.30']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$current_values120.30', '$j122.31']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=126, inst=LOAD_CONST(arg=0, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=128, inst=LOAD_FAST(arg=10, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32', '$const126.33']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=130, inst=BUILD_SLICE(arg=2, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32', '$const126.33', '$d128.34']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32', '$130build_slice.36']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=134, inst=CALL_METHOD(arg=2, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$132binary_subscr.37']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=136, inst=STORE_FAST(arg=16, lineno=59)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$134call_method.38']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=138, inst=LOAD_FAST(arg=16, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=140, inst=LOAD_METHOD(arg=5, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$maximum138.39']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=142, inst=CALL_METHOD(arg=0, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$140load_method.40']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=144, inst=LOAD_FAST(arg=5, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=146, inst=LOAD_FAST(arg=12, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41', '$total_gains144.42']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=148, inst=BINARY_SUBSCR(arg=None, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41', '$total_gains144.42', '$j146.43']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=150, inst=BINARY_SUBTRACT(arg=None, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41', '$148binary_subscr.44']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=152, inst=STORE_FAST(arg=17, lineno=60)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$150binary_subtract.45']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=154, inst=LOAD_FAST(arg=17, lineno=62)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=156, inst=LOAD_FAST(arg=15, lineno=62)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$gain154.46']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=158, inst=COMPARE_OP(arg=4, lineno=62)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$gain154.46', '$threshold156.47']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=160, inst=POP_JUMP_IF_FALSE(arg=42, lineno=62)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$158compare_op.48']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=162, stack=('$phi62.0', '$phi62.1'), blockstack=(), npush=0), Edge(pc=42, stack=('$phi62.0', '$phi62.1'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=162 nstack_initial=2), State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=162 nstack_initial=2), State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=162, inst=LOAD_FAST(arg=16, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=164, inst=LOAD_FAST(arg=2, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=166, inst=LOAD_FAST(arg=12, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$current_values164.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=168, inst=BINARY_SUBSCR(arg=None, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$current_values164.3', '$j166.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=170, inst=LOAD_CONST(arg=0, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=172, inst=LOAD_FAST(arg=10, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5', '$const170.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=174, inst=BUILD_SLICE(arg=2, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5', '$const170.6', '$d172.7']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=176, inst=STORE_SUBSCR(arg=None, lineno=63)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5', '$174build_slice.9']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=178, inst=LOAD_FAST(arg=16, lineno=64)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=180, inst=LOAD_METHOD(arg=5, lineno=64)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum178.10']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=182, inst=CALL_METHOD(arg=0, lineno=64)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$180load_method.11']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=184, inst=LOAD_FAST(arg=5, lineno=64)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$182call_method.12']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=186, inst=LOAD_FAST(arg=12, lineno=64)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$182call_method.12', '$total_gains184.13']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=188, inst=STORE_SUBSCR(arg=None, lineno=64)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$182call_method.12', '$total_gains184.13', '$j186.14']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=190, inst=LOAD_FAST(arg=14, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=192, inst=LOAD_FAST(arg=3, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=194, inst=LOAD_FAST(arg=12, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=196, inst=LOAD_FAST(arg=7, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=198, inst=LOAD_FAST(arg=12, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17', '$n_selected196.18']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=200, inst=BINARY_SUBSCR(arg=None, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17', '$n_selected196.18', '$j198.19']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=202, inst=BUILD_TUPLE(arg=2, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17', '$200binary_subscr.20']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=204, inst=STORE_SUBSCR(arg=None, lineno=66)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$202build_tuple.21']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=206, inst=LOAD_FAST(arg=17, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=208, inst=LOAD_FAST(arg=4, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=210, inst=LOAD_FAST(arg=12, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=212, inst=LOAD_FAST(arg=7, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=214, inst=LOAD_FAST(arg=12, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24', '$n_selected212.25']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=216, inst=BINARY_SUBSCR(arg=None, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24', '$n_selected212.25', '$j214.26']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=218, inst=BUILD_TUPLE(arg=2, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24', '$216binary_subscr.27']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=220, inst=STORE_SUBSCR(arg=None, lineno=67)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$218build_tuple.28']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=222, inst=LOAD_FAST(arg=7, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=224, inst=LOAD_FAST(arg=12, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=226, inst=DUP_TOP_TWO(arg=None, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=228, inst=BINARY_SUBSCR(arg=None, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$226dup_top_two.31', '$226dup_top_two.32']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=230, inst=LOAD_CONST(arg=3, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$228binary_subscr.33']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=232, inst=INPLACE_ADD(arg=None, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$228binary_subscr.33', '$const230.34']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=234, inst=ROT_THREE(arg=None, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$232inplace_add.35']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=236, inst=STORE_SUBSCR(arg=None, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$232inplace_add.35', '$n_selected222.29', '$j224.30']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=238, inst=JUMP_ABSOLUTE(arg=42, lineno=68)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=42, stack=('$phi162.0', '$phi162.1'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=42 nstack_initial=2), State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=42 nstack_initial=2): {'$phi42.1'},
             State(pc_initial=44 nstack_initial=3): {'$phi44.2'},
             State(pc_initial=58 nstack_initial=2): set(),
             State(pc_initial=62 nstack_initial=2): set(),
             State(pc_initial=162 nstack_initial=2): set(),
             State(pc_initial=240 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:189] DEBUG defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1),
 '$phi42.1': State(pc_initial=32 nstack_initial=2),
 '$phi44.2': State(pc_initial=42 nstack_initial=2)}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi162.1': {('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi240.0': {('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi240.0', State(pc_initial=240 nstack_initial=1)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$phi162.0', State(pc_initial=162 nstack_initial=2)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2)),
                          ('$phi162.1', State(pc_initial=162 nstack_initial=2)),
                          ('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi44.0': {('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi44.1': {('$phi42.1', State(pc_initial=42 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi58.1': {('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi62.0': {('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi62.1': {('$phi44.1', State(pc_initial=44 nstack_initial=3))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi162.1': {('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi240.0': {('$phi162.0',
                            State(pc_initial=162 nstack_initial=2)),
                           ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                           ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi162.0', State(pc_initial=162 nstack_initial=2)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi162.0', State(pc_initial=162 nstack_initial=2)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi162.1': {('$40get_iter.5',
                            State(pc_initial=32 nstack_initial=2))},
             '$phi240.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi162.1': {('$40get_iter.5',
                            State(pc_initial=32 nstack_initial=2))},
             '$phi240.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi162.1': {('$40get_iter.5',
                            State(pc_initial=32 nstack_initial=2))},
             '$phi240.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:220] DEBUG keep phismap: {'$phi30.0': {('$28get_iter.12', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))},
 '$phi42.1': {('$40get_iter.5', State(pc_initial=32 nstack_initial=2))},
 '$phi44.2': {('$42for_iter.3', State(pc_initial=42 nstack_initial=2))}}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.12'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'},
             State(pc_initial=32 nstack_initial=2): {'$phi42.1': '$40get_iter.5'},
             State(pc_initial=42 nstack_initial=2): {'$phi44.2': '$42for_iter.3'}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$X2.0'}), (4, {'item': '$X2.0', 'res': '$4load_attr.1'}), (6, {'iterable': '$4load_attr.1', 'stores': ['$6unpack_sequence.2', '$6unpack_sequence.3'], 'tupleobj': '$6unpack_sequence.4'}), (8, {'value': '$6unpack_sequence.2'}), (10, {'value': '$6unpack_sequence.3'}), (12, {'res': '$max_values12.5'}), (14, {'item': '$max_values12.5', 'res': '$14load_attr.6'}), (16, {'res': '$const16.7'}), (18, {'index': '$const16.7', 'target': '$14load_attr.6', 'res': '$18binary_subscr.8'}), (20, {'value': '$18binary_subscr.8'}), (22, {'res': '$22load_global.9'}), (24, {'res': '$t24.10'}), (26, {'func': '$22load_global.9', 'args': ['$t24.10'], 'res': '$26call_function.11'}), (28, {'value': '$26call_function.11', 'res': '$28get_iter.12'})), outgoing_phis={'$phi30.0': '$28get_iter.12'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.12',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: (), 32: ('$phi30.0', '$30for_iter.2')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$34load_global.2'}), (36, {'res': '$n36.3'}), (38, {'func': '$34load_global.2', 'args': ['$n36.3'], 'res': '$38call_function.4'}), (40, {'value': '$38call_function.4', 'res': '$40get_iter.5'})), outgoing_phis={'$phi42.1': '$40get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi32.0', '$40get_iter.5')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=42 nstack_initial=2):
AdaptBlockInfo(insts=((42, {'iterator': '$phi42.1', 'pair': '$42for_iter.2', 'indval': '$42for_iter.3', 'pred': '$42for_iter.4'}),), outgoing_phis={'$phi44.2': '$42for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: ('$phi42.0',), 44: ('$phi42.0', '$phi42.1', '$42for_iter.3')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=44 nstack_initial=3):
AdaptBlockInfo(insts=((44, {'value': '$phi44.2'}), (46, {'res': '$n_selected46.3'}), (48, {'res': '$j48.4'}), (50, {'index': '$j48.4', 'target': '$n_selected46.3', 'res': '$50binary_subscr.5'}), (52, {'res': '$k52.6'}), (54, {'lhs': '$50binary_subscr.5', 'rhs': '$k52.6', 'res': '$54compare_op.7'}), (56, {'pred': '$54compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$phi44.0', '$phi44.1'), 62: ('$phi44.0', '$phi44.1')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=58 nstack_initial=2):
AdaptBlockInfo(insts=((60, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi58.0',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'res': '$idxs62.2'}), (64, {'res': '$i64.3'}), (66, {'index': '$i64.3', 'target': '$idxs62.2', 'res': '$66binary_subscr.4'}), (68, {'value': '$66binary_subscr.4'}), (70, {'res': '$max_values70.5'}), (72, {'res': '$j72.6'}), (74, {'index': '$j72.6', 'target': '$max_values70.5', 'res': '$74binary_subscr.7'}), (76, {'res': '$const76.8'}), (78, {'lhs': '$74binary_subscr.7', 'rhs': '$const76.8', 'res': '$78binary_true_divide.9'}), (80, {'res': '$total_gains80.10'}), (82, {'res': '$j82.11'}), (84, {'index': '$j82.11', 'target': '$total_gains80.10', 'res': '$84binary_subscr.12'}), (86, {'lhs': '$78binary_true_divide.9', 'rhs': '$84binary_subscr.12', 'res': '$86binary_subtract.13'}), (88, {'res': '$k88.14'}), (90, {'res': '$n_selected90.15'}), (92, {'res': '$j92.16'}), (94, {'index': '$j92.16', 'target': '$n_selected90.15', 'res': '$94binary_subscr.17'}), (96, {'lhs': '$k88.14', 'rhs': '$94binary_subscr.17', 'res': '$96binary_subtract.18'}), (98, {'lhs': '$86binary_subtract.13', 'rhs': '$96binary_subtract.18', 'res': '$98binary_true_divide.19'}), (100, {'value': '$98binary_true_divide.19'}), (102, {'res': '$102load_global.20'}), (104, {'item': '$102load_global.20', 'res': '$104load_method.21'}), (106, {'res': '$X106.22'}), (108, {'res': '$i108.23'}), (110, {'index': '$i108.23', 'target': '$X106.22', 'res': '$110binary_subscr.24'}), (112, {'res': '$const112.25'}), (114, {'res': '$d114.26'}), (116, {'start': '$const112.25', 'stop': '$d114.26', 'step': None, 'res': '$116build_slice.28', 'slicevar': '$116build_slice.27'}), (118, {'index': '$116build_slice.28', 'target': '$110binary_subscr.24', 'res': '$118binary_subscr.29'}), (120, {'res': '$current_values120.30'}), (122, {'res': '$j122.31'}), (124, {'index': '$j122.31', 'target': '$current_values120.30', 'res': '$124binary_subscr.32'}), (126, {'res': '$const126.33'}), (128, {'res': '$d128.34'}), (130, {'start': '$const126.33', 'stop': '$d128.34', 'step': None, 'res': '$130build_slice.36', 'slicevar': '$130build_slice.35'}), (132, {'index': '$130build_slice.36', 'target': '$124binary_subscr.32', 'res': '$132binary_subscr.37'}), (134, {'func': '$104load_method.21', 'args': ['$118binary_subscr.29', '$132binary_subscr.37'], 'res': '$134call_method.38'}), (136, {'value': '$134call_method.38'}), (138, {'res': '$maximum138.39'}), (140, {'item': '$maximum138.39', 'res': '$140load_method.40'}), (142, {'func': '$140load_method.40', 'args': [], 'res': '$142call_method.41'}), (144, {'res': '$total_gains144.42'}), (146, {'res': '$j146.43'}), (148, {'index': '$j146.43', 'target': '$total_gains144.42', 'res': '$148binary_subscr.44'}), (150, {'lhs': '$142call_method.41', 'rhs': '$148binary_subscr.44', 'res': '$150binary_subtract.45'}), (152, {'value': '$150binary_subtract.45'}), (154, {'res': '$gain154.46'}), (156, {'res': '$threshold156.47'}), (158, {'lhs': '$gain154.46', 'rhs': '$threshold156.47', 'res': '$158compare_op.48'}), (160, {'pred': '$158compare_op.48'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: ('$phi62.0', '$phi62.1'), 42: ('$phi62.0', '$phi62.1')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=162 nstack_initial=2):
AdaptBlockInfo(insts=((162, {'res': '$maximum162.2'}), (164, {'res': '$current_values164.3'}), (166, {'res': '$j166.4'}), (168, {'index': '$j166.4', 'target': '$current_values164.3', 'res': '$168binary_subscr.5'}), (170, {'res': '$const170.6'}), (172, {'res': '$d172.7'}), (174, {'start': '$const170.6', 'stop': '$d172.7', 'step': None, 'res': '$174build_slice.9', 'slicevar': '$174build_slice.8'}), (176, {'target': '$168binary_subscr.5', 'index': '$174build_slice.9', 'value': '$maximum162.2'}), (178, {'res': '$maximum178.10'}), (180, {'item': '$maximum178.10', 'res': '$180load_method.11'}), (182, {'func': '$180load_method.11', 'args': [], 'res': '$182call_method.12'}), (184, {'res': '$total_gains184.13'}), (186, {'res': '$j186.14'}), (188, {'target': '$total_gains184.13', 'index': '$j186.14', 'value': '$182call_method.12'}), (190, {'res': '$idx190.15'}), (192, {'res': '$selections192.16'}), (194, {'res': '$j194.17'}), (196, {'res': '$n_selected196.18'}), (198, {'res': '$j198.19'}), (200, {'index': '$j198.19', 'target': '$n_selected196.18', 'res': '$200binary_subscr.20'}), (202, {'items': ['$j194.17', '$200binary_subscr.20'], 'res': '$202build_tuple.21'}), (204, {'target': '$selections192.16', 'index': '$202build_tuple.21', 'value': '$idx190.15'}), (206, {'res': '$gain206.22'}), (208, {'res': '$gains208.23'}), (210, {'res': '$j210.24'}), (212, {'res': '$n_selected212.25'}), (214, {'res': '$j214.26'}), (216, {'index': '$j214.26', 'target': '$n_selected212.25', 'res': '$216binary_subscr.27'}), (218, {'items': ['$j210.24', '$216binary_subscr.27'], 'res': '$218build_tuple.28'}), (220, {'target': '$gains208.23', 'index': '$218build_tuple.28', 'value': '$gain206.22'}), (222, {'res': '$n_selected222.29'}), (224, {'res': '$j224.30'}), (226, {'orig': ['$n_selected222.29', '$j224.30'], 'duped': ['$226dup_top_two.31', '$226dup_top_two.32']}), (228, {'index': '$226dup_top_two.32', 'target': '$226dup_top_two.31', 'res': '$228binary_subscr.33'}), (230, {'res': '$const230.34'}), (232, {'lhs': '$228binary_subscr.33', 'rhs': '$const230.34', 'res': '$232inplace_add.35'}), (236, {'target': '$n_selected222.29', 'index': '$j224.30', 'value': '$232inplace_add.35'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi162.0', '$phi162.1')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=240 nstack_initial=1):
AdaptBlockInfo(insts=((240, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi240.0',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=242 nstack_initial=0):
AdaptBlockInfo(insts=((242, {'res': '$const242.0'}), (244, {'retval': '$const242.0', 'castval': '$244return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:36 interpreter.py[line:379] DEBUG label 0:
    X = arg(0, name=X)                       ['X']
    k = arg(1, name=k)                       ['k']
    current_values = arg(2, name=current_values) ['current_values']
    selections = arg(3, name=selections)     ['selections']
    gains = arg(4, name=gains)               ['gains']
    total_gains = arg(5, name=total_gains)   ['total_gains']
    max_values = arg(6, name=max_values)     ['max_values']
    n_selected = arg(7, name=n_selected)     ['n_selected']
    idxs = arg(8, name=idxs)                 ['idxs']
    $4load_attr.1 = getattr(value=X, attr=shape) ['$4load_attr.1', 'X']
    $6unpack_sequence.4 = exhaust_iter(value=$4load_attr.1, count=2) ['$4load_attr.1', '$6unpack_sequence.4']
    $6unpack_sequence.2 = static_getitem(value=$6unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$6unpack_sequence.2', '$6unpack_sequence.4']
    $6unpack_sequence.3 = static_getitem(value=$6unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$6unpack_sequence.3', '$6unpack_sequence.4']
    n = $6unpack_sequence.2                  ['$6unpack_sequence.2', 'n']
    d = $6unpack_sequence.3                  ['$6unpack_sequence.3', 'd']
    $14load_attr.6 = getattr(value=max_values, attr=shape) ['$14load_attr.6', 'max_values']
    $const16.7 = const(int, 0)               ['$const16.7']
    t = getitem(value=$14load_attr.6, index=$const16.7, fn=<built-in function getitem>) ['$14load_attr.6', '$const16.7', 't']
    $22load_global.9 = global(prange: <class 'numba.misc.special.prange'>) ['$22load_global.9']
    $26call_function.11 = call $22load_global.9(t, func=$22load_global.9, args=[Var(t, facilityLocation.py:50)], kws=(), vararg=None) ['$22load_global.9', '$26call_function.11', 't']
    $28get_iter.12 = getiter(value=$26call_function.11) ['$26call_function.11', '$28get_iter.12']
    $phi30.0 = $28get_iter.12                ['$28get_iter.12', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 242            ['$30for_iter.3']
label 32:
    j = $phi32.1                             ['$phi32.1', 'j']
    $34load_global.2 = global(range: <class 'range'>) ['$34load_global.2']
    $38call_function.4 = call $34load_global.2(n, func=$34load_global.2, args=[Var(n, facilityLocation.py:49)], kws=(), vararg=None) ['$34load_global.2', '$38call_function.4', 'n']
    $40get_iter.5 = getiter(value=$38call_function.4) ['$38call_function.4', '$40get_iter.5']
    $phi42.1 = $40get_iter.5                 ['$40get_iter.5', '$phi42.1']
    jump 42                                  []
label 42:
    $42for_iter.2 = iternext(value=$phi42.1) ['$42for_iter.2', '$phi42.1']
    $42for_iter.3 = pair_first(value=$42for_iter.2) ['$42for_iter.2', '$42for_iter.3']
    $42for_iter.4 = pair_second(value=$42for_iter.2) ['$42for_iter.2', '$42for_iter.4']
    $phi44.2 = $42for_iter.3                 ['$42for_iter.3', '$phi44.2']
    branch $42for_iter.4, 44, 240            ['$42for_iter.4']
label 44:
    i = $phi44.2                             ['$phi44.2', 'i']
    $50binary_subscr.5 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$50binary_subscr.5', 'j', 'n_selected']
    $54compare_op.7 = $50binary_subscr.5 == k ['$50binary_subscr.5', '$54compare_op.7', 'k']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.7, func=bool56, args=(Var($54compare_op.7, facilityLocation.py:54),), kws=(), vararg=None) ['$54compare_op.7', '$56pred', 'bool56']
    branch $56pred, 58, 62                   ['$56pred']
label 58:
    jump 30                                  []
label 62:
    idx = getitem(value=idxs, index=i, fn=<built-in function getitem>) ['i', 'idx', 'idxs']
    $74binary_subscr.7 = getitem(value=max_values, index=j, fn=<built-in function getitem>) ['$74binary_subscr.7', 'j', 'max_values']
    $const76.8 = const(float, 2.0)           ['$const76.8']
    $78binary_true_divide.9 = $74binary_subscr.7 / $const76.8 ['$74binary_subscr.7', '$78binary_true_divide.9', '$const76.8']
    $84binary_subscr.12 = getitem(value=total_gains, index=j, fn=<built-in function getitem>) ['$84binary_subscr.12', 'j', 'total_gains']
    $86binary_subtract.13 = $78binary_true_divide.9 - $84binary_subscr.12 ['$78binary_true_divide.9', '$84binary_subscr.12', '$86binary_subtract.13']
    $94binary_subscr.17 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$94binary_subscr.17', 'j', 'n_selected']
    $96binary_subtract.18 = k - $94binary_subscr.17 ['$94binary_subscr.17', '$96binary_subtract.18', 'k']
    threshold = $86binary_subtract.13 / $96binary_subtract.18 ['$86binary_subtract.13', '$96binary_subtract.18', 'threshold']
    $102load_global.20 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>) ['$102load_global.20']
    $104load_method.21 = getattr(value=$102load_global.20, attr=maximum) ['$102load_global.20', '$104load_method.21']
    $110binary_subscr.24 = getitem(value=X, index=i, fn=<built-in function getitem>) ['$110binary_subscr.24', 'X', 'i']
    $const112.25 = const(NoneType, None)     ['$const112.25']
    $116build_slice.27 = global(slice: <class 'slice'>) ['$116build_slice.27']
    $116build_slice.28 = call $116build_slice.27($const112.25, d, func=$116build_slice.27, args=(Var($const112.25, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None) ['$116build_slice.27', '$116build_slice.28', '$const112.25', 'd']
    $118binary_subscr.29 = getitem(value=$110binary_subscr.24, index=$116build_slice.28, fn=<built-in function getitem>) ['$110binary_subscr.24', '$116build_slice.28', '$118binary_subscr.29']
    $124binary_subscr.32 = getitem(value=current_values, index=j, fn=<built-in function getitem>) ['$124binary_subscr.32', 'current_values', 'j']
    $const126.33 = const(NoneType, None)     ['$const126.33']
    $130build_slice.35 = global(slice: <class 'slice'>) ['$130build_slice.35']
    $130build_slice.36 = call $130build_slice.35($const126.33, d, func=$130build_slice.35, args=(Var($const126.33, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None) ['$130build_slice.35', '$130build_slice.36', '$const126.33', 'd']
    $132binary_subscr.37 = getitem(value=$124binary_subscr.32, index=$130build_slice.36, fn=<built-in function getitem>) ['$124binary_subscr.32', '$130build_slice.36', '$132binary_subscr.37']
    maximum = call $104load_method.21($118binary_subscr.29, $132binary_subscr.37, func=$104load_method.21, args=[Var($118binary_subscr.29, facilityLocation.py:59), Var($132binary_subscr.37, facilityLocation.py:59)], kws=(), vararg=None) ['$104load_method.21', '$118binary_subscr.29', '$132binary_subscr.37', 'maximum']
    $140load_method.40 = getattr(value=maximum, attr=mean) ['$140load_method.40', 'maximum']
    $142call_method.41 = call $140load_method.40(func=$140load_method.40, args=[], kws=(), vararg=None) ['$140load_method.40', '$142call_method.41']
    $148binary_subscr.44 = getitem(value=total_gains, index=j, fn=<built-in function getitem>) ['$148binary_subscr.44', 'j', 'total_gains']
    gain = $142call_method.41 - $148binary_subscr.44 ['$142call_method.41', '$148binary_subscr.44', 'gain']
    $158compare_op.48 = gain > threshold     ['$158compare_op.48', 'gain', 'threshold']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($158compare_op.48, func=bool160, args=(Var($158compare_op.48, facilityLocation.py:62),), kws=(), vararg=None) ['$158compare_op.48', '$160pred', 'bool160']
    branch $160pred, 162, 42                 ['$160pred']
label 162:
    $168binary_subscr.5 = getitem(value=current_values, index=j, fn=<built-in function getitem>) ['$168binary_subscr.5', 'current_values', 'j']
    $const170.6 = const(NoneType, None)      ['$const170.6']
    $174build_slice.8 = global(slice: <class 'slice'>) ['$174build_slice.8']
    $174build_slice.9 = call $174build_slice.8($const170.6, d, func=$174build_slice.8, args=(Var($const170.6, facilityLocation.py:63), Var(d, facilityLocation.py:49)), kws=(), vararg=None) ['$174build_slice.8', '$174build_slice.9', '$const170.6', 'd']
    $168binary_subscr.5[$174build_slice.9] = maximum ['$168binary_subscr.5', '$174build_slice.9', 'maximum']
    $180load_method.11 = getattr(value=maximum, attr=mean) ['$180load_method.11', 'maximum']
    $182call_method.12 = call $180load_method.11(func=$180load_method.11, args=[], kws=(), vararg=None) ['$180load_method.11', '$182call_method.12']
    total_gains[j] = $182call_method.12      ['$182call_method.12', 'j', 'total_gains']
    $200binary_subscr.20 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$200binary_subscr.20', 'j', 'n_selected']
    $202build_tuple.21 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($200binary_subscr.20, facilityLocation.py:66)]) ['$200binary_subscr.20', '$202build_tuple.21', 'j']
    selections[$202build_tuple.21] = idx     ['$202build_tuple.21', 'idx', 'selections']
    $216binary_subscr.27 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$216binary_subscr.27', 'j', 'n_selected']
    $218build_tuple.28 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($216binary_subscr.27, facilityLocation.py:67)]) ['$216binary_subscr.27', '$218build_tuple.28', 'j']
    gains[$218build_tuple.28] = gain         ['$218build_tuple.28', 'gain', 'gains']
    $228binary_subscr.33 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$228binary_subscr.33', 'j', 'n_selected']
    $const230.34 = const(int, 1)             ['$const230.34']
    $232inplace_add.35 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$228binary_subscr.33, rhs=$const230.34, static_lhs=Undefined, static_rhs=Undefined) ['$228binary_subscr.33', '$232inplace_add.35', '$const230.34']
    n_selected[j] = $232inplace_add.35       ['$232inplace_add.35', 'j', 'n_selected']
    jump 42                                  []
label 240:
    jump 30                                  []
label 242:
    $const242.0 = const(NoneType, None)      ['$const242.0']
    $244return_value.1 = cast(value=$const242.0) ['$244return_value.1', '$const242.0']
    return $244return_value.1                ['$244return_value.1']

Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: X = arg(0, name=X)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: k = arg(1, name=k)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: current_values = arg(2, name=current_values)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: selections = arg(3, name=selections)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: gains = arg(4, name=gains)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: total_gains = arg(5, name=total_gains)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: max_values = arg(6, name=max_values)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: n_selected = arg(7, name=n_selected)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: idxs = arg(8, name=idxs)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $4load_attr.1 = getattr(value=X, attr=shape)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $6unpack_sequence.4 = exhaust_iter(value=$4load_attr.1, count=2)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $6unpack_sequence.2 = static_getitem(value=$6unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $6unpack_sequence.3 = static_getitem(value=$6unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: n = $6unpack_sequence.2
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: d = $6unpack_sequence.3
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $14load_attr.6 = getattr(value=max_values, attr=shape)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const16.7 = const(int, 0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: t = static_getitem(value=$14load_attr.6, index=0, index_var=$const16.7, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $22load_global.9 = global(prange: <class 'numba.misc.special.prange'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $26call_function.11 = call $22load_global.9(t, func=$22load_global.9, args=[Var(t, facilityLocation.py:50)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $28get_iter.12 = getiter(value=$26call_function.11)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $phi30.0 = $28get_iter.12
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 30
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $30for_iter.1 = iternext(value=$phi30.0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $30for_iter.2 = pair_first(value=$30for_iter.1)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $30for_iter.3 = pair_second(value=$30for_iter.1)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $phi32.1 = $30for_iter.2
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $30for_iter.3, 32, 242
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 32
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: j = $phi32.1
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $34load_global.2 = global(range: <class 'range'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $38call_function.4 = call $34load_global.2(n, func=$34load_global.2, args=[Var(n, facilityLocation.py:49)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $40get_iter.5 = getiter(value=$38call_function.4)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $phi42.1 = $40get_iter.5
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 42
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 42
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $42for_iter.2 = iternext(value=$phi42.1)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $42for_iter.3 = pair_first(value=$42for_iter.2)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $42for_iter.4 = pair_second(value=$42for_iter.2)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $phi44.2 = $42for_iter.3
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $42for_iter.4, 44, 240
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 44
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: i = $phi44.2
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $50binary_subscr.5 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $54compare_op.7 = $50binary_subscr.5 == k
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: bool56 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $56pred = call bool56($54compare_op.7, func=bool56, args=(Var($54compare_op.7, facilityLocation.py:54),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $56pred, 58, 62
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 58
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 243
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 62
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: idx = getitem(value=idxs, index=i, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $74binary_subscr.7 = getitem(value=max_values, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const76.8 = const(float, 2.0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $78binary_true_divide.9 = $74binary_subscr.7 / $const76.8
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $84binary_subscr.12 = getitem(value=total_gains, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $86binary_subtract.13 = $78binary_true_divide.9 - $84binary_subscr.12
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $94binary_subscr.17 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $96binary_subtract.18 = k - $94binary_subscr.17
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: threshold = $86binary_subtract.13 / $96binary_subtract.18
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $102load_global.20 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $104load_method.21 = getattr(value=$102load_global.20, attr=maximum)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24 = getitem(value=X, index=i, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const112.25 = const(NoneType, None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $116build_slice.27 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $116build_slice.28 = call $116build_slice.27($const112.25, d, func=$116build_slice.27, args=(Var($const112.25, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $118binary_subscr.29 = getitem(value=$110binary_subscr.24, index=$116build_slice.28, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $124binary_subscr.32 = getitem(value=current_values, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const126.33 = const(NoneType, None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $130build_slice.35 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $130build_slice.36 = call $130build_slice.35($const126.33, d, func=$130build_slice.35, args=(Var($const126.33, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $132binary_subscr.37 = getitem(value=$124binary_subscr.32, index=$130build_slice.36, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: maximum = call $104load_method.21($118binary_subscr.29, $132binary_subscr.37, func=$104load_method.21, args=[Var($118binary_subscr.29, facilityLocation.py:59), Var($132binary_subscr.37, facilityLocation.py:59)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $140load_method.40 = getattr(value=maximum, attr=mean)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $142call_method.41 = call $140load_method.40(func=$140load_method.40, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $148binary_subscr.44 = getitem(value=total_gains, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: gain = $142call_method.41 - $148binary_subscr.44
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $158compare_op.48 = gain > threshold
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: bool160 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $160pred = call bool160($158compare_op.48, func=bool160, args=(Var($158compare_op.48, facilityLocation.py:62),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $160pred, 162, 244
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 162
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5 = getitem(value=current_values, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const170.6 = const(NoneType, None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $174build_slice.8 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $174build_slice.9 = call $174build_slice.8($const170.6, d, func=$174build_slice.8, args=(Var($const170.6, facilityLocation.py:63), Var(d, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5[$174build_slice.9] = maximum
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $180load_method.11 = getattr(value=maximum, attr=mean)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $182call_method.12 = call $180load_method.11(func=$180load_method.11, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: total_gains[j] = $182call_method.12
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $200binary_subscr.20 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $202build_tuple.21 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($200binary_subscr.20, facilityLocation.py:66)])
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: selections[$202build_tuple.21] = idx
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $216binary_subscr.27 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $218build_tuple.28 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($216binary_subscr.27, facilityLocation.py:67)])
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: gains[$218build_tuple.28] = gain
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $228binary_subscr.33 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const230.34 = const(int, 1)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $232inplace_add.35 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$228binary_subscr.33, rhs=$const230.34, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: n_selected[j] = $232inplace_add.35
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 244
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 240
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 243
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 242
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const242.0 = const(NoneType, None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $244return_value.1 = cast(value=$const242.0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: return $244return_value.1
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 243
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 244
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9623e643d0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 42
Sat, 02 Apr 2022 20:25:36 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$102load_global.20': [<numba.core.ir.Assign object at 0x7f9623e4e7c0>],
             '$104load_method.21': [<numba.core.ir.Assign object at 0x7f9623e4e940>],
             '$110binary_subscr.24': [<numba.core.ir.Assign object at 0x7f9623e4ed00>],
             '$116build_slice.27': [<numba.core.ir.Assign object at 0x7f9623e4d190>],
             '$116build_slice.28': [<numba.core.ir.Assign object at 0x7f9623e4d2b0>],
             '$118binary_subscr.29': [<numba.core.ir.Assign object at 0x7f9623e4d400>],
             '$124binary_subscr.32': [<numba.core.ir.Assign object at 0x7f9623e4d7c0>],
             '$130build_slice.35': [<numba.core.ir.Assign object at 0x7f9623e4dc10>],
             '$130build_slice.36': [<numba.core.ir.Assign object at 0x7f9623e4dd30>],
             '$132binary_subscr.37': [<numba.core.ir.Assign object at 0x7f9623e4de80>],
             '$140load_method.40': [<numba.core.ir.Assign object at 0x7f9623e4c400>],
             '$142call_method.41': [<numba.core.ir.Assign object at 0x7f9623e4c5b0>],
             '$148binary_subscr.44': [<numba.core.ir.Assign object at 0x7f9623e4c940>],
             '$14load_attr.6': [<numba.core.ir.Assign object at 0x7f9623e603a0>],
             '$158compare_op.48': [<numba.core.ir.Assign object at 0x7f9623e4cfa0>],
             '$160pred': [<numba.core.ir.Assign object at 0x7f9623e4b280>],
             '$168binary_subscr.5': [<numba.core.ir.Assign object at 0x7f9623e4c190>],
             '$174build_slice.8': [<numba.core.ir.Assign object at 0x7f9623e4b3d0>],
             '$174build_slice.9': [<numba.core.ir.Assign object at 0x7f9623e4b4f0>],
             '$180load_method.11': [<numba.core.ir.Assign object at 0x7f9623e4b820>],
             '$182call_method.12': [<numba.core.ir.Assign object at 0x7f9623e4b9d0>],
             '$200binary_subscr.20': [<numba.core.ir.Assign object at 0x7f9623e4a400>],
             '$202build_tuple.21': [<numba.core.ir.Assign object at 0x7f9623e4a5b0>],
             '$216binary_subscr.27': [<numba.core.ir.Assign object at 0x7f9623e4ad60>],
             '$218build_tuple.28': [<numba.core.ir.Assign object at 0x7f9623e4af10>],
             '$228binary_subscr.33': [<numba.core.ir.Assign object at 0x7f9623e49580>],
             '$22load_global.9': [<numba.core.ir.Assign object at 0x7f9623e60940>],
             '$232inplace_add.35': [<numba.core.ir.Assign object at 0x7f9623e49880>],
             '$244return_value.1': [<numba.core.ir.Assign object at 0x7f9623e4aaf0>],
             '$26call_function.11': [<numba.core.ir.Assign object at 0x7f9623e60c10>],
             '$28get_iter.12': [<numba.core.ir.Assign object at 0x7f9623e60d60>],
             '$30for_iter.1': [<numba.core.ir.Assign object at 0x7f9623e60fa0>],
             '$30for_iter.2': [<numba.core.ir.Assign object at 0x7f9623e51100>],
             '$30for_iter.3': [<numba.core.ir.Assign object at 0x7f9623e51220>],
             '$34load_global.2': [<numba.core.ir.Assign object at 0x7f9623e51640>],
             '$38call_function.4': [<numba.core.ir.Assign object at 0x7f9623e51910>],
             '$40get_iter.5': [<numba.core.ir.Assign object at 0x7f9623e51a60>],
             '$42for_iter.2': [<numba.core.ir.Assign object at 0x7f9623e51dc0>],
             '$42for_iter.3': [<numba.core.ir.Assign object at 0x7f9623e51ee0>],
             '$42for_iter.4': [<numba.core.ir.Assign object at 0x7f9623e50040>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f9623e6eac0>],
             '$50binary_subscr.5': [<numba.core.ir.Assign object at 0x7f9623e506a0>],
             '$54compare_op.7': [<numba.core.ir.Assign object at 0x7f9623e50940>],
             '$56pred': [<numba.core.ir.Assign object at 0x7f9623e50be0>],
             '$6unpack_sequence.2': [<numba.core.ir.Assign object at 0x7f9623e6ed90>],
             '$6unpack_sequence.3': [<numba.core.ir.Assign object at 0x7f9623e6eeb0>],
             '$6unpack_sequence.4': [<numba.core.ir.Assign object at 0x7f9623e6ec40>],
             '$74binary_subscr.7': [<numba.core.ir.Assign object at 0x7f9623e4f4c0>],
             '$78binary_true_divide.9': [<numba.core.ir.Assign object at 0x7f9623e4f7c0>],
             '$84binary_subscr.12': [<numba.core.ir.Assign object at 0x7f9623e4fb80>],
             '$86binary_subtract.13': [<numba.core.ir.Assign object at 0x7f9623e4fd00>],
             '$94binary_subscr.17': [<numba.core.ir.Assign object at 0x7f9623e4e220>],
             '$96binary_subtract.18': [<numba.core.ir.Assign object at 0x7f9623e4e3a0>],
             '$const112.25': [<numba.core.ir.Assign object at 0x7f9623e4ee80>],
             '$const126.33': [<numba.core.ir.Assign object at 0x7f9623e4d940>],
             '$const16.7': [<numba.core.ir.Assign object at 0x7f9623e60520>],
             '$const170.6': [<numba.core.ir.Assign object at 0x7f9623e4cc10>],
             '$const230.34': [<numba.core.ir.Assign object at 0x7f9623e49700>],
             '$const242.0': [<numba.core.ir.Assign object at 0x7f9623e4a2b0>],
             '$const76.8': [<numba.core.ir.Assign object at 0x7f9623e4f640>],
             '$phi30.0': [<numba.core.ir.Assign object at 0x7f9662bef310>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7f9623e60eb0>],
             '$phi42.1': [<numba.core.ir.Assign object at 0x7f9623e51790>],
             '$phi44.2': [<numba.core.ir.Assign object at 0x7f9623e51cd0>],
             'X': [<numba.core.ir.Assign object at 0x7f9662bd3400>],
             'bool160': [<numba.core.ir.Assign object at 0x7f9623e4b160>],
             'bool56': [<numba.core.ir.Assign object at 0x7f9623e50ac0>],
             'current_values': [<numba.core.ir.Assign object at 0x7f967ee14df0>],
             'd': [<numba.core.ir.Assign object at 0x7f9623e60100>],
             'gain': [<numba.core.ir.Assign object at 0x7f9623e4cac0>],
             'gains': [<numba.core.ir.Assign object at 0x7f9623e75130>],
             'i': [<numba.core.ir.Assign object at 0x7f9623e502e0>],
             'idx': [<numba.core.ir.Assign object at 0x7f9662bef130>],
             'idxs': [<numba.core.ir.Assign object at 0x7f9623e6e820>],
             'j': [<numba.core.ir.Assign object at 0x7f9623e514c0>],
             'k': [<numba.core.ir.Assign object at 0x7f967ee14490>],
             'max_values': [<numba.core.ir.Assign object at 0x7f9623e6e5e0>],
             'maximum': [<numba.core.ir.Assign object at 0x7f9623e4c070>],
             'n': [<numba.core.ir.Assign object at 0x7f9623e6efa0>],
             'n_selected': [<numba.core.ir.Assign object at 0x7f9623e6e700>],
             'selections': [<numba.core.ir.Assign object at 0x7f967ee14100>],
             't': [<numba.core.ir.Assign object at 0x7f9623af88b0>],
             'threshold': [<numba.core.ir.Assign object at 0x7f9623e4e520>],
             'total_gains': [<numba.core.ir.Assign object at 0x7f9623e6e100>]})
Sat, 02 Apr 2022 20:25:36 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=299)
           2	LOAD_GLOBAL(arg=0, lineno=299)
           4	LOAD_ATTR(arg=1, lineno=299)
           6	LOAD_ATTR(arg=2, lineno=299)
           8	LOAD_METHOD(arg=3, lineno=299)
          10	CALL_METHOD(arg=0, lineno=299)
          12	POP_TOP(arg=None, lineno=299)
          14	LOAD_DEREF(arg=0, lineno=300)
          16	STORE_FAST(arg=1, lineno=300)
          18	LOAD_GLOBAL(arg=0, lineno=301)
          20	LOAD_ATTR(arg=1, lineno=301)
          22	LOAD_ATTR(arg=2, lineno=301)
          24	LOAD_METHOD(arg=4, lineno=301)
          26	LOAD_GLOBAL(arg=5, lineno=301)
          28	LOAD_FAST(arg=0, lineno=301)
          30	CALL_FUNCTION(arg=1, lineno=301)
          32	CALL_METHOD(arg=1, lineno=301)
          34	GET_ITER(arg=None, lineno=301)
>         36	FOR_ITER(arg=16, lineno=301)
          38	STORE_FAST(arg=2, lineno=301)
          40	LOAD_FAST(arg=1, lineno=302)
          42	LOAD_FAST(arg=0, lineno=302)
          44	LOAD_FAST(arg=2, lineno=302)
          46	BINARY_SUBSCR(arg=None, lineno=302)
          48	INPLACE_ADD(arg=None, lineno=302)
          50	STORE_FAST(arg=1, lineno=302)
          52	JUMP_ABSOLUTE(arg=36, lineno=302)
>         54	LOAD_FAST(arg=1, lineno=303)
          56	LOAD_GLOBAL(arg=5, lineno=303)
          58	LOAD_FAST(arg=0, lineno=303)
          60	CALL_FUNCTION(arg=1, lineno=303)
          62	BINARY_TRUE_DIVIDE(arg=None, lineno=303)
          64	RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_ATTR(arg=2, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$4load_attr.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=8, inst=LOAD_METHOD(arg=3, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$6load_attr.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=10, inst=CALL_METHOD(arg=0, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$8load_method.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=12, inst=POP_TOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$10call_method.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=14, inst=LOAD_DEREF(arg=0, lineno=300)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=16, inst=STORE_FAST(arg=1, lineno=300)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$14load_deref.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$18load_global.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$20load_attr.7']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_METHOD(arg=4, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$22load_attr.8']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10', '$in_arr28.11']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=32, inst=CALL_METHOD(arg=1, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$30call_function.12']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=34, inst=GET_ITER(arg=None, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$32call_method.13']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$34get_iter.14',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi36.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=36, inst=FOR_ITER(arg=16, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi36.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=56, inst=LOAD_GLOBAL(arg=5, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=60, inst=CALL_FUNCTION(arg=1, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1', '$in_arr58.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=62, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0', '$60call_function.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$62binary_true_divide.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=38, inst=STORE_FAST(arg=2, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3', '$i44.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=48, inst=INPLACE_ADD(arg=None, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$46binary_subscr.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=50, inst=STORE_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$48inplace_add.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=52, inst=JUMP_ABSOLUTE(arg=36, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$phi38.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=54 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:189] DEBUG defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:220] DEBUG keep phismap: {'$phi36.0': {('$34get_iter.14', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.14'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'item': '$4load_attr.1', 'res': '$6load_attr.2'}), (8, {'item': '$6load_attr.2', 'res': '$8load_method.3'}), (10, {'func': '$8load_method.3', 'args': [], 'res': '$10call_method.4'}), (14, {'res': '$14load_deref.5'}), (16, {'value': '$14load_deref.5'}), (18, {'res': '$18load_global.6'}), (20, {'item': '$18load_global.6', 'res': '$20load_attr.7'}), (22, {'item': '$20load_attr.7', 'res': '$22load_attr.8'}), (24, {'item': '$22load_attr.8', 'res': '$24load_method.9'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$in_arr28.11'}), (30, {'func': '$26load_global.10', 'args': ['$in_arr28.11'], 'res': '$30call_function.12'}), (32, {'func': '$24load_method.9', 'args': ['$30call_function.12'], 'res': '$32call_method.13'}), (34, {'value': '$32call_method.13', 'res': '$34get_iter.14'})), outgoing_phis={'$phi36.0': '$34get_iter.14'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.14',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 38: ('$phi36.0', '$36for_iter.2')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$val40.2'}), (42, {'res': '$in_arr42.3'}), (44, {'res': '$i44.4'}), (46, {'index': '$i44.4', 'target': '$in_arr42.3', 'res': '$46binary_subscr.5'}), (48, {'lhs': '$val40.2', 'rhs': '$46binary_subscr.5', 'res': '$48inplace_add.6'}), (50, {'value': '$48inplace_add.6'}), (52, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi38.0',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$val54.0'}), (56, {'res': '$56load_global.1'}), (58, {'res': '$in_arr58.2'}), (60, {'func': '$56load_global.1', 'args': ['$in_arr58.2'], 'res': '$60call_function.3'}), (62, {'lhs': '$val54.0', 'rhs': '$60call_function.3', 'res': '$62binary_true_divide.4'}), (64, {'retval': '$62binary_true_divide.4', 'castval': '$64return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:36 interpreter.py[line:379] DEBUG label 0:
    in_arr = arg(0, name=in_arr)             ['in_arr']
    $2load_global.0 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=parfors) ['$2load_global.0', '$4load_attr.1']
    $6load_attr.2 = getattr(value=$4load_attr.1, attr=parfor) ['$4load_attr.1', '$6load_attr.2']
    $8load_method.3 = getattr(value=$6load_attr.2, attr=init_prange) ['$6load_attr.2', '$8load_method.3']
    $10call_method.4 = call $8load_method.3(func=$8load_method.3, args=[], kws=(), vararg=None) ['$10call_method.4', '$8load_method.3']
    val = freevar(zero: 0.0)                 ['val']
    $18load_global.6 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$18load_global.6']
    $20load_attr.7 = getattr(value=$18load_global.6, attr=parfors) ['$18load_global.6', '$20load_attr.7']
    $22load_attr.8 = getattr(value=$20load_attr.7, attr=parfor) ['$20load_attr.7', '$22load_attr.8']
    $24load_method.9 = getattr(value=$22load_attr.8, attr=internal_prange) ['$22load_attr.8', '$24load_method.9']
    $26load_global.10 = global(len: <built-in function len>) ['$26load_global.10']
    $30call_function.12 = call $26load_global.10(in_arr, func=$26load_global.10, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$26load_global.10', '$30call_function.12', 'in_arr']
    $32call_method.13 = call $24load_method.9($30call_function.12, func=$24load_method.9, args=[Var($30call_function.12, parfor.py:301)], kws=(), vararg=None) ['$24load_method.9', '$30call_function.12', '$32call_method.13']
    $34get_iter.14 = getiter(value=$32call_method.13) ['$32call_method.13', '$34get_iter.14']
    $phi36.0 = $34get_iter.14                ['$34get_iter.14', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 54             ['$36for_iter.3']
label 38:
    i = $phi38.1                             ['$phi38.1', 'i']
    $46binary_subscr.5 = getitem(value=in_arr, index=i, fn=<built-in function getitem>) ['$46binary_subscr.5', 'i', 'in_arr']
    $48inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=val, rhs=$46binary_subscr.5, static_lhs=Undefined, static_rhs=Undefined) ['$46binary_subscr.5', '$48inplace_add.6', 'val']
    val = $48inplace_add.6                   ['$48inplace_add.6', 'val']
    jump 36                                  []
label 54:
    $56load_global.1 = global(len: <built-in function len>) ['$56load_global.1']
    $60call_function.3 = call $56load_global.1(in_arr, func=$56load_global.1, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$56load_global.1', '$60call_function.3', 'in_arr']
    $62binary_true_divide.4 = val / $60call_function.3 ['$60call_function.3', '$62binary_true_divide.4', 'val']
    $64return_value.5 = cast(value=$62binary_true_divide.4) ['$62binary_true_divide.4', '$64return_value.5']
    return $64return_value.5                 ['$64return_value.5']

Sat, 02 Apr 2022 20:25:36 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=299)
           2	LOAD_GLOBAL(arg=0, lineno=299)
           4	LOAD_ATTR(arg=1, lineno=299)
           6	LOAD_ATTR(arg=2, lineno=299)
           8	LOAD_METHOD(arg=3, lineno=299)
          10	CALL_METHOD(arg=0, lineno=299)
          12	POP_TOP(arg=None, lineno=299)
          14	LOAD_DEREF(arg=0, lineno=300)
          16	STORE_FAST(arg=1, lineno=300)
          18	LOAD_GLOBAL(arg=0, lineno=301)
          20	LOAD_ATTR(arg=1, lineno=301)
          22	LOAD_ATTR(arg=2, lineno=301)
          24	LOAD_METHOD(arg=4, lineno=301)
          26	LOAD_GLOBAL(arg=5, lineno=301)
          28	LOAD_FAST(arg=0, lineno=301)
          30	CALL_FUNCTION(arg=1, lineno=301)
          32	CALL_METHOD(arg=1, lineno=301)
          34	GET_ITER(arg=None, lineno=301)
>         36	FOR_ITER(arg=16, lineno=301)
          38	STORE_FAST(arg=2, lineno=301)
          40	LOAD_FAST(arg=1, lineno=302)
          42	LOAD_FAST(arg=0, lineno=302)
          44	LOAD_FAST(arg=2, lineno=302)
          46	BINARY_SUBSCR(arg=None, lineno=302)
          48	INPLACE_ADD(arg=None, lineno=302)
          50	STORE_FAST(arg=1, lineno=302)
          52	JUMP_ABSOLUTE(arg=36, lineno=302)
>         54	LOAD_FAST(arg=1, lineno=303)
          56	LOAD_GLOBAL(arg=5, lineno=303)
          58	LOAD_FAST(arg=0, lineno=303)
          60	CALL_FUNCTION(arg=1, lineno=303)
          62	BINARY_TRUE_DIVIDE(arg=None, lineno=303)
          64	RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_ATTR(arg=2, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$4load_attr.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=8, inst=LOAD_METHOD(arg=3, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$6load_attr.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=10, inst=CALL_METHOD(arg=0, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$8load_method.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=12, inst=POP_TOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$10call_method.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=14, inst=LOAD_DEREF(arg=0, lineno=300)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=16, inst=STORE_FAST(arg=1, lineno=300)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$14load_deref.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$18load_global.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$20load_attr.7']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_METHOD(arg=4, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$22load_attr.8']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10', '$in_arr28.11']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=32, inst=CALL_METHOD(arg=1, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$30call_function.12']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=34, inst=GET_ITER(arg=None, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$32call_method.13']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$34get_iter.14',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi36.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=36, inst=FOR_ITER(arg=16, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi36.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=56, inst=LOAD_GLOBAL(arg=5, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=60, inst=CALL_FUNCTION(arg=1, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1', '$in_arr58.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=62, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$val54.0', '$60call_function.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$62binary_true_divide.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=38, inst=STORE_FAST(arg=2, lineno=301)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3', '$i44.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=48, inst=INPLACE_ADD(arg=None, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$46binary_subscr.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=50, inst=STORE_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$48inplace_add.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=52, inst=JUMP_ABSOLUTE(arg=36, lineno=302)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$phi38.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=54 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:189] DEBUG defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:220] DEBUG keep phismap: {'$phi36.0': {('$34get_iter.14', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.14'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'item': '$4load_attr.1', 'res': '$6load_attr.2'}), (8, {'item': '$6load_attr.2', 'res': '$8load_method.3'}), (10, {'func': '$8load_method.3', 'args': [], 'res': '$10call_method.4'}), (14, {'res': '$14load_deref.5'}), (16, {'value': '$14load_deref.5'}), (18, {'res': '$18load_global.6'}), (20, {'item': '$18load_global.6', 'res': '$20load_attr.7'}), (22, {'item': '$20load_attr.7', 'res': '$22load_attr.8'}), (24, {'item': '$22load_attr.8', 'res': '$24load_method.9'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$in_arr28.11'}), (30, {'func': '$26load_global.10', 'args': ['$in_arr28.11'], 'res': '$30call_function.12'}), (32, {'func': '$24load_method.9', 'args': ['$30call_function.12'], 'res': '$32call_method.13'}), (34, {'value': '$32call_method.13', 'res': '$34get_iter.14'})), outgoing_phis={'$phi36.0': '$34get_iter.14'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.14',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 38: ('$phi36.0', '$36for_iter.2')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$val40.2'}), (42, {'res': '$in_arr42.3'}), (44, {'res': '$i44.4'}), (46, {'index': '$i44.4', 'target': '$in_arr42.3', 'res': '$46binary_subscr.5'}), (48, {'lhs': '$val40.2', 'rhs': '$46binary_subscr.5', 'res': '$48inplace_add.6'}), (50, {'value': '$48inplace_add.6'}), (52, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi38.0',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$val54.0'}), (56, {'res': '$56load_global.1'}), (58, {'res': '$in_arr58.2'}), (60, {'func': '$56load_global.1', 'args': ['$in_arr58.2'], 'res': '$60call_function.3'}), (62, {'lhs': '$val54.0', 'rhs': '$60call_function.3', 'res': '$62binary_true_divide.4'}), (64, {'retval': '$62binary_true_divide.4', 'castval': '$64return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:36 interpreter.py[line:379] DEBUG label 0:
    in_arr = arg(0, name=in_arr)             ['in_arr']
    $2load_global.0 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=parfors) ['$2load_global.0', '$4load_attr.1']
    $6load_attr.2 = getattr(value=$4load_attr.1, attr=parfor) ['$4load_attr.1', '$6load_attr.2']
    $8load_method.3 = getattr(value=$6load_attr.2, attr=init_prange) ['$6load_attr.2', '$8load_method.3']
    $10call_method.4 = call $8load_method.3(func=$8load_method.3, args=[], kws=(), vararg=None) ['$10call_method.4', '$8load_method.3']
    val = freevar(zero: 0.0)                 ['val']
    $18load_global.6 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$18load_global.6']
    $20load_attr.7 = getattr(value=$18load_global.6, attr=parfors) ['$18load_global.6', '$20load_attr.7']
    $22load_attr.8 = getattr(value=$20load_attr.7, attr=parfor) ['$20load_attr.7', '$22load_attr.8']
    $24load_method.9 = getattr(value=$22load_attr.8, attr=internal_prange) ['$22load_attr.8', '$24load_method.9']
    $26load_global.10 = global(len: <built-in function len>) ['$26load_global.10']
    $30call_function.12 = call $26load_global.10(in_arr, func=$26load_global.10, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$26load_global.10', '$30call_function.12', 'in_arr']
    $32call_method.13 = call $24load_method.9($30call_function.12, func=$24load_method.9, args=[Var($30call_function.12, parfor.py:301)], kws=(), vararg=None) ['$24load_method.9', '$30call_function.12', '$32call_method.13']
    $34get_iter.14 = getiter(value=$32call_method.13) ['$32call_method.13', '$34get_iter.14']
    $phi36.0 = $34get_iter.14                ['$34get_iter.14', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 54             ['$36for_iter.3']
label 38:
    i = $phi38.1                             ['$phi38.1', 'i']
    $46binary_subscr.5 = getitem(value=in_arr, index=i, fn=<built-in function getitem>) ['$46binary_subscr.5', 'i', 'in_arr']
    $48inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=val, rhs=$46binary_subscr.5, static_lhs=Undefined, static_rhs=Undefined) ['$46binary_subscr.5', '$48inplace_add.6', 'val']
    val = $48inplace_add.6                   ['$48inplace_add.6', 'val']
    jump 36                                  []
label 54:
    $56load_global.1 = global(len: <built-in function len>) ['$56load_global.1']
    $60call_function.3 = call $56load_global.1(in_arr, func=$56load_global.1, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$56load_global.1', '$60call_function.3', 'in_arr']
    $62binary_true_divide.4 = val / $60call_function.3 ['$60call_function.3', '$62binary_true_divide.4', 'val']
    $64return_value.5 = cast(value=$62binary_true_divide.4) ['$62binary_true_divide.4', '$64return_value.5']
    return $64return_value.5                 ['$64return_value.5']

Sat, 02 Apr 2022 20:25:36 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=12, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=13, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$sched4.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$sched4.1', '$const6.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$26call_function.12']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi30.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi30.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$const40.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:103] DEBUG stack: ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=32, inst=STORE_FAST(arg=12, lineno=2)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=36, inst=STORE_FAST(arg=13, lineno=3)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$const34.2']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:262] DEBUG dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:263] DEBUG stack ['$phi32.0']
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:189] DEBUG defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:220] DEBUG keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
Sat, 02 Apr 2022 20:25:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:25:36 interpreter.py[line:379] DEBUG label 0:
    sched = arg(0, name=sched)               ['sched']
    _d_431 = arg(1, name=_d_431)             ['_d_431']
    _n_430 = arg(2, name=_n_430)             ['_n_430']
    X = arg(3, name=X)                       ['X']
    current__values = arg(4, name=current__values) ['current__values']
    gains = arg(5, name=gains)               ['gains']
    idxs = arg(6, name=idxs)                 ['idxs']
    k = arg(7, name=k)                       ['k']
    max__values = arg(8, name=max__values)   ['max__values']
    selections = arg(9, name=selections)     ['selections']
    n__selected = arg(10, name=n__selected)  ['n__selected']
    total__gains = arg(11, name=total__gains) ['total__gains']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_419 = $phi32.1             ['$phi32.1', 'parfor__index_419']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: sched.500 = arg(0, name=sched)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: _d_431 = arg(1, name=_d_431)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: _n_430 = arg(2, name=_n_430)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: X = arg(3, name=X)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: current__values = arg(4, name=current__values)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: gains = arg(5, name=gains)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: idxs = arg(6, name=idxs)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: k = arg(7, name=k)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: max__values = arg(8, name=max__values)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: selections = arg(9, name=selections)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: n__selected = arg(10, name=n__selected)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: total__gains = arg(11, name=total__gains)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $2load_global.0.501 = global(range: <class 'range'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const6.2.502 = const(int, 0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $8binary_subscr.3.503 = getitem(value=sched.500, index=$const6.2.502, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const12.5.504 = const(int, 1)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $14binary_subscr.6.505 = getitem(value=sched.500, index=$const12.5.504, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $16load_global.7.506 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $18load_method.8.507 = getattr(value=$16load_global.7.506, attr=uint8)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const20.9.508 = const(int, 1)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $22call_method.10.509 = call $18load_method.8.507($const20.9.508, func=$18load_method.8.507, args=[Var($const20.9.508, <string>:2)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $24binary_add.11.510 = $14binary_subscr.6.505 + $22call_method.10.509
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $26call_function.12.511 = call $2load_global.0.501($8binary_subscr.3.503, $24binary_add.11.510, func=$2load_global.0.501, args=[Var($8binary_subscr.3.503, <string>:2), Var($24binary_add.11.510, <string>:2)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $28get_iter.13.512 = getiter(value=$26call_function.12.511)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $phi30.0.513 = $28get_iter.13.512
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $34load_global.2 = global(range: <class 'range'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: bool56 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $174build_slice.8 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: zero.393 = const(int, 0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: replacement_slice.394 = call $174build_slice.8(zero.393, _d_431, func=$174build_slice.8, args=(Var(zero.393, facilityLocation.py:63), Var(_d_431, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: wrap.396 = global(wrap_index: <intrinsic wrap_index>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: msg.399 = const(str, Sizes of $168binary_subscr.5, maximum do not match on /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/apricot/functions/facilityLocation.py (63))
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: assert.400 = global(assert_equiv: <intrinsic assert_equiv>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const230.34 = const(int, 1)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const76.8 = const(float, 2.0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $116build_slice.27 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: zero.374 = const(int, 0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: replacement_slice.375 = call $116build_slice.27(zero.374, _d_431, func=$116build_slice.27, args=(Var(zero.374, facilityLocation.py:59), Var(_d_431, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: wrap.377 = global(wrap_index: <intrinsic wrap_index>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $130build_slice.35 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: zero.383 = const(int, 0)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: replacement_slice.384 = call $130build_slice.35(zero.383, _d_431, func=$130build_slice.35, args=(Var(zero.383, facilityLocation.py:59), Var(_d_431, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $np_g_var.408 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $empty_attr_attr.409 = getattr(value=$np_g_var.408, attr=empty)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $np_typ_var.410 = getattr(value=$np_g_var.408, attr=float64)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: bool160 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 30
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $30for_iter.1.514 = iternext(value=$phi30.0.513)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $30for_iter.2.515 = pair_first(value=$30for_iter.1.514)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $30for_iter.3.516 = pair_second(value=$30for_iter.1.514)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $phi32.1.517 = $30for_iter.2.515
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $30for_iter.3.516, 32, 381
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 32
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: parfor__index_419 = $phi32.1.517
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 40
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 381
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $const40.0.518 = const(NoneType, None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $42return_value.1.519 = cast(value=$const40.0.518)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: return $42return_value.1.519
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 40
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $38call_function.4 = call $34load_global.2(_n_430, func=$34load_global.2, args=[Var(_n_430, facilityLocation.py:49)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $40get_iter.5 = getiter(value=$38call_function.4)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 73
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 73
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $42for_iter.2 = iternext(value=$40get_iter.5)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $i.433 = pair_first(value=$42for_iter.2)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $42for_iter.4 = pair_second(value=$42for_iter.2)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $42for_iter.4, 83, 340
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 284
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 73
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 83
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $50binary_subscr.5 = getitem(value=n__selected, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $54compare_op.7 = $50binary_subscr.5 == k
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $56pred = call bool56($54compare_op.7, func=bool56, args=(Var($54compare_op.7, facilityLocation.py:54),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $56pred, 85, 99
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 340
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 378
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 378
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 380
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 103
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5 = getitem(value=current__values, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5_shape.391 = getattr(value=$168binary_subscr.5, attr=shape)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5_size0.392 = static_getitem(value=$168binary_subscr.5_shape.391, index=0, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: var.397 = call wrap.396(_d_431, $168binary_subscr.5_size0.392, func=wrap.396, args=[Var(_d_431, facilityLocation.py:49), Var($168binary_subscr.5_size0.392, facilityLocation.py:63)], kws={}, vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: post_wrap_slice_size.398 = var.397 - zero.393
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: ret.401 = call assert.400(msg.399, post_wrap_slice_size.398, var.378, func=assert.400, args=[Var(msg.399, facilityLocation.py:63), Var(post_wrap_slice_size.398, facilityLocation.py:63), Var(var.378, facilityLocation.py:59)], kws={}, vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: id=4[LoopNest(index_variable = parfor_index.405, range = (0, post_wrap_slice_size.398, 1))]{397: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/apricot/functions/facilityLocation.py (63)>}Var(parfor_index.405, facilityLocation.py:63)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: id=6[LoopNest(index_variable = parfor_index.415, range = (0, var.378, 1))]{322: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/parfors/parfor.py (301)>}Var(parfor_index.415, parfor.py:301)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $62binary_true_divide.4.310 = val.285 / var.378
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: total__gains[parfor__index_419] = $62binary_true_divide.4.310
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $200binary_subscr.20 = getitem(value=n__selected, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $202build_tuple.21 = build_tuple(items=[Var(parfor__index_419, facilityLocation.py:52), Var($200binary_subscr.20, facilityLocation.py:66)])
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: selections[$202build_tuple.21] = idx
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $216binary_subscr.27 = getitem(value=n__selected, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $218build_tuple.28 = build_tuple(items=[Var(parfor__index_419, facilityLocation.py:52), Var($216binary_subscr.27, facilityLocation.py:67)])
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: gains[$218build_tuple.28] = gain
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $228binary_subscr.33 = getitem(value=n__selected, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $232inplace_add.35 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$228binary_subscr.33, rhs=$const230.34, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: n__selected[parfor__index_419] = $232inplace_add.35
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 284
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 99
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: idx = getitem(value=idxs, index=$i.433, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $74binary_subscr.7 = getitem(value=max__values, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $78binary_true_divide.9 = $74binary_subscr.7 / $const76.8
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $84binary_subscr.12 = getitem(value=total__gains, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $86binary_subtract.13 = $78binary_true_divide.9 - $84binary_subscr.12
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $94binary_subscr.17 = getitem(value=n__selected, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $96binary_subtract.18 = k - $94binary_subscr.17
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: threshold = $86binary_subtract.13 / $96binary_subtract.18
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $102load_global.20 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24 = getitem(value=X, index=$i.433, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24_shape.372 = getattr(value=$110binary_subscr.24, attr=shape)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24_size0.373 = static_getitem(value=$110binary_subscr.24_shape.372, index=0, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: var.378 = call wrap.377(_d_431, $110binary_subscr.24_size0.373, func=wrap.377, args=[Var(_d_431, facilityLocation.py:49), Var($110binary_subscr.24_size0.373, facilityLocation.py:59)], kws={}, vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $118binary_subscr.29 = getitem(value=$110binary_subscr.24, index=replacement_slice.375, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $124binary_subscr.32 = getitem(value=current__values, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $132binary_subscr.37 = getitem(value=$124binary_subscr.32, index=replacement_slice.384, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: id=5[LoopNest(index_variable = parfor_index.407, range = (0, var.378, 1))]{398: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/apricot/functions/facilityLocation.py (59)>}Var(parfor_index.407, facilityLocation.py:59)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: id=7[LoopNest(index_variable = parfor_index.417, range = (0, var.378, 1))]{281: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/parfors/parfor.py (301)>}Var(parfor_index.417, parfor.py:301)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $62binary_true_divide.4.344 = val.319 / var.378
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $148binary_subscr.44 = getitem(value=total__gains, index=parfor__index_419, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: gain = $62binary_true_divide.4.344 - $148binary_subscr.44
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $158compare_op.48 = gain > threshold
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: $160pred = call bool160($158compare_op.48, func=bool160, args=(Var($158compare_op.48, facilityLocation.py:62),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: branch $160pred, 103, 284
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 85
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 378
Sat, 02 Apr 2022 20:25:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 380
Sat, 02 Apr 2022 20:25:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200bdbe0>
Sat, 02 Apr 2022 20:25:36 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:25:36 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$102load_global.20': [<numba.core.ir.Assign object at 0x7f9623e4e7c0>],
             '$110binary_subscr.24': [<numba.core.ir.Assign object at 0x7f9623e4ed00>],
             '$110binary_subscr.24_shape.372': [<numba.core.ir.Assign object at 0x7f9623ac2c10>],
             '$110binary_subscr.24_size0.373': [<numba.core.ir.Assign object at 0x7f9623ac2fa0>],
             '$116build_slice.27': [<numba.core.ir.Assign object at 0x7f9623e4d190>],
             '$118binary_subscr.29': [<numba.core.ir.Assign object at 0x7f9623e4d400>],
             '$124binary_subscr.32': [<numba.core.ir.Assign object at 0x7f9623e4d7c0>],
             '$130build_slice.35': [<numba.core.ir.Assign object at 0x7f9623e4dc10>],
             '$132binary_subscr.37': [<numba.core.ir.Assign object at 0x7f9623e4de80>],
             '$148binary_subscr.44': [<numba.core.ir.Assign object at 0x7f9623e4c940>],
             '$14binary_subscr.6.505': [<numba.core.ir.Assign object at 0x7f96200df7c0>],
             '$158compare_op.48': [<numba.core.ir.Assign object at 0x7f9623e4cfa0>],
             '$160pred': [<numba.core.ir.Assign object at 0x7f9623e4b280>],
             '$168binary_subscr.5': [<numba.core.ir.Assign object at 0x7f9623e4c190>],
             '$168binary_subscr.5_shape.391': [<numba.core.ir.Assign object at 0x7f9623afa580>],
             '$168binary_subscr.5_size0.392': [<numba.core.ir.Assign object at 0x7f9623afa6a0>],
             '$16load_global.7.506': [<numba.core.ir.Assign object at 0x7f96200c0cd0>],
             '$174build_slice.8': [<numba.core.ir.Assign object at 0x7f9623e4b3d0>],
             '$18load_method.8.507': [<numba.core.ir.Assign object at 0x7f96200c0e50>],
             '$200binary_subscr.20': [<numba.core.ir.Assign object at 0x7f9623e4a400>],
             '$202build_tuple.21': [<numba.core.ir.Assign object at 0x7f9623e4a5b0>],
             '$216binary_subscr.27': [<numba.core.ir.Assign object at 0x7f9623e4ad60>],
             '$218build_tuple.28': [<numba.core.ir.Assign object at 0x7f9623e4af10>],
             '$228binary_subscr.33': [<numba.core.ir.Assign object at 0x7f9623e49580>],
             '$22call_method.10.509': [<numba.core.ir.Assign object at 0x7f965807d1c0>],
             '$232inplace_add.35': [<numba.core.ir.Assign object at 0x7f9623e49880>],
             '$24binary_add.11.510': [<numba.core.ir.Assign object at 0x7f965807d310>],
             '$26call_function.12.511': [<numba.core.ir.Assign object at 0x7f965807d4c0>],
             '$28get_iter.13.512': [<numba.core.ir.Assign object at 0x7f965807d610>],
             '$2load_global.0.501': [<numba.core.ir.Assign object at 0x7f96200c4ee0>],
             '$30for_iter.1.514': [<numba.core.ir.Assign object at 0x7f965807d910>],
             '$30for_iter.2.515': [<numba.core.ir.Assign object at 0x7f965807da30>],
             '$30for_iter.3.516': [<numba.core.ir.Assign object at 0x7f965807db50>],
             '$34load_global.2': [<numba.core.ir.Assign object at 0x7f9623e51640>],
             '$38call_function.4': [<numba.core.ir.Assign object at 0x7f9623e51910>],
             '$40get_iter.5': [<numba.core.ir.Assign object at 0x7f9623e51a60>],
             '$42for_iter.2': [<numba.core.ir.Assign object at 0x7f9623e51dc0>],
             '$42for_iter.4': [<numba.core.ir.Assign object at 0x7f9623e50040>],
             '$42return_value.1.519': [<numba.core.ir.Assign object at 0x7f96200bf4f0>],
             '$50binary_subscr.5': [<numba.core.ir.Assign object at 0x7f9623e506a0>],
             '$54compare_op.7': [<numba.core.ir.Assign object at 0x7f9623e50940>],
             '$56pred': [<numba.core.ir.Assign object at 0x7f9623e50be0>],
             '$62binary_true_divide.4.310': [<numba.core.ir.Assign object at 0x7f9623e49e20>],
             '$62binary_true_divide.4.344': [<numba.core.ir.Assign object at 0x7f9623e7b3d0>],
             '$74binary_subscr.7': [<numba.core.ir.Assign object at 0x7f9623e4f4c0>],
             '$78binary_true_divide.9': [<numba.core.ir.Assign object at 0x7f9623e4f7c0>],
             '$84binary_subscr.12': [<numba.core.ir.Assign object at 0x7f9623e4fb80>],
             '$86binary_subtract.13': [<numba.core.ir.Assign object at 0x7f9623e4fd00>],
             '$8binary_subscr.3.503': [<numba.core.ir.Assign object at 0x7f96200c4af0>],
             '$94binary_subscr.17': [<numba.core.ir.Assign object at 0x7f9623e4e220>],
             '$96binary_subtract.18': [<numba.core.ir.Assign object at 0x7f9623e4e3a0>],
             '$const12.5.504': [<numba.core.ir.Assign object at 0x7f96200c4850>],
             '$const20.9.508': [<numba.core.ir.Assign object at 0x7f96200c0fd0>],
             '$const230.34': [<numba.core.ir.Assign object at 0x7f9623e49700>],
             '$const40.0.518': [<numba.core.ir.Assign object at 0x7f96200bf370>],
             '$const6.2.502': [<numba.core.ir.Assign object at 0x7f96200c4dc0>],
             '$const76.8': [<numba.core.ir.Assign object at 0x7f9623e4f640>],
             '$empty_attr_attr.409': [<numba.core.ir.Assign object at 0x7f9658049ee0>],
             '$i.433': [<numba.core.ir.Assign object at 0x7f9623e51ee0>],
             '$np_g_var.408': [<numba.core.ir.Assign object at 0x7f9658049dc0>],
             '$np_typ_var.410': [<numba.core.ir.Assign object at 0x7f9658049fd0>],
             '$phi30.0.513': [<numba.core.ir.Assign object at 0x7f96200c48e0>],
             '$phi32.1.517': [<numba.core.ir.Assign object at 0x7f965807d820>],
             'X': [<numba.core.ir.Assign object at 0x7f96200c04f0>],
             '_d_431': [<numba.core.ir.Assign object at 0x7f96200c02b0>],
             '_n_430': [<numba.core.ir.Assign object at 0x7f96200c03d0>],
             'assert.400': [<numba.core.ir.Assign object at 0x7f96200e8d90>],
             'bool160': [<numba.core.ir.Assign object at 0x7f9623e4b160>],
             'bool56': [<numba.core.ir.Assign object at 0x7f9623e50ac0>],
             'current__values': [<numba.core.ir.Assign object at 0x7f96200c0610>],
             'gain': [<numba.core.ir.Assign object at 0x7f9623e4cac0>],
             'gains': [<numba.core.ir.Assign object at 0x7f96200c0730>],
             'idx': [<numba.core.ir.Assign object at 0x7f9662bef130>],
             'idxs': [<numba.core.ir.Assign object at 0x7f96200c0850>],
             'k': [<numba.core.ir.Assign object at 0x7f96200c0970>],
             'max__values': [<numba.core.ir.Assign object at 0x7f96200c0a90>],
             'msg.399': [<numba.core.ir.Assign object at 0x7f96200e8d30>],
             'n__selected': [<numba.core.ir.Assign object at 0x7f9623ae6580>],
             'parfor__index_419': [<numba.core.ir.Assign object at 0x7f965807ddf0>],
             'post_wrap_slice_size.398': [<numba.core.ir.Assign object at 0x7f96200e87f0>],
             'replacement_slice.375': [<numba.core.ir.Assign object at 0x7f9658072f10>],
             'replacement_slice.384': [<numba.core.ir.Assign object at 0x7f9658057670>],
             'replacement_slice.394': [<numba.core.ir.Assign object at 0x7f96200e8280>],
             'ret.401': [<numba.core.ir.Assign object at 0x7f96200e8df0>],
             'sched.500': [<numba.core.ir.Assign object at 0x7f96200c0190>],
             'selections': [<numba.core.ir.Assign object at 0x7f9623e6e0a0>],
             'threshold': [<numba.core.ir.Assign object at 0x7f9623e4e520>],
             'total__gains': [<numba.core.ir.Assign object at 0x7f9623e7c310>],
             'var.378': [<numba.core.ir.Assign object at 0x7f965806f3a0>],
             'var.397': [<numba.core.ir.Assign object at 0x7f96200e8640>],
             'wrap.377': [<numba.core.ir.Assign object at 0x7f965806f340>],
             'wrap.396': [<numba.core.ir.Assign object at 0x7f96200e85e0>],
             'zero.374': [<numba.core.ir.Assign object at 0x7f9623ad36a0>],
             'zero.383': [<numba.core.ir.Assign object at 0x7f965806fd00>],
             'zero.393': [<numba.core.ir.Assign object at 0x7f9623afae50>]})
Sat, 02 Apr 2022 20:25:36 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:25:37 craigstrategy.py[line:308] DEBUG CRAIG strategy data selection time is: 5.3012
Sat, 02 Apr 2022 20:25:37 craigdataloader.py[line:58] INFO Epoch: 4, subset selection finished, takes 5.3031. 
Sat, 02 Apr 2022 20:25:37 adaptivedataloader.py[line:102] DEBUG Subset indices length: 5472
Sat, 02 Apr 2022 20:25:37 adaptivedataloader.py[line:104] DEBUG Subset loader initiated, args: (), kwargs: {'batch_size': 16, 'shuffle': True, 'pin_memory': False, 'collate_fn': <function collate_fn_weighted at 0x7f98f3544280>}
Sat, 02 Apr 2022 20:25:37 adaptivedataloader.py[line:105] DEBUG Subset selection finished, Training data size: 54576, Subset size: 5472
Sat, 02 Apr 2022 20:25:37 adaptivedataloader.py[line:72] DEBUG Epoch: 4, finished reading dataloader. 
Sat, 02 Apr 2022 20:26:16 adaptivedataloader.py[line:68] DEBUG Epoch: 5, reading dataloader... 
Sat, 02 Apr 2022 20:26:16 adaptivedataloader.py[line:72] DEBUG Epoch: 5, finished reading dataloader. 
Sat, 02 Apr 2022 20:26:54 adaptivedataloader.py[line:68] DEBUG Epoch: 6, reading dataloader... 
Sat, 02 Apr 2022 20:26:54 adaptivedataloader.py[line:72] DEBUG Epoch: 6, finished reading dataloader. 
Sat, 02 Apr 2022 20:27:33 adaptivedataloader.py[line:68] DEBUG Epoch: 7, reading dataloader... 
Sat, 02 Apr 2022 20:27:33 craigdataloader.py[line:52] INFO Epoch: 7, requires subset selection. 
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=24)
           2	LOAD_GLOBAL(arg=0, lineno=24)
           4	LOAD_FAST(arg=3, lineno=24)
           6	LOAD_ATTR(arg=1, lineno=24)
           8	LOAD_CONST(arg=1, lineno=24)
          10	BINARY_SUBSCR(arg=None, lineno=24)
          12	CALL_FUNCTION(arg=1, lineno=24)
          14	GET_ITER(arg=None, lineno=24)
>         16	FOR_ITER(arg=36, lineno=24)
          18	STORE_FAST(arg=4, lineno=24)
          20	LOAD_FAST(arg=3, lineno=25)
          22	LOAD_FAST(arg=4, lineno=25)
          24	BINARY_SUBSCR(arg=None, lineno=25)
          26	STORE_FAST(arg=5, lineno=25)
          28	LOAD_GLOBAL(arg=2, lineno=26)
          30	LOAD_METHOD(arg=3, lineno=26)
          32	LOAD_FAST(arg=0, lineno=26)
          34	LOAD_FAST(arg=5, lineno=26)
          36	BINARY_SUBSCR(arg=None, lineno=26)
          38	LOAD_FAST(arg=2, lineno=26)
          40	CALL_METHOD(arg=2, lineno=26)
          42	LOAD_METHOD(arg=4, lineno=26)
          44	CALL_METHOD(arg=0, lineno=26)
          46	LOAD_FAST(arg=1, lineno=26)
          48	LOAD_FAST(arg=4, lineno=26)
          50	STORE_SUBSCR(arg=None, lineno=26)
          52	JUMP_ABSOLUTE(arg=16, lineno=26)
>         54	LOAD_CONST(arg=0, lineno=26)
          56	RETURN_VALUE(arg=None, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_FAST(arg=3, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$idxs4.1']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$6load_attr.2']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$6load_attr.2', '$const8.3']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=12, inst=CALL_FUNCTION(arg=1, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$10binary_subscr.4']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=14, inst=GET_ITER(arg=None, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$12call_function.5']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=16, stack=('$14get_iter.6',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=16 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:103] DEBUG stack: ['$phi16.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=16, inst=FOR_ITER(arg=36, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi16.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=54, inst=LOAD_CONST(arg=0, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$const54.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=18 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:103] DEBUG stack: ['$phi18.0', '$phi18.1']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=18, inst=STORE_FAST(arg=4, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$phi18.1']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_FAST(arg=3, lineno=25)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_FAST(arg=4, lineno=25)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$idxs20.2']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=24, inst=BINARY_SUBSCR(arg=None, lineno=25)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$idxs20.2', '$i22.3']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=26, inst=STORE_FAST(arg=5, lineno=25)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$24binary_subscr.4']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=30, inst=LOAD_METHOD(arg=3, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$28load_global.5']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=34, inst=LOAD_FAST(arg=5, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$X32.7']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$X32.7', '$idx34.8']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$36binary_subscr.9']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=40, inst=CALL_METHOD(arg=2, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$30load_method.6', '$36binary_subscr.9', '$current_values38.10']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=42, inst=LOAD_METHOD(arg=4, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$40call_method.11']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=44, inst=CALL_METHOD(arg=0, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$42load_method.12']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=46, inst=LOAD_FAST(arg=1, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$44call_method.13']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=48, inst=LOAD_FAST(arg=4, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$44call_method.13', '$gains46.14']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=50, inst=STORE_SUBSCR(arg=None, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0', '$44call_method.13', '$gains46.14', '$i48.15']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=52, inst=JUMP_ABSOLUTE(arg=16, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$phi18.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=16 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=54 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:189] DEBUG defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:220] DEBUG keep phismap: {'$phi16.0': {('$14get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.6'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$idxs4.1'}), (6, {'item': '$idxs4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'index': '$const8.3', 'target': '$6load_attr.2', 'res': '$10binary_subscr.4'}), (12, {'func': '$2load_global.0', 'args': ['$10binary_subscr.4'], 'res': '$12call_function.5'}), (14, {'value': '$12call_function.5', 'res': '$14get_iter.6'})), outgoing_phis={'$phi16.0': '$14get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.6',)})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 18: ('$phi16.0', '$16for_iter.2')})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$idxs20.2'}), (22, {'res': '$i22.3'}), (24, {'index': '$i22.3', 'target': '$idxs20.2', 'res': '$24binary_subscr.4'}), (26, {'value': '$24binary_subscr.4'}), (28, {'res': '$28load_global.5'}), (30, {'item': '$28load_global.5', 'res': '$30load_method.6'}), (32, {'res': '$X32.7'}), (34, {'res': '$idx34.8'}), (36, {'index': '$idx34.8', 'target': '$X32.7', 'res': '$36binary_subscr.9'}), (38, {'res': '$current_values38.10'}), (40, {'func': '$30load_method.6', 'args': ['$36binary_subscr.9', '$current_values38.10'], 'res': '$40call_method.11'}), (42, {'item': '$40call_method.11', 'res': '$42load_method.12'}), (44, {'func': '$42load_method.12', 'args': [], 'res': '$44call_method.13'}), (46, {'res': '$gains46.14'}), (48, {'res': '$i48.15'}), (50, {'target': '$gains46.14', 'index': '$i48.15', 'value': '$44call_method.13'}), (52, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'retval': '$const54.0', 'castval': '$56return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:27:36 interpreter.py[line:379] DEBUG label 0:
    X = arg(0, name=X)                       ['X']
    gains = arg(1, name=gains)               ['gains']
    current_values = arg(2, name=current_values) ['current_values']
    idxs = arg(3, name=idxs)                 ['idxs']
    $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>) ['$2load_global.0']
    $6load_attr.2 = getattr(value=idxs, attr=shape) ['$6load_attr.2', 'idxs']
    $const8.3 = const(int, 0)                ['$const8.3']
    $10binary_subscr.4 = getitem(value=$6load_attr.2, index=$const8.3, fn=<built-in function getitem>) ['$10binary_subscr.4', '$6load_attr.2', '$const8.3']
    $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, facilityLocation.py:24)], kws=(), vararg=None) ['$10binary_subscr.4', '$12call_function.5', '$2load_global.0']
    $14get_iter.6 = getiter(value=$12call_function.5) ['$12call_function.5', '$14get_iter.6']
    $phi16.0 = $14get_iter.6                 ['$14get_iter.6', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 54             ['$16for_iter.3']
label 18:
    i = $phi18.1                             ['$phi18.1', 'i']
    idx = getitem(value=idxs, index=i, fn=<built-in function getitem>) ['i', 'idx', 'idxs']
    $28load_global.5 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>) ['$28load_global.5']
    $30load_method.6 = getattr(value=$28load_global.5, attr=maximum) ['$28load_global.5', '$30load_method.6']
    $36binary_subscr.9 = getitem(value=X, index=idx, fn=<built-in function getitem>) ['$36binary_subscr.9', 'X', 'idx']
    $40call_method.11 = call $30load_method.6($36binary_subscr.9, current_values, func=$30load_method.6, args=[Var($36binary_subscr.9, facilityLocation.py:26), Var(current_values, facilityLocation.py:24)], kws=(), vararg=None) ['$30load_method.6', '$36binary_subscr.9', '$40call_method.11', 'current_values']
    $42load_method.12 = getattr(value=$40call_method.11, attr=sum) ['$40call_method.11', '$42load_method.12']
    $44call_method.13 = call $42load_method.12(func=$42load_method.12, args=[], kws=(), vararg=None) ['$42load_method.12', '$44call_method.13']
    gains[i] = $44call_method.13             ['$44call_method.13', 'gains', 'i']
    jump 16                                  []
label 54:
    $const54.0 = const(NoneType, None)       ['$const54.0']
    $56return_value.1 = cast(value=$const54.0) ['$56return_value.1', '$const54.0']
    return $56return_value.1                 ['$56return_value.1']

Sat, 02 Apr 2022 20:27:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:27:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f965805b130>
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: X = arg(0, name=X)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: gains = arg(1, name=gains)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: current_values = arg(2, name=current_values)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: idxs = arg(3, name=idxs)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $2load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $6load_attr.2 = getattr(value=idxs, attr=shape)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $const8.3 = const(int, 0)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $10binary_subscr.4 = static_getitem(value=$6load_attr.2, index=0, index_var=$const8.3, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $12call_function.5 = call $2load_global.0($10binary_subscr.4, func=$2load_global.0, args=[Var($10binary_subscr.4, facilityLocation.py:24)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $14get_iter.6 = getiter(value=$12call_function.5)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $phi16.0 = $14get_iter.6
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:27:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 16
Sat, 02 Apr 2022 20:27:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f965805b130>
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $16for_iter.1 = iternext(value=$phi16.0)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $phi18.1 = $16for_iter.2
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: branch $16for_iter.3, 18, 54
Sat, 02 Apr 2022 20:27:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 18
Sat, 02 Apr 2022 20:27:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f965805b130>
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: i = $phi18.1
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: idx = getitem(value=idxs, index=i, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $28load_global.5 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $30load_method.6 = getattr(value=$28load_global.5, attr=maximum)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $36binary_subscr.9 = getitem(value=X, index=idx, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $40call_method.11 = call $30load_method.6($36binary_subscr.9, current_values, func=$30load_method.6, args=[Var($36binary_subscr.9, facilityLocation.py:26), Var(current_values, facilityLocation.py:24)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $42load_method.12 = getattr(value=$40call_method.11, attr=sum)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $44call_method.13 = call $42load_method.12(func=$42load_method.12, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: gains[i] = $44call_method.13
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: jump 16
Sat, 02 Apr 2022 20:27:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 54
Sat, 02 Apr 2022 20:27:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f965805b130>
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $const54.0 = const(NoneType, None)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $56return_value.1 = cast(value=$const54.0)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: return $56return_value.1
Sat, 02 Apr 2022 20:27:36 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7f965807ff40>],
             '$12call_function.5': [<numba.core.ir.Assign object at 0x7f9658077760>],
             '$14get_iter.6': [<numba.core.ir.Assign object at 0x7f9658077c10>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x7f96580735b0>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x7f96580739a0>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x7f9658073bb0>],
             '$28load_global.5': [<numba.core.ir.Assign object at 0x7f9658082880>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f9658079040>],
             '$30load_method.6': [<numba.core.ir.Assign object at 0x7f9658086d60>],
             '$36binary_subscr.9': [<numba.core.ir.Assign object at 0x7f96580760a0>],
             '$40call_method.11': [<numba.core.ir.Assign object at 0x7f96580769d0>],
             '$42load_method.12': [<numba.core.ir.Assign object at 0x7f9658076dc0>],
             '$44call_method.13': [<numba.core.ir.Assign object at 0x7f965807a100>],
             '$56return_value.1': [<numba.core.ir.Assign object at 0x7f965807ae80>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f96580797f0>],
             '$const54.0': [<numba.core.ir.Assign object at 0x7f9658076550>],
             '$const8.3': [<numba.core.ir.Assign object at 0x7f9658079c70>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x7f965807ee20>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x7f9658073400>],
             'X': [<numba.core.ir.Assign object at 0x7f965807c340>],
             'current_values': [<numba.core.ir.Assign object at 0x7f965807ca00>],
             'gains': [<numba.core.ir.Assign object at 0x7f965807c6a0>],
             'i': [<numba.core.ir.Assign object at 0x7f96580743d0>],
             'idx': [<numba.core.ir.Assign object at 0x7f965807ea00>],
             'idxs': [<numba.core.ir.Assign object at 0x7f965807cbe0>]})
Sat, 02 Apr 2022 20:27:36 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=26)
           6	LOAD_FAST(arg=1, lineno=24)
           8	CALL_FUNCTION(arg=2, lineno=1)
          10	RETURN_VALUE(arg=None, lineno=1)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=1)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=26)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=24)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$_36binary_subscr_9_14.1']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=1)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$_36binary_subscr_9_14.1', '$current_values_16.2']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:262] DEBUG dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=1)
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:263] DEBUG stack ['$8call_function.3']
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:189] DEBUG defmap: {}
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>, {})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>, {})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:220] DEBUG keep phismap: {}
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>, {})
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:27:36 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$_36binary_subscr_9_14.1'}), (6, {'res': '$current_values_16.2'}), (8, {'func': '$2load_global.0', 'args': ['$_36binary_subscr_9_14.1', '$current_values_16.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:27:36 interpreter.py[line:379] DEBUG label 0:
    _36binary_subscr_9_1 = arg(0, name=_36binary_subscr_9_1) ['_36binary_subscr_9_1']
    current_values_1 = arg(1, name=current_values_1) ['current_values_1']
    $2load_global.0 = global(__ufunc_or_dufunc_0x7f969f7879a: <ufunc 'maximum'>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(_36binary_subscr_9_1, current_values_1, func=$2load_global.0, args=[Var(_36binary_subscr_9_1, facilityLocation.py:1), Var(current_values_1, facilityLocation.py:1)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '_36binary_subscr_9_1', 'current_values_1']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

Sat, 02 Apr 2022 20:27:36 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:27:36 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f9622aeea90>
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: _36binary_subscr_9_1 = arg(0, name=_36binary_subscr_9_1)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: current_values_1 = arg(1, name=current_values_1)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $2load_global.0 = global(__ufunc_or_dufunc_0x7f969f7879a: <ufunc 'maximum'>)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $8call_function.3 = call $2load_global.0(_36binary_subscr_9_1, current_values_1, func=$2load_global.0, args=[Var(_36binary_subscr_9_1, facilityLocation.py:1), Var(current_values_1, facilityLocation.py:1)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: $10return_value.4 = cast(value=$8call_function.3)
Sat, 02 Apr 2022 20:27:36 ssa.py[line:180] DEBUG on stmt: return $10return_value.4
Sat, 02 Apr 2022 20:27:36 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x7f9622ac0d30>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f9622ac0670>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x7f9622ac0ca0>],
             '_36binary_subscr_9_1': [<numba.core.ir.Assign object at 0x7f9622ac03d0>],
             'current_values_1': [<numba.core.ir.Assign object at 0x7f9622ac04f0>]})
Sat, 02 Apr 2022 20:27:36 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=49)
           2	LOAD_FAST(arg=0, lineno=49)
           4	LOAD_ATTR(arg=0, lineno=49)
           6	UNPACK_SEQUENCE(arg=2, lineno=49)
           8	STORE_FAST(arg=9, lineno=49)
          10	STORE_FAST(arg=10, lineno=49)
          12	LOAD_FAST(arg=6, lineno=50)
          14	LOAD_ATTR(arg=0, lineno=50)
          16	LOAD_CONST(arg=1, lineno=50)
          18	BINARY_SUBSCR(arg=None, lineno=50)
          20	STORE_FAST(arg=11, lineno=50)
          22	LOAD_GLOBAL(arg=1, lineno=52)
          24	LOAD_FAST(arg=11, lineno=52)
          26	CALL_FUNCTION(arg=1, lineno=52)
          28	GET_ITER(arg=None, lineno=52)
>         30	FOR_ITER(arg=210, lineno=52)
          32	STORE_FAST(arg=12, lineno=52)
          34	LOAD_GLOBAL(arg=2, lineno=53)
          36	LOAD_FAST(arg=9, lineno=53)
          38	CALL_FUNCTION(arg=1, lineno=53)
          40	GET_ITER(arg=None, lineno=53)
>         42	FOR_ITER(arg=196, lineno=53)
          44	STORE_FAST(arg=13, lineno=53)
          46	LOAD_FAST(arg=7, lineno=54)
          48	LOAD_FAST(arg=12, lineno=54)
          50	BINARY_SUBSCR(arg=None, lineno=54)
          52	LOAD_FAST(arg=1, lineno=54)
          54	COMPARE_OP(arg=2, lineno=54)
          56	POP_JUMP_IF_FALSE(arg=62, lineno=54)
          58	POP_TOP(arg=None, lineno=55)
          60	JUMP_ABSOLUTE(arg=30, lineno=55)
>         62	LOAD_FAST(arg=8, lineno=57)
          64	LOAD_FAST(arg=13, lineno=57)
          66	BINARY_SUBSCR(arg=None, lineno=57)
          68	STORE_FAST(arg=14, lineno=57)
          70	LOAD_FAST(arg=6, lineno=58)
          72	LOAD_FAST(arg=12, lineno=58)
          74	BINARY_SUBSCR(arg=None, lineno=58)
          76	LOAD_CONST(arg=2, lineno=58)
          78	BINARY_TRUE_DIVIDE(arg=None, lineno=58)
          80	LOAD_FAST(arg=5, lineno=58)
          82	LOAD_FAST(arg=12, lineno=58)
          84	BINARY_SUBSCR(arg=None, lineno=58)
          86	BINARY_SUBTRACT(arg=None, lineno=58)
          88	LOAD_FAST(arg=1, lineno=58)
          90	LOAD_FAST(arg=7, lineno=58)
          92	LOAD_FAST(arg=12, lineno=58)
          94	BINARY_SUBSCR(arg=None, lineno=58)
          96	BINARY_SUBTRACT(arg=None, lineno=58)
          98	BINARY_TRUE_DIVIDE(arg=None, lineno=58)
         100	STORE_FAST(arg=15, lineno=58)
         102	LOAD_GLOBAL(arg=3, lineno=59)
         104	LOAD_METHOD(arg=4, lineno=59)
         106	LOAD_FAST(arg=0, lineno=59)
         108	LOAD_FAST(arg=13, lineno=59)
         110	BINARY_SUBSCR(arg=None, lineno=59)
         112	LOAD_CONST(arg=0, lineno=59)
         114	LOAD_FAST(arg=10, lineno=59)
         116	BUILD_SLICE(arg=2, lineno=59)
         118	BINARY_SUBSCR(arg=None, lineno=59)
         120	LOAD_FAST(arg=2, lineno=59)
         122	LOAD_FAST(arg=12, lineno=59)
         124	BINARY_SUBSCR(arg=None, lineno=59)
         126	LOAD_CONST(arg=0, lineno=59)
         128	LOAD_FAST(arg=10, lineno=59)
         130	BUILD_SLICE(arg=2, lineno=59)
         132	BINARY_SUBSCR(arg=None, lineno=59)
         134	CALL_METHOD(arg=2, lineno=59)
         136	STORE_FAST(arg=16, lineno=59)
         138	LOAD_FAST(arg=16, lineno=60)
         140	LOAD_METHOD(arg=5, lineno=60)
         142	CALL_METHOD(arg=0, lineno=60)
         144	LOAD_FAST(arg=5, lineno=60)
         146	LOAD_FAST(arg=12, lineno=60)
         148	BINARY_SUBSCR(arg=None, lineno=60)
         150	BINARY_SUBTRACT(arg=None, lineno=60)
         152	STORE_FAST(arg=17, lineno=60)
         154	LOAD_FAST(arg=17, lineno=62)
         156	LOAD_FAST(arg=15, lineno=62)
         158	COMPARE_OP(arg=4, lineno=62)
         160	POP_JUMP_IF_FALSE(arg=42, lineno=62)
         162	LOAD_FAST(arg=16, lineno=63)
         164	LOAD_FAST(arg=2, lineno=63)
         166	LOAD_FAST(arg=12, lineno=63)
         168	BINARY_SUBSCR(arg=None, lineno=63)
         170	LOAD_CONST(arg=0, lineno=63)
         172	LOAD_FAST(arg=10, lineno=63)
         174	BUILD_SLICE(arg=2, lineno=63)
         176	STORE_SUBSCR(arg=None, lineno=63)
         178	LOAD_FAST(arg=16, lineno=64)
         180	LOAD_METHOD(arg=5, lineno=64)
         182	CALL_METHOD(arg=0, lineno=64)
         184	LOAD_FAST(arg=5, lineno=64)
         186	LOAD_FAST(arg=12, lineno=64)
         188	STORE_SUBSCR(arg=None, lineno=64)
         190	LOAD_FAST(arg=14, lineno=66)
         192	LOAD_FAST(arg=3, lineno=66)
         194	LOAD_FAST(arg=12, lineno=66)
         196	LOAD_FAST(arg=7, lineno=66)
         198	LOAD_FAST(arg=12, lineno=66)
         200	BINARY_SUBSCR(arg=None, lineno=66)
         202	BUILD_TUPLE(arg=2, lineno=66)
         204	STORE_SUBSCR(arg=None, lineno=66)
         206	LOAD_FAST(arg=17, lineno=67)
         208	LOAD_FAST(arg=4, lineno=67)
         210	LOAD_FAST(arg=12, lineno=67)
         212	LOAD_FAST(arg=7, lineno=67)
         214	LOAD_FAST(arg=12, lineno=67)
         216	BINARY_SUBSCR(arg=None, lineno=67)
         218	BUILD_TUPLE(arg=2, lineno=67)
         220	STORE_SUBSCR(arg=None, lineno=67)
         222	LOAD_FAST(arg=7, lineno=68)
         224	LOAD_FAST(arg=12, lineno=68)
         226	DUP_TOP_TWO(arg=None, lineno=68)
         228	BINARY_SUBSCR(arg=None, lineno=68)
         230	LOAD_CONST(arg=3, lineno=68)
         232	INPLACE_ADD(arg=None, lineno=68)
         234	ROT_THREE(arg=None, lineno=68)
         236	STORE_SUBSCR(arg=None, lineno=68)
         238	JUMP_ABSOLUTE(arg=42, lineno=68)
>        240	JUMP_ABSOLUTE(arg=30, lineno=68)
>        242	LOAD_CONST(arg=0, lineno=68)
         244	RETURN_VALUE(arg=None, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=49)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=49)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=49)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$X2.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=6, inst=UNPACK_SEQUENCE(arg=2, lineno=49)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$4load_attr.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=8, inst=STORE_FAST(arg=9, lineno=49)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$6unpack_sequence.3', '$6unpack_sequence.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=10, inst=STORE_FAST(arg=10, lineno=49)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$6unpack_sequence.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=12, inst=LOAD_FAST(arg=6, lineno=50)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=14, inst=LOAD_ATTR(arg=0, lineno=50)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$max_values12.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=50)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$14load_attr.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=18, inst=BINARY_SUBSCR(arg=None, lineno=50)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$14load_attr.6', '$const16.7']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=20, inst=STORE_FAST(arg=11, lineno=50)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$18binary_subscr.8']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_GLOBAL(arg=1, lineno=52)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_FAST(arg=11, lineno=52)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$22load_global.9']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=26, inst=CALL_FUNCTION(arg=1, lineno=52)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$22load_global.9', '$t24.10']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=28, inst=GET_ITER(arg=None, lineno=52)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$26call_function.11']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$28get_iter.12',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi30.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=30, inst=FOR_ITER(arg=210, lineno=52)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi30.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=242, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=242 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=242, inst=LOAD_CONST(arg=0, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=244, inst=RETURN_VALUE(arg=None, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$const242.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=32, inst=STORE_FAST(arg=12, lineno=52)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=34, inst=LOAD_GLOBAL(arg=2, lineno=53)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=36, inst=LOAD_FAST(arg=9, lineno=53)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$34load_global.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=38, inst=CALL_FUNCTION(arg=1, lineno=53)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$34load_global.2', '$n36.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=40, inst=GET_ITER(arg=None, lineno=53)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$38call_function.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=42, stack=('$phi32.0', '$40get_iter.5'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi42.0', '$phi42.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=42, inst=FOR_ITER(arg=196, lineno=53)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi42.0', '$phi42.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=240, stack=('$phi42.0',), blockstack=(), npush=0), Edge(pc=44, stack=('$phi42.0', '$phi42.1', '$42for_iter.3'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=240 nstack_initial=1), State(pc_initial=44 nstack_initial=3)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi240.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=240, inst=JUMP_ABSOLUTE(arg=30, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi240.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$phi240.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=44 nstack_initial=3), State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi44.0', '$phi44.1', '$phi44.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=44, inst=STORE_FAST(arg=13, lineno=53)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$phi44.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=46, inst=LOAD_FAST(arg=7, lineno=54)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=48, inst=LOAD_FAST(arg=12, lineno=54)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$n_selected46.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=54)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$n_selected46.3', '$j48.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=54)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$50binary_subscr.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=54, inst=COMPARE_OP(arg=2, lineno=54)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$50binary_subscr.5', '$k52.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=62, lineno=54)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi44.0', '$phi44.1', '$54compare_op.7']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=58, stack=('$phi44.0', '$phi44.1'), blockstack=(), npush=0), Edge(pc=62, stack=('$phi44.0', '$phi44.1'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=58 nstack_initial=2), State(pc_initial=62 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=58 nstack_initial=2), State(pc_initial=62 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi58.0', '$phi58.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=58, inst=POP_TOP(arg=None, lineno=55)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi58.0', '$phi58.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=60, inst=JUMP_ABSOLUTE(arg=30, lineno=55)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi58.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$phi58.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=62 nstack_initial=2), State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=57)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=64, inst=LOAD_FAST(arg=13, lineno=57)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$idxs62.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=57)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$idxs62.2', '$i64.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=68, inst=STORE_FAST(arg=14, lineno=57)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$66binary_subscr.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=70, inst=LOAD_FAST(arg=6, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=72, inst=LOAD_FAST(arg=12, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$max_values70.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=74, inst=BINARY_SUBSCR(arg=None, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$max_values70.5', '$j72.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$74binary_subscr.7']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=78, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$74binary_subscr.7', '$const76.8']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=80, inst=LOAD_FAST(arg=5, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=82, inst=LOAD_FAST(arg=12, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9', '$total_gains80.10']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=84, inst=BINARY_SUBSCR(arg=None, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9', '$total_gains80.10', '$j82.11']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=86, inst=BINARY_SUBTRACT(arg=None, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$78binary_true_divide.9', '$84binary_subscr.12']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=88, inst=LOAD_FAST(arg=1, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=90, inst=LOAD_FAST(arg=7, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=92, inst=LOAD_FAST(arg=12, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14', '$n_selected90.15']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14', '$n_selected90.15', '$j92.16']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=96, inst=BINARY_SUBTRACT(arg=None, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$k88.14', '$94binary_subscr.17']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=98, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$86binary_subtract.13', '$96binary_subtract.18']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=100, inst=STORE_FAST(arg=15, lineno=58)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$98binary_true_divide.19']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=104, inst=LOAD_METHOD(arg=4, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$102load_global.20']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=106, inst=LOAD_FAST(arg=0, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=108, inst=LOAD_FAST(arg=13, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$X106.22']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=110, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$X106.22', '$i108.23']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=112, inst=LOAD_CONST(arg=0, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=114, inst=LOAD_FAST(arg=10, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24', '$const112.25']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24', '$const112.25', '$d114.26']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=118, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$110binary_subscr.24', '$116build_slice.28']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=120, inst=LOAD_FAST(arg=2, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=122, inst=LOAD_FAST(arg=12, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$current_values120.30']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$current_values120.30', '$j122.31']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=126, inst=LOAD_CONST(arg=0, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=128, inst=LOAD_FAST(arg=10, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32', '$const126.33']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=130, inst=BUILD_SLICE(arg=2, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32', '$const126.33', '$d128.34']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$124binary_subscr.32', '$130build_slice.36']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=134, inst=CALL_METHOD(arg=2, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$104load_method.21', '$118binary_subscr.29', '$132binary_subscr.37']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=136, inst=STORE_FAST(arg=16, lineno=59)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$134call_method.38']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=138, inst=LOAD_FAST(arg=16, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=140, inst=LOAD_METHOD(arg=5, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$maximum138.39']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=142, inst=CALL_METHOD(arg=0, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$140load_method.40']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=144, inst=LOAD_FAST(arg=5, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=146, inst=LOAD_FAST(arg=12, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41', '$total_gains144.42']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=148, inst=BINARY_SUBSCR(arg=None, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41', '$total_gains144.42', '$j146.43']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=150, inst=BINARY_SUBTRACT(arg=None, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$142call_method.41', '$148binary_subscr.44']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=152, inst=STORE_FAST(arg=17, lineno=60)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$150binary_subtract.45']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=154, inst=LOAD_FAST(arg=17, lineno=62)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=156, inst=LOAD_FAST(arg=15, lineno=62)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$gain154.46']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=158, inst=COMPARE_OP(arg=4, lineno=62)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$gain154.46', '$threshold156.47']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=160, inst=POP_JUMP_IF_FALSE(arg=42, lineno=62)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi62.0', '$phi62.1', '$158compare_op.48']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=162, stack=('$phi62.0', '$phi62.1'), blockstack=(), npush=0), Edge(pc=42, stack=('$phi62.0', '$phi62.1'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=162 nstack_initial=2), State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=162 nstack_initial=2), State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=162, inst=LOAD_FAST(arg=16, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=164, inst=LOAD_FAST(arg=2, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=166, inst=LOAD_FAST(arg=12, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$current_values164.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=168, inst=BINARY_SUBSCR(arg=None, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$current_values164.3', '$j166.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=170, inst=LOAD_CONST(arg=0, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=172, inst=LOAD_FAST(arg=10, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5', '$const170.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=174, inst=BUILD_SLICE(arg=2, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5', '$const170.6', '$d172.7']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=176, inst=STORE_SUBSCR(arg=None, lineno=63)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum162.2', '$168binary_subscr.5', '$174build_slice.9']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=178, inst=LOAD_FAST(arg=16, lineno=64)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=180, inst=LOAD_METHOD(arg=5, lineno=64)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$maximum178.10']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=182, inst=CALL_METHOD(arg=0, lineno=64)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$180load_method.11']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=184, inst=LOAD_FAST(arg=5, lineno=64)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$182call_method.12']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=186, inst=LOAD_FAST(arg=12, lineno=64)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$182call_method.12', '$total_gains184.13']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=188, inst=STORE_SUBSCR(arg=None, lineno=64)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$182call_method.12', '$total_gains184.13', '$j186.14']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=190, inst=LOAD_FAST(arg=14, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=192, inst=LOAD_FAST(arg=3, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=194, inst=LOAD_FAST(arg=12, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=196, inst=LOAD_FAST(arg=7, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=198, inst=LOAD_FAST(arg=12, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17', '$n_selected196.18']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=200, inst=BINARY_SUBSCR(arg=None, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17', '$n_selected196.18', '$j198.19']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=202, inst=BUILD_TUPLE(arg=2, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$j194.17', '$200binary_subscr.20']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=204, inst=STORE_SUBSCR(arg=None, lineno=66)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$idx190.15', '$selections192.16', '$202build_tuple.21']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=206, inst=LOAD_FAST(arg=17, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=208, inst=LOAD_FAST(arg=4, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=210, inst=LOAD_FAST(arg=12, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=212, inst=LOAD_FAST(arg=7, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=214, inst=LOAD_FAST(arg=12, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24', '$n_selected212.25']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=216, inst=BINARY_SUBSCR(arg=None, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24', '$n_selected212.25', '$j214.26']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=218, inst=BUILD_TUPLE(arg=2, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$j210.24', '$216binary_subscr.27']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=220, inst=STORE_SUBSCR(arg=None, lineno=67)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$gain206.22', '$gains208.23', '$218build_tuple.28']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=222, inst=LOAD_FAST(arg=7, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=224, inst=LOAD_FAST(arg=12, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=226, inst=DUP_TOP_TWO(arg=None, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=228, inst=BINARY_SUBSCR(arg=None, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$226dup_top_two.31', '$226dup_top_two.32']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=230, inst=LOAD_CONST(arg=3, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$228binary_subscr.33']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=232, inst=INPLACE_ADD(arg=None, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$228binary_subscr.33', '$const230.34']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=234, inst=ROT_THREE(arg=None, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$n_selected222.29', '$j224.30', '$232inplace_add.35']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=236, inst=STORE_SUBSCR(arg=None, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1', '$232inplace_add.35', '$n_selected222.29', '$j224.30']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=238, inst=JUMP_ABSOLUTE(arg=42, lineno=68)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi162.0', '$phi162.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=42, stack=('$phi162.0', '$phi162.1'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=42 nstack_initial=2), State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=42 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=42 nstack_initial=2): {'$phi42.1'},
             State(pc_initial=44 nstack_initial=3): {'$phi44.2'},
             State(pc_initial=58 nstack_initial=2): set(),
             State(pc_initial=62 nstack_initial=2): set(),
             State(pc_initial=162 nstack_initial=2): set(),
             State(pc_initial=240 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:189] DEBUG defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1),
 '$phi42.1': State(pc_initial=32 nstack_initial=2),
 '$phi44.2': State(pc_initial=42 nstack_initial=2)}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi162.1': {('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi240.0': {('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi240.0', State(pc_initial=240 nstack_initial=1)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$phi162.0', State(pc_initial=162 nstack_initial=2)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2)),
                          ('$phi162.1', State(pc_initial=162 nstack_initial=2)),
                          ('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi44.0': {('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi44.1': {('$phi42.1', State(pc_initial=42 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi58.1': {('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi62.0': {('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi62.1': {('$phi44.1', State(pc_initial=44 nstack_initial=3))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi162.1': {('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi240.0': {('$phi162.0',
                            State(pc_initial=162 nstack_initial=2)),
                           ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                           ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi162.0', State(pc_initial=162 nstack_initial=2)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi162.0', State(pc_initial=162 nstack_initial=2)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2)),
                          ('$phi44.1', State(pc_initial=44 nstack_initial=3))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi162.1': {('$40get_iter.5',
                            State(pc_initial=32 nstack_initial=2))},
             '$phi240.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi44.0', State(pc_initial=44 nstack_initial=3))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi162.1': {('$40get_iter.5',
                            State(pc_initial=32 nstack_initial=2))},
             '$phi240.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi162.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi162.1': {('$40get_iter.5',
                            State(pc_initial=32 nstack_initial=2))},
             '$phi240.0': {('$28get_iter.12',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi42.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi42.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi44.2': {('$42for_iter.3',
                           State(pc_initial=42 nstack_initial=2))},
             '$phi58.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))},
             '$phi62.0': {('$28get_iter.12',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$40get_iter.5',
                           State(pc_initial=32 nstack_initial=2))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:220] DEBUG keep phismap: {'$phi30.0': {('$28get_iter.12', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))},
 '$phi42.1': {('$40get_iter.5', State(pc_initial=32 nstack_initial=2))},
 '$phi44.2': {('$42for_iter.3', State(pc_initial=42 nstack_initial=2))}}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.12'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'},
             State(pc_initial=32 nstack_initial=2): {'$phi42.1': '$40get_iter.5'},
             State(pc_initial=42 nstack_initial=2): {'$phi44.2': '$42for_iter.3'}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$X2.0'}), (4, {'item': '$X2.0', 'res': '$4load_attr.1'}), (6, {'iterable': '$4load_attr.1', 'stores': ['$6unpack_sequence.2', '$6unpack_sequence.3'], 'tupleobj': '$6unpack_sequence.4'}), (8, {'value': '$6unpack_sequence.2'}), (10, {'value': '$6unpack_sequence.3'}), (12, {'res': '$max_values12.5'}), (14, {'item': '$max_values12.5', 'res': '$14load_attr.6'}), (16, {'res': '$const16.7'}), (18, {'index': '$const16.7', 'target': '$14load_attr.6', 'res': '$18binary_subscr.8'}), (20, {'value': '$18binary_subscr.8'}), (22, {'res': '$22load_global.9'}), (24, {'res': '$t24.10'}), (26, {'func': '$22load_global.9', 'args': ['$t24.10'], 'res': '$26call_function.11'}), (28, {'value': '$26call_function.11', 'res': '$28get_iter.12'})), outgoing_phis={'$phi30.0': '$28get_iter.12'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.12',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: (), 32: ('$phi30.0', '$30for_iter.2')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$34load_global.2'}), (36, {'res': '$n36.3'}), (38, {'func': '$34load_global.2', 'args': ['$n36.3'], 'res': '$38call_function.4'}), (40, {'value': '$38call_function.4', 'res': '$40get_iter.5'})), outgoing_phis={'$phi42.1': '$40get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi32.0', '$40get_iter.5')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=42 nstack_initial=2):
AdaptBlockInfo(insts=((42, {'iterator': '$phi42.1', 'pair': '$42for_iter.2', 'indval': '$42for_iter.3', 'pred': '$42for_iter.4'}),), outgoing_phis={'$phi44.2': '$42for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: ('$phi42.0',), 44: ('$phi42.0', '$phi42.1', '$42for_iter.3')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=44 nstack_initial=3):
AdaptBlockInfo(insts=((44, {'value': '$phi44.2'}), (46, {'res': '$n_selected46.3'}), (48, {'res': '$j48.4'}), (50, {'index': '$j48.4', 'target': '$n_selected46.3', 'res': '$50binary_subscr.5'}), (52, {'res': '$k52.6'}), (54, {'lhs': '$50binary_subscr.5', 'rhs': '$k52.6', 'res': '$54compare_op.7'}), (56, {'pred': '$54compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$phi44.0', '$phi44.1'), 62: ('$phi44.0', '$phi44.1')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=58 nstack_initial=2):
AdaptBlockInfo(insts=((60, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi58.0',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'res': '$idxs62.2'}), (64, {'res': '$i64.3'}), (66, {'index': '$i64.3', 'target': '$idxs62.2', 'res': '$66binary_subscr.4'}), (68, {'value': '$66binary_subscr.4'}), (70, {'res': '$max_values70.5'}), (72, {'res': '$j72.6'}), (74, {'index': '$j72.6', 'target': '$max_values70.5', 'res': '$74binary_subscr.7'}), (76, {'res': '$const76.8'}), (78, {'lhs': '$74binary_subscr.7', 'rhs': '$const76.8', 'res': '$78binary_true_divide.9'}), (80, {'res': '$total_gains80.10'}), (82, {'res': '$j82.11'}), (84, {'index': '$j82.11', 'target': '$total_gains80.10', 'res': '$84binary_subscr.12'}), (86, {'lhs': '$78binary_true_divide.9', 'rhs': '$84binary_subscr.12', 'res': '$86binary_subtract.13'}), (88, {'res': '$k88.14'}), (90, {'res': '$n_selected90.15'}), (92, {'res': '$j92.16'}), (94, {'index': '$j92.16', 'target': '$n_selected90.15', 'res': '$94binary_subscr.17'}), (96, {'lhs': '$k88.14', 'rhs': '$94binary_subscr.17', 'res': '$96binary_subtract.18'}), (98, {'lhs': '$86binary_subtract.13', 'rhs': '$96binary_subtract.18', 'res': '$98binary_true_divide.19'}), (100, {'value': '$98binary_true_divide.19'}), (102, {'res': '$102load_global.20'}), (104, {'item': '$102load_global.20', 'res': '$104load_method.21'}), (106, {'res': '$X106.22'}), (108, {'res': '$i108.23'}), (110, {'index': '$i108.23', 'target': '$X106.22', 'res': '$110binary_subscr.24'}), (112, {'res': '$const112.25'}), (114, {'res': '$d114.26'}), (116, {'start': '$const112.25', 'stop': '$d114.26', 'step': None, 'res': '$116build_slice.28', 'slicevar': '$116build_slice.27'}), (118, {'index': '$116build_slice.28', 'target': '$110binary_subscr.24', 'res': '$118binary_subscr.29'}), (120, {'res': '$current_values120.30'}), (122, {'res': '$j122.31'}), (124, {'index': '$j122.31', 'target': '$current_values120.30', 'res': '$124binary_subscr.32'}), (126, {'res': '$const126.33'}), (128, {'res': '$d128.34'}), (130, {'start': '$const126.33', 'stop': '$d128.34', 'step': None, 'res': '$130build_slice.36', 'slicevar': '$130build_slice.35'}), (132, {'index': '$130build_slice.36', 'target': '$124binary_subscr.32', 'res': '$132binary_subscr.37'}), (134, {'func': '$104load_method.21', 'args': ['$118binary_subscr.29', '$132binary_subscr.37'], 'res': '$134call_method.38'}), (136, {'value': '$134call_method.38'}), (138, {'res': '$maximum138.39'}), (140, {'item': '$maximum138.39', 'res': '$140load_method.40'}), (142, {'func': '$140load_method.40', 'args': [], 'res': '$142call_method.41'}), (144, {'res': '$total_gains144.42'}), (146, {'res': '$j146.43'}), (148, {'index': '$j146.43', 'target': '$total_gains144.42', 'res': '$148binary_subscr.44'}), (150, {'lhs': '$142call_method.41', 'rhs': '$148binary_subscr.44', 'res': '$150binary_subtract.45'}), (152, {'value': '$150binary_subtract.45'}), (154, {'res': '$gain154.46'}), (156, {'res': '$threshold156.47'}), (158, {'lhs': '$gain154.46', 'rhs': '$threshold156.47', 'res': '$158compare_op.48'}), (160, {'pred': '$158compare_op.48'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: ('$phi62.0', '$phi62.1'), 42: ('$phi62.0', '$phi62.1')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=162 nstack_initial=2):
AdaptBlockInfo(insts=((162, {'res': '$maximum162.2'}), (164, {'res': '$current_values164.3'}), (166, {'res': '$j166.4'}), (168, {'index': '$j166.4', 'target': '$current_values164.3', 'res': '$168binary_subscr.5'}), (170, {'res': '$const170.6'}), (172, {'res': '$d172.7'}), (174, {'start': '$const170.6', 'stop': '$d172.7', 'step': None, 'res': '$174build_slice.9', 'slicevar': '$174build_slice.8'}), (176, {'target': '$168binary_subscr.5', 'index': '$174build_slice.9', 'value': '$maximum162.2'}), (178, {'res': '$maximum178.10'}), (180, {'item': '$maximum178.10', 'res': '$180load_method.11'}), (182, {'func': '$180load_method.11', 'args': [], 'res': '$182call_method.12'}), (184, {'res': '$total_gains184.13'}), (186, {'res': '$j186.14'}), (188, {'target': '$total_gains184.13', 'index': '$j186.14', 'value': '$182call_method.12'}), (190, {'res': '$idx190.15'}), (192, {'res': '$selections192.16'}), (194, {'res': '$j194.17'}), (196, {'res': '$n_selected196.18'}), (198, {'res': '$j198.19'}), (200, {'index': '$j198.19', 'target': '$n_selected196.18', 'res': '$200binary_subscr.20'}), (202, {'items': ['$j194.17', '$200binary_subscr.20'], 'res': '$202build_tuple.21'}), (204, {'target': '$selections192.16', 'index': '$202build_tuple.21', 'value': '$idx190.15'}), (206, {'res': '$gain206.22'}), (208, {'res': '$gains208.23'}), (210, {'res': '$j210.24'}), (212, {'res': '$n_selected212.25'}), (214, {'res': '$j214.26'}), (216, {'index': '$j214.26', 'target': '$n_selected212.25', 'res': '$216binary_subscr.27'}), (218, {'items': ['$j210.24', '$216binary_subscr.27'], 'res': '$218build_tuple.28'}), (220, {'target': '$gains208.23', 'index': '$218build_tuple.28', 'value': '$gain206.22'}), (222, {'res': '$n_selected222.29'}), (224, {'res': '$j224.30'}), (226, {'orig': ['$n_selected222.29', '$j224.30'], 'duped': ['$226dup_top_two.31', '$226dup_top_two.32']}), (228, {'index': '$226dup_top_two.32', 'target': '$226dup_top_two.31', 'res': '$228binary_subscr.33'}), (230, {'res': '$const230.34'}), (232, {'lhs': '$228binary_subscr.33', 'rhs': '$const230.34', 'res': '$232inplace_add.35'}), (236, {'target': '$n_selected222.29', 'index': '$j224.30', 'value': '$232inplace_add.35'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi162.0', '$phi162.1')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=240 nstack_initial=1):
AdaptBlockInfo(insts=((240, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi240.0',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=242 nstack_initial=0):
AdaptBlockInfo(insts=((242, {'res': '$const242.0'}), (244, {'retval': '$const242.0', 'castval': '$244return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:27:37 interpreter.py[line:379] DEBUG label 0:
    X = arg(0, name=X)                       ['X']
    k = arg(1, name=k)                       ['k']
    current_values = arg(2, name=current_values) ['current_values']
    selections = arg(3, name=selections)     ['selections']
    gains = arg(4, name=gains)               ['gains']
    total_gains = arg(5, name=total_gains)   ['total_gains']
    max_values = arg(6, name=max_values)     ['max_values']
    n_selected = arg(7, name=n_selected)     ['n_selected']
    idxs = arg(8, name=idxs)                 ['idxs']
    $4load_attr.1 = getattr(value=X, attr=shape) ['$4load_attr.1', 'X']
    $6unpack_sequence.4 = exhaust_iter(value=$4load_attr.1, count=2) ['$4load_attr.1', '$6unpack_sequence.4']
    $6unpack_sequence.2 = static_getitem(value=$6unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$6unpack_sequence.2', '$6unpack_sequence.4']
    $6unpack_sequence.3 = static_getitem(value=$6unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$6unpack_sequence.3', '$6unpack_sequence.4']
    n = $6unpack_sequence.2                  ['$6unpack_sequence.2', 'n']
    d = $6unpack_sequence.3                  ['$6unpack_sequence.3', 'd']
    $14load_attr.6 = getattr(value=max_values, attr=shape) ['$14load_attr.6', 'max_values']
    $const16.7 = const(int, 0)               ['$const16.7']
    t = getitem(value=$14load_attr.6, index=$const16.7, fn=<built-in function getitem>) ['$14load_attr.6', '$const16.7', 't']
    $22load_global.9 = global(prange: <class 'numba.misc.special.prange'>) ['$22load_global.9']
    $26call_function.11 = call $22load_global.9(t, func=$22load_global.9, args=[Var(t, facilityLocation.py:50)], kws=(), vararg=None) ['$22load_global.9', '$26call_function.11', 't']
    $28get_iter.12 = getiter(value=$26call_function.11) ['$26call_function.11', '$28get_iter.12']
    $phi30.0 = $28get_iter.12                ['$28get_iter.12', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 242            ['$30for_iter.3']
label 32:
    j = $phi32.1                             ['$phi32.1', 'j']
    $34load_global.2 = global(range: <class 'range'>) ['$34load_global.2']
    $38call_function.4 = call $34load_global.2(n, func=$34load_global.2, args=[Var(n, facilityLocation.py:49)], kws=(), vararg=None) ['$34load_global.2', '$38call_function.4', 'n']
    $40get_iter.5 = getiter(value=$38call_function.4) ['$38call_function.4', '$40get_iter.5']
    $phi42.1 = $40get_iter.5                 ['$40get_iter.5', '$phi42.1']
    jump 42                                  []
label 42:
    $42for_iter.2 = iternext(value=$phi42.1) ['$42for_iter.2', '$phi42.1']
    $42for_iter.3 = pair_first(value=$42for_iter.2) ['$42for_iter.2', '$42for_iter.3']
    $42for_iter.4 = pair_second(value=$42for_iter.2) ['$42for_iter.2', '$42for_iter.4']
    $phi44.2 = $42for_iter.3                 ['$42for_iter.3', '$phi44.2']
    branch $42for_iter.4, 44, 240            ['$42for_iter.4']
label 44:
    i = $phi44.2                             ['$phi44.2', 'i']
    $50binary_subscr.5 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$50binary_subscr.5', 'j', 'n_selected']
    $54compare_op.7 = $50binary_subscr.5 == k ['$50binary_subscr.5', '$54compare_op.7', 'k']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.7, func=bool56, args=(Var($54compare_op.7, facilityLocation.py:54),), kws=(), vararg=None) ['$54compare_op.7', '$56pred', 'bool56']
    branch $56pred, 58, 62                   ['$56pred']
label 58:
    jump 30                                  []
label 62:
    idx = getitem(value=idxs, index=i, fn=<built-in function getitem>) ['i', 'idx', 'idxs']
    $74binary_subscr.7 = getitem(value=max_values, index=j, fn=<built-in function getitem>) ['$74binary_subscr.7', 'j', 'max_values']
    $const76.8 = const(float, 2.0)           ['$const76.8']
    $78binary_true_divide.9 = $74binary_subscr.7 / $const76.8 ['$74binary_subscr.7', '$78binary_true_divide.9', '$const76.8']
    $84binary_subscr.12 = getitem(value=total_gains, index=j, fn=<built-in function getitem>) ['$84binary_subscr.12', 'j', 'total_gains']
    $86binary_subtract.13 = $78binary_true_divide.9 - $84binary_subscr.12 ['$78binary_true_divide.9', '$84binary_subscr.12', '$86binary_subtract.13']
    $94binary_subscr.17 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$94binary_subscr.17', 'j', 'n_selected']
    $96binary_subtract.18 = k - $94binary_subscr.17 ['$94binary_subscr.17', '$96binary_subtract.18', 'k']
    threshold = $86binary_subtract.13 / $96binary_subtract.18 ['$86binary_subtract.13', '$96binary_subtract.18', 'threshold']
    $102load_global.20 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>) ['$102load_global.20']
    $104load_method.21 = getattr(value=$102load_global.20, attr=maximum) ['$102load_global.20', '$104load_method.21']
    $110binary_subscr.24 = getitem(value=X, index=i, fn=<built-in function getitem>) ['$110binary_subscr.24', 'X', 'i']
    $const112.25 = const(NoneType, None)     ['$const112.25']
    $116build_slice.27 = global(slice: <class 'slice'>) ['$116build_slice.27']
    $116build_slice.28 = call $116build_slice.27($const112.25, d, func=$116build_slice.27, args=(Var($const112.25, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None) ['$116build_slice.27', '$116build_slice.28', '$const112.25', 'd']
    $118binary_subscr.29 = getitem(value=$110binary_subscr.24, index=$116build_slice.28, fn=<built-in function getitem>) ['$110binary_subscr.24', '$116build_slice.28', '$118binary_subscr.29']
    $124binary_subscr.32 = getitem(value=current_values, index=j, fn=<built-in function getitem>) ['$124binary_subscr.32', 'current_values', 'j']
    $const126.33 = const(NoneType, None)     ['$const126.33']
    $130build_slice.35 = global(slice: <class 'slice'>) ['$130build_slice.35']
    $130build_slice.36 = call $130build_slice.35($const126.33, d, func=$130build_slice.35, args=(Var($const126.33, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None) ['$130build_slice.35', '$130build_slice.36', '$const126.33', 'd']
    $132binary_subscr.37 = getitem(value=$124binary_subscr.32, index=$130build_slice.36, fn=<built-in function getitem>) ['$124binary_subscr.32', '$130build_slice.36', '$132binary_subscr.37']
    maximum = call $104load_method.21($118binary_subscr.29, $132binary_subscr.37, func=$104load_method.21, args=[Var($118binary_subscr.29, facilityLocation.py:59), Var($132binary_subscr.37, facilityLocation.py:59)], kws=(), vararg=None) ['$104load_method.21', '$118binary_subscr.29', '$132binary_subscr.37', 'maximum']
    $140load_method.40 = getattr(value=maximum, attr=mean) ['$140load_method.40', 'maximum']
    $142call_method.41 = call $140load_method.40(func=$140load_method.40, args=[], kws=(), vararg=None) ['$140load_method.40', '$142call_method.41']
    $148binary_subscr.44 = getitem(value=total_gains, index=j, fn=<built-in function getitem>) ['$148binary_subscr.44', 'j', 'total_gains']
    gain = $142call_method.41 - $148binary_subscr.44 ['$142call_method.41', '$148binary_subscr.44', 'gain']
    $158compare_op.48 = gain > threshold     ['$158compare_op.48', 'gain', 'threshold']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($158compare_op.48, func=bool160, args=(Var($158compare_op.48, facilityLocation.py:62),), kws=(), vararg=None) ['$158compare_op.48', '$160pred', 'bool160']
    branch $160pred, 162, 42                 ['$160pred']
label 162:
    $168binary_subscr.5 = getitem(value=current_values, index=j, fn=<built-in function getitem>) ['$168binary_subscr.5', 'current_values', 'j']
    $const170.6 = const(NoneType, None)      ['$const170.6']
    $174build_slice.8 = global(slice: <class 'slice'>) ['$174build_slice.8']
    $174build_slice.9 = call $174build_slice.8($const170.6, d, func=$174build_slice.8, args=(Var($const170.6, facilityLocation.py:63), Var(d, facilityLocation.py:49)), kws=(), vararg=None) ['$174build_slice.8', '$174build_slice.9', '$const170.6', 'd']
    $168binary_subscr.5[$174build_slice.9] = maximum ['$168binary_subscr.5', '$174build_slice.9', 'maximum']
    $180load_method.11 = getattr(value=maximum, attr=mean) ['$180load_method.11', 'maximum']
    $182call_method.12 = call $180load_method.11(func=$180load_method.11, args=[], kws=(), vararg=None) ['$180load_method.11', '$182call_method.12']
    total_gains[j] = $182call_method.12      ['$182call_method.12', 'j', 'total_gains']
    $200binary_subscr.20 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$200binary_subscr.20', 'j', 'n_selected']
    $202build_tuple.21 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($200binary_subscr.20, facilityLocation.py:66)]) ['$200binary_subscr.20', '$202build_tuple.21', 'j']
    selections[$202build_tuple.21] = idx     ['$202build_tuple.21', 'idx', 'selections']
    $216binary_subscr.27 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$216binary_subscr.27', 'j', 'n_selected']
    $218build_tuple.28 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($216binary_subscr.27, facilityLocation.py:67)]) ['$216binary_subscr.27', '$218build_tuple.28', 'j']
    gains[$218build_tuple.28] = gain         ['$218build_tuple.28', 'gain', 'gains']
    $228binary_subscr.33 = getitem(value=n_selected, index=j, fn=<built-in function getitem>) ['$228binary_subscr.33', 'j', 'n_selected']
    $const230.34 = const(int, 1)             ['$const230.34']
    $232inplace_add.35 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$228binary_subscr.33, rhs=$const230.34, static_lhs=Undefined, static_rhs=Undefined) ['$228binary_subscr.33', '$232inplace_add.35', '$const230.34']
    n_selected[j] = $232inplace_add.35       ['$232inplace_add.35', 'j', 'n_selected']
    jump 42                                  []
label 240:
    jump 30                                  []
label 242:
    $const242.0 = const(NoneType, None)      ['$const242.0']
    $244return_value.1 = cast(value=$const242.0) ['$244return_value.1', '$const242.0']
    return $244return_value.1                ['$244return_value.1']

Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: X = arg(0, name=X)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: k = arg(1, name=k)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: current_values = arg(2, name=current_values)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: selections = arg(3, name=selections)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: gains = arg(4, name=gains)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: total_gains = arg(5, name=total_gains)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: max_values = arg(6, name=max_values)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: n_selected = arg(7, name=n_selected)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: idxs = arg(8, name=idxs)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $4load_attr.1 = getattr(value=X, attr=shape)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $6unpack_sequence.4 = exhaust_iter(value=$4load_attr.1, count=2)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $6unpack_sequence.2 = static_getitem(value=$6unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $6unpack_sequence.3 = static_getitem(value=$6unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: n = $6unpack_sequence.2
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: d = $6unpack_sequence.3
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $14load_attr.6 = getattr(value=max_values, attr=shape)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const16.7 = const(int, 0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: t = static_getitem(value=$14load_attr.6, index=0, index_var=$const16.7, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $22load_global.9 = global(prange: <class 'numba.misc.special.prange'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $26call_function.11 = call $22load_global.9(t, func=$22load_global.9, args=[Var(t, facilityLocation.py:50)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $28get_iter.12 = getiter(value=$26call_function.11)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $phi30.0 = $28get_iter.12
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 30
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $30for_iter.1 = iternext(value=$phi30.0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $30for_iter.2 = pair_first(value=$30for_iter.1)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $30for_iter.3 = pair_second(value=$30for_iter.1)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $phi32.1 = $30for_iter.2
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $30for_iter.3, 32, 242
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 32
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: j = $phi32.1
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $34load_global.2 = global(range: <class 'range'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $38call_function.4 = call $34load_global.2(n, func=$34load_global.2, args=[Var(n, facilityLocation.py:49)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $40get_iter.5 = getiter(value=$38call_function.4)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $phi42.1 = $40get_iter.5
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 42
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 42
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $42for_iter.2 = iternext(value=$phi42.1)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $42for_iter.3 = pair_first(value=$42for_iter.2)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $42for_iter.4 = pair_second(value=$42for_iter.2)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $phi44.2 = $42for_iter.3
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $42for_iter.4, 44, 240
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 44
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: i = $phi44.2
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $50binary_subscr.5 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $54compare_op.7 = $50binary_subscr.5 == k
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: bool56 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $56pred = call bool56($54compare_op.7, func=bool56, args=(Var($54compare_op.7, facilityLocation.py:54),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $56pred, 58, 62
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 58
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 243
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 62
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: idx = getitem(value=idxs, index=i, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $74binary_subscr.7 = getitem(value=max_values, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const76.8 = const(float, 2.0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $78binary_true_divide.9 = $74binary_subscr.7 / $const76.8
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $84binary_subscr.12 = getitem(value=total_gains, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $86binary_subtract.13 = $78binary_true_divide.9 - $84binary_subscr.12
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $94binary_subscr.17 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $96binary_subtract.18 = k - $94binary_subscr.17
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: threshold = $86binary_subtract.13 / $96binary_subtract.18
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $102load_global.20 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $104load_method.21 = getattr(value=$102load_global.20, attr=maximum)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24 = getitem(value=X, index=i, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const112.25 = const(NoneType, None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $116build_slice.27 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $116build_slice.28 = call $116build_slice.27($const112.25, d, func=$116build_slice.27, args=(Var($const112.25, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $118binary_subscr.29 = getitem(value=$110binary_subscr.24, index=$116build_slice.28, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $124binary_subscr.32 = getitem(value=current_values, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const126.33 = const(NoneType, None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $130build_slice.35 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $130build_slice.36 = call $130build_slice.35($const126.33, d, func=$130build_slice.35, args=(Var($const126.33, facilityLocation.py:59), Var(d, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $132binary_subscr.37 = getitem(value=$124binary_subscr.32, index=$130build_slice.36, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: maximum = call $104load_method.21($118binary_subscr.29, $132binary_subscr.37, func=$104load_method.21, args=[Var($118binary_subscr.29, facilityLocation.py:59), Var($132binary_subscr.37, facilityLocation.py:59)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $140load_method.40 = getattr(value=maximum, attr=mean)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $142call_method.41 = call $140load_method.40(func=$140load_method.40, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $148binary_subscr.44 = getitem(value=total_gains, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: gain = $142call_method.41 - $148binary_subscr.44
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $158compare_op.48 = gain > threshold
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: bool160 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $160pred = call bool160($158compare_op.48, func=bool160, args=(Var($158compare_op.48, facilityLocation.py:62),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $160pred, 162, 244
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 162
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5 = getitem(value=current_values, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const170.6 = const(NoneType, None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $174build_slice.8 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $174build_slice.9 = call $174build_slice.8($const170.6, d, func=$174build_slice.8, args=(Var($const170.6, facilityLocation.py:63), Var(d, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5[$174build_slice.9] = maximum
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $180load_method.11 = getattr(value=maximum, attr=mean)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $182call_method.12 = call $180load_method.11(func=$180load_method.11, args=[], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: total_gains[j] = $182call_method.12
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $200binary_subscr.20 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $202build_tuple.21 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($200binary_subscr.20, facilityLocation.py:66)])
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: selections[$202build_tuple.21] = idx
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $216binary_subscr.27 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $218build_tuple.28 = build_tuple(items=[Var(j, facilityLocation.py:52), Var($216binary_subscr.27, facilityLocation.py:67)])
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: gains[$218build_tuple.28] = gain
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $228binary_subscr.33 = getitem(value=n_selected, index=j, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const230.34 = const(int, 1)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $232inplace_add.35 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$228binary_subscr.33, rhs=$const230.34, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: n_selected[j] = $232inplace_add.35
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 244
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 240
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 243
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 242
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const242.0 = const(NoneType, None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $244return_value.1 = cast(value=$const242.0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: return $244return_value.1
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 243
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 244
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96200f3760>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 42
Sat, 02 Apr 2022 20:27:37 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$102load_global.20': [<numba.core.ir.Assign object at 0x7f96208e3fd0>],
             '$104load_method.21': [<numba.core.ir.Assign object at 0x7f96208e3d30>],
             '$110binary_subscr.24': [<numba.core.ir.Assign object at 0x7f96208e3100>],
             '$116build_slice.27': [<numba.core.ir.Assign object at 0x7f96208e3580>],
             '$116build_slice.28': [<numba.core.ir.Assign object at 0x7f96200425e0>],
             '$118binary_subscr.29': [<numba.core.ir.Assign object at 0x7f9620042a60>],
             '$124binary_subscr.32': [<numba.core.ir.Assign object at 0x7f9620042e80>],
             '$130build_slice.35': [<numba.core.ir.Assign object at 0x7f9620042280>],
             '$130build_slice.36': [<numba.core.ir.Assign object at 0x7f9620042580>],
             '$132binary_subscr.37': [<numba.core.ir.Assign object at 0x7f9620042700>],
             '$140load_method.40': [<numba.core.ir.Assign object at 0x7f96200b9fa0>],
             '$142call_method.41': [<numba.core.ir.Assign object at 0x7f96200b9d30>],
             '$148binary_subscr.44': [<numba.core.ir.Assign object at 0x7f96200b91f0>],
             '$14load_attr.6': [<numba.core.ir.Assign object at 0x7f962005e640>],
             '$158compare_op.48': [<numba.core.ir.Assign object at 0x7f962005ddf0>],
             '$160pred': [<numba.core.ir.Assign object at 0x7f962005d1f0>],
             '$168binary_subscr.5': [<numba.core.ir.Assign object at 0x7f9620042970>],
             '$174build_slice.8': [<numba.core.ir.Assign object at 0x7f962005d400>],
             '$174build_slice.9': [<numba.core.ir.Assign object at 0x7f962005d190>],
             '$180load_method.11': [<numba.core.ir.Assign object at 0x7f962005da30>],
             '$182call_method.12': [<numba.core.ir.Assign object at 0x7f962005d220>],
             '$200binary_subscr.20': [<numba.core.ir.Assign object at 0x7f96200bfbb0>],
             '$202build_tuple.21': [<numba.core.ir.Assign object at 0x7f96200bff40>],
             '$216binary_subscr.27': [<numba.core.ir.Assign object at 0x7f9623ae6190>],
             '$218build_tuple.28': [<numba.core.ir.Assign object at 0x7f9623ae62e0>],
             '$228binary_subscr.33': [<numba.core.ir.Assign object at 0x7f96200ccf70>],
             '$22load_global.9': [<numba.core.ir.Assign object at 0x7f9623afa880>],
             '$232inplace_add.35': [<numba.core.ir.Assign object at 0x7f960ff51160>],
             '$244return_value.1': [<numba.core.ir.Assign object at 0x7f9623ae6a90>],
             '$26call_function.11': [<numba.core.ir.Assign object at 0x7f9623afa910>],
             '$28get_iter.12': [<numba.core.ir.Assign object at 0x7f962004e4c0>],
             '$30for_iter.1': [<numba.core.ir.Assign object at 0x7f962004ef70>],
             '$30for_iter.2': [<numba.core.ir.Assign object at 0x7f962004ed30>],
             '$30for_iter.3': [<numba.core.ir.Assign object at 0x7f962004ef10>],
             '$34load_global.2': [<numba.core.ir.Assign object at 0x7f962004e670>],
             '$38call_function.4': [<numba.core.ir.Assign object at 0x7f962004e760>],
             '$40get_iter.5': [<numba.core.ir.Assign object at 0x7f962004e5b0>],
             '$42for_iter.2': [<numba.core.ir.Assign object at 0x7f96208cebe0>],
             '$42for_iter.3': [<numba.core.ir.Assign object at 0x7f96208ce7c0>],
             '$42for_iter.4': [<numba.core.ir.Assign object at 0x7f96208ce820>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f962005e1f0>],
             '$50binary_subscr.5': [<numba.core.ir.Assign object at 0x7f96208ce550>],
             '$54compare_op.7': [<numba.core.ir.Assign object at 0x7f96208ce0d0>],
             '$56pred': [<numba.core.ir.Assign object at 0x7f9620066df0>],
             '$6unpack_sequence.2': [<numba.core.ir.Assign object at 0x7f962005e190>],
             '$6unpack_sequence.3': [<numba.core.ir.Assign object at 0x7f962005e820>],
             '$6unpack_sequence.4': [<numba.core.ir.Assign object at 0x7f962005efd0>],
             '$74binary_subscr.7': [<numba.core.ir.Assign object at 0x7f9622aecaf0>],
             '$78binary_true_divide.9': [<numba.core.ir.Assign object at 0x7f9622aecdf0>],
             '$84binary_subscr.12': [<numba.core.ir.Assign object at 0x7f9622aec940>],
             '$86binary_subtract.13': [<numba.core.ir.Assign object at 0x7f9622aec7c0>],
             '$94binary_subscr.17': [<numba.core.ir.Assign object at 0x7f9622aec130>],
             '$96binary_subtract.18': [<numba.core.ir.Assign object at 0x7f9622aecbb0>],
             '$const112.25': [<numba.core.ir.Assign object at 0x7f96208e3280>],
             '$const126.33': [<numba.core.ir.Assign object at 0x7f9620042c40>],
             '$const16.7': [<numba.core.ir.Assign object at 0x7f9623afa2e0>],
             '$const170.6': [<numba.core.ir.Assign object at 0x7f96200b97c0>],
             '$const230.34': [<numba.core.ir.Assign object at 0x7f960ff511c0>],
             '$const242.0': [<numba.core.ir.Assign object at 0x7f96200bf250>],
             '$const76.8': [<numba.core.ir.Assign object at 0x7f9622aecf10>],
             '$phi30.0': [<numba.core.ir.Assign object at 0x7f962005e610>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7f962004e550>],
             '$phi42.1': [<numba.core.ir.Assign object at 0x7f962004e1c0>],
             '$phi44.2': [<numba.core.ir.Assign object at 0x7f96208ceeb0>],
             'X': [<numba.core.ir.Assign object at 0x7f9658084e20>],
             'bool160': [<numba.core.ir.Assign object at 0x7f962005d160>],
             'bool56': [<numba.core.ir.Assign object at 0x7f96208cef70>],
             'current_values': [<numba.core.ir.Assign object at 0x7f965805c580>],
             'd': [<numba.core.ir.Assign object at 0x7f962005ecd0>],
             'gain': [<numba.core.ir.Assign object at 0x7f96200b9ca0>],
             'gains': [<numba.core.ir.Assign object at 0x7f965805c100>],
             'i': [<numba.core.ir.Assign object at 0x7f96208cea90>],
             'idx': [<numba.core.ir.Assign object at 0x7f96200665b0>],
             'idxs': [<numba.core.ir.Assign object at 0x7f9622adbee0>],
             'j': [<numba.core.ir.Assign object at 0x7f962004e9d0>],
             'k': [<numba.core.ir.Assign object at 0x7f9658084610>],
             'max_values': [<numba.core.ir.Assign object at 0x7f96200bcf70>],
             'maximum': [<numba.core.ir.Assign object at 0x7f96200b9190>],
             'n': [<numba.core.ir.Assign object at 0x7f962005ec40>],
             'n_selected': [<numba.core.ir.Assign object at 0x7f9622adb6d0>],
             'selections': [<numba.core.ir.Assign object at 0x7f965805c640>],
             't': [<numba.core.ir.Assign object at 0x7f965807d4f0>],
             'threshold': [<numba.core.ir.Assign object at 0x7f96208e33d0>],
             'total_gains': [<numba.core.ir.Assign object at 0x7f965805cd30>]})
Sat, 02 Apr 2022 20:27:37 ssa.py[line:143] DEBUG SSA violators set()
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=299)
           2	LOAD_GLOBAL(arg=0, lineno=299)
           4	LOAD_ATTR(arg=1, lineno=299)
           6	LOAD_ATTR(arg=2, lineno=299)
           8	LOAD_METHOD(arg=3, lineno=299)
          10	CALL_METHOD(arg=0, lineno=299)
          12	POP_TOP(arg=None, lineno=299)
          14	LOAD_DEREF(arg=0, lineno=300)
          16	STORE_FAST(arg=1, lineno=300)
          18	LOAD_GLOBAL(arg=0, lineno=301)
          20	LOAD_ATTR(arg=1, lineno=301)
          22	LOAD_ATTR(arg=2, lineno=301)
          24	LOAD_METHOD(arg=4, lineno=301)
          26	LOAD_GLOBAL(arg=5, lineno=301)
          28	LOAD_FAST(arg=0, lineno=301)
          30	CALL_FUNCTION(arg=1, lineno=301)
          32	CALL_METHOD(arg=1, lineno=301)
          34	GET_ITER(arg=None, lineno=301)
>         36	FOR_ITER(arg=16, lineno=301)
          38	STORE_FAST(arg=2, lineno=301)
          40	LOAD_FAST(arg=1, lineno=302)
          42	LOAD_FAST(arg=0, lineno=302)
          44	LOAD_FAST(arg=2, lineno=302)
          46	BINARY_SUBSCR(arg=None, lineno=302)
          48	INPLACE_ADD(arg=None, lineno=302)
          50	STORE_FAST(arg=1, lineno=302)
          52	JUMP_ABSOLUTE(arg=36, lineno=302)
>         54	LOAD_FAST(arg=1, lineno=303)
          56	LOAD_GLOBAL(arg=5, lineno=303)
          58	LOAD_FAST(arg=0, lineno=303)
          60	CALL_FUNCTION(arg=1, lineno=303)
          62	BINARY_TRUE_DIVIDE(arg=None, lineno=303)
          64	RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_ATTR(arg=2, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$4load_attr.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=8, inst=LOAD_METHOD(arg=3, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$6load_attr.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=10, inst=CALL_METHOD(arg=0, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$8load_method.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=12, inst=POP_TOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$10call_method.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=14, inst=LOAD_DEREF(arg=0, lineno=300)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=16, inst=STORE_FAST(arg=1, lineno=300)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$14load_deref.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$18load_global.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$20load_attr.7']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_METHOD(arg=4, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$22load_attr.8']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10', '$in_arr28.11']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=32, inst=CALL_METHOD(arg=1, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$30call_function.12']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=34, inst=GET_ITER(arg=None, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$32call_method.13']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$34get_iter.14',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi36.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=36, inst=FOR_ITER(arg=16, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi36.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=56, inst=LOAD_GLOBAL(arg=5, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=60, inst=CALL_FUNCTION(arg=1, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1', '$in_arr58.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=62, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0', '$60call_function.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$62binary_true_divide.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=38, inst=STORE_FAST(arg=2, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3', '$i44.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=48, inst=INPLACE_ADD(arg=None, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$46binary_subscr.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=50, inst=STORE_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$48inplace_add.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=52, inst=JUMP_ABSOLUTE(arg=36, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$phi38.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=54 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:189] DEBUG defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:220] DEBUG keep phismap: {'$phi36.0': {('$34get_iter.14', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.14'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'item': '$4load_attr.1', 'res': '$6load_attr.2'}), (8, {'item': '$6load_attr.2', 'res': '$8load_method.3'}), (10, {'func': '$8load_method.3', 'args': [], 'res': '$10call_method.4'}), (14, {'res': '$14load_deref.5'}), (16, {'value': '$14load_deref.5'}), (18, {'res': '$18load_global.6'}), (20, {'item': '$18load_global.6', 'res': '$20load_attr.7'}), (22, {'item': '$20load_attr.7', 'res': '$22load_attr.8'}), (24, {'item': '$22load_attr.8', 'res': '$24load_method.9'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$in_arr28.11'}), (30, {'func': '$26load_global.10', 'args': ['$in_arr28.11'], 'res': '$30call_function.12'}), (32, {'func': '$24load_method.9', 'args': ['$30call_function.12'], 'res': '$32call_method.13'}), (34, {'value': '$32call_method.13', 'res': '$34get_iter.14'})), outgoing_phis={'$phi36.0': '$34get_iter.14'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.14',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 38: ('$phi36.0', '$36for_iter.2')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$val40.2'}), (42, {'res': '$in_arr42.3'}), (44, {'res': '$i44.4'}), (46, {'index': '$i44.4', 'target': '$in_arr42.3', 'res': '$46binary_subscr.5'}), (48, {'lhs': '$val40.2', 'rhs': '$46binary_subscr.5', 'res': '$48inplace_add.6'}), (50, {'value': '$48inplace_add.6'}), (52, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi38.0',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$val54.0'}), (56, {'res': '$56load_global.1'}), (58, {'res': '$in_arr58.2'}), (60, {'func': '$56load_global.1', 'args': ['$in_arr58.2'], 'res': '$60call_function.3'}), (62, {'lhs': '$val54.0', 'rhs': '$60call_function.3', 'res': '$62binary_true_divide.4'}), (64, {'retval': '$62binary_true_divide.4', 'castval': '$64return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:27:37 interpreter.py[line:379] DEBUG label 0:
    in_arr = arg(0, name=in_arr)             ['in_arr']
    $2load_global.0 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=parfors) ['$2load_global.0', '$4load_attr.1']
    $6load_attr.2 = getattr(value=$4load_attr.1, attr=parfor) ['$4load_attr.1', '$6load_attr.2']
    $8load_method.3 = getattr(value=$6load_attr.2, attr=init_prange) ['$6load_attr.2', '$8load_method.3']
    $10call_method.4 = call $8load_method.3(func=$8load_method.3, args=[], kws=(), vararg=None) ['$10call_method.4', '$8load_method.3']
    val = freevar(zero: 0.0)                 ['val']
    $18load_global.6 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$18load_global.6']
    $20load_attr.7 = getattr(value=$18load_global.6, attr=parfors) ['$18load_global.6', '$20load_attr.7']
    $22load_attr.8 = getattr(value=$20load_attr.7, attr=parfor) ['$20load_attr.7', '$22load_attr.8']
    $24load_method.9 = getattr(value=$22load_attr.8, attr=internal_prange) ['$22load_attr.8', '$24load_method.9']
    $26load_global.10 = global(len: <built-in function len>) ['$26load_global.10']
    $30call_function.12 = call $26load_global.10(in_arr, func=$26load_global.10, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$26load_global.10', '$30call_function.12', 'in_arr']
    $32call_method.13 = call $24load_method.9($30call_function.12, func=$24load_method.9, args=[Var($30call_function.12, parfor.py:301)], kws=(), vararg=None) ['$24load_method.9', '$30call_function.12', '$32call_method.13']
    $34get_iter.14 = getiter(value=$32call_method.13) ['$32call_method.13', '$34get_iter.14']
    $phi36.0 = $34get_iter.14                ['$34get_iter.14', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 54             ['$36for_iter.3']
label 38:
    i = $phi38.1                             ['$phi38.1', 'i']
    $46binary_subscr.5 = getitem(value=in_arr, index=i, fn=<built-in function getitem>) ['$46binary_subscr.5', 'i', 'in_arr']
    $48inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=val, rhs=$46binary_subscr.5, static_lhs=Undefined, static_rhs=Undefined) ['$46binary_subscr.5', '$48inplace_add.6', 'val']
    val = $48inplace_add.6                   ['$48inplace_add.6', 'val']
    jump 36                                  []
label 54:
    $56load_global.1 = global(len: <built-in function len>) ['$56load_global.1']
    $60call_function.3 = call $56load_global.1(in_arr, func=$56load_global.1, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$56load_global.1', '$60call_function.3', 'in_arr']
    $62binary_true_divide.4 = val / $60call_function.3 ['$60call_function.3', '$62binary_true_divide.4', 'val']
    $64return_value.5 = cast(value=$62binary_true_divide.4) ['$62binary_true_divide.4', '$64return_value.5']
    return $64return_value.5                 ['$64return_value.5']

Sat, 02 Apr 2022 20:27:37 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=299)
           2	LOAD_GLOBAL(arg=0, lineno=299)
           4	LOAD_ATTR(arg=1, lineno=299)
           6	LOAD_ATTR(arg=2, lineno=299)
           8	LOAD_METHOD(arg=3, lineno=299)
          10	CALL_METHOD(arg=0, lineno=299)
          12	POP_TOP(arg=None, lineno=299)
          14	LOAD_DEREF(arg=0, lineno=300)
          16	STORE_FAST(arg=1, lineno=300)
          18	LOAD_GLOBAL(arg=0, lineno=301)
          20	LOAD_ATTR(arg=1, lineno=301)
          22	LOAD_ATTR(arg=2, lineno=301)
          24	LOAD_METHOD(arg=4, lineno=301)
          26	LOAD_GLOBAL(arg=5, lineno=301)
          28	LOAD_FAST(arg=0, lineno=301)
          30	CALL_FUNCTION(arg=1, lineno=301)
          32	CALL_METHOD(arg=1, lineno=301)
          34	GET_ITER(arg=None, lineno=301)
>         36	FOR_ITER(arg=16, lineno=301)
          38	STORE_FAST(arg=2, lineno=301)
          40	LOAD_FAST(arg=1, lineno=302)
          42	LOAD_FAST(arg=0, lineno=302)
          44	LOAD_FAST(arg=2, lineno=302)
          46	BINARY_SUBSCR(arg=None, lineno=302)
          48	INPLACE_ADD(arg=None, lineno=302)
          50	STORE_FAST(arg=1, lineno=302)
          52	JUMP_ABSOLUTE(arg=36, lineno=302)
>         54	LOAD_FAST(arg=1, lineno=303)
          56	LOAD_GLOBAL(arg=5, lineno=303)
          58	LOAD_FAST(arg=0, lineno=303)
          60	CALL_FUNCTION(arg=1, lineno=303)
          62	BINARY_TRUE_DIVIDE(arg=None, lineno=303)
          64	RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_ATTR(arg=2, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$4load_attr.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=8, inst=LOAD_METHOD(arg=3, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$6load_attr.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=10, inst=CALL_METHOD(arg=0, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$8load_method.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=12, inst=POP_TOP(arg=None, lineno=299)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$10call_method.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=14, inst=LOAD_DEREF(arg=0, lineno=300)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=16, inst=STORE_FAST(arg=1, lineno=300)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$14load_deref.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$18load_global.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$20load_attr.7']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=24, inst=LOAD_METHOD(arg=4, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$22load_attr.8']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$26load_global.10', '$in_arr28.11']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=32, inst=CALL_METHOD(arg=1, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$24load_method.9', '$30call_function.12']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=34, inst=GET_ITER(arg=None, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$32call_method.13']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$34get_iter.14',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi36.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=36, inst=FOR_ITER(arg=16, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi36.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=56, inst=LOAD_GLOBAL(arg=5, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=60, inst=CALL_FUNCTION(arg=1, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0', '$56load_global.1', '$in_arr58.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=62, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$val54.0', '$60call_function.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=303)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$62binary_true_divide.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=38 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=38, inst=STORE_FAST(arg=2, lineno=301)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$phi38.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$in_arr42.3', '$i44.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=48, inst=INPLACE_ADD(arg=None, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$val40.2', '$46binary_subscr.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=50, inst=STORE_FAST(arg=1, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0', '$48inplace_add.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=52, inst=JUMP_ABSOLUTE(arg=36, lineno=302)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi38.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=36, stack=('$phi38.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=36 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=54 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:189] DEBUG defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.14',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:220] DEBUG keep phismap: {'$phi36.0': {('$34get_iter.14', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.14'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'item': '$4load_attr.1', 'res': '$6load_attr.2'}), (8, {'item': '$6load_attr.2', 'res': '$8load_method.3'}), (10, {'func': '$8load_method.3', 'args': [], 'res': '$10call_method.4'}), (14, {'res': '$14load_deref.5'}), (16, {'value': '$14load_deref.5'}), (18, {'res': '$18load_global.6'}), (20, {'item': '$18load_global.6', 'res': '$20load_attr.7'}), (22, {'item': '$20load_attr.7', 'res': '$22load_attr.8'}), (24, {'item': '$22load_attr.8', 'res': '$24load_method.9'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$in_arr28.11'}), (30, {'func': '$26load_global.10', 'args': ['$in_arr28.11'], 'res': '$30call_function.12'}), (32, {'func': '$24load_method.9', 'args': ['$30call_function.12'], 'res': '$32call_method.13'}), (34, {'value': '$32call_method.13', 'res': '$34get_iter.14'})), outgoing_phis={'$phi36.0': '$34get_iter.14'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.14',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: (), 38: ('$phi36.0', '$36for_iter.2')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$val40.2'}), (42, {'res': '$in_arr42.3'}), (44, {'res': '$i44.4'}), (46, {'index': '$i44.4', 'target': '$in_arr42.3', 'res': '$46binary_subscr.5'}), (48, {'lhs': '$val40.2', 'rhs': '$46binary_subscr.5', 'res': '$48inplace_add.6'}), (50, {'value': '$48inplace_add.6'}), (52, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi38.0',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$val54.0'}), (56, {'res': '$56load_global.1'}), (58, {'res': '$in_arr58.2'}), (60, {'func': '$56load_global.1', 'args': ['$in_arr58.2'], 'res': '$60call_function.3'}), (62, {'lhs': '$val54.0', 'rhs': '$60call_function.3', 'res': '$62binary_true_divide.4'}), (64, {'retval': '$62binary_true_divide.4', 'castval': '$64return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:27:37 interpreter.py[line:379] DEBUG label 0:
    in_arr = arg(0, name=in_arr)             ['in_arr']
    $2load_global.0 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=parfors) ['$2load_global.0', '$4load_attr.1']
    $6load_attr.2 = getattr(value=$4load_attr.1, attr=parfor) ['$4load_attr.1', '$6load_attr.2']
    $8load_method.3 = getattr(value=$6load_attr.2, attr=init_prange) ['$6load_attr.2', '$8load_method.3']
    $10call_method.4 = call $8load_method.3(func=$8load_method.3, args=[], kws=(), vararg=None) ['$10call_method.4', '$8load_method.3']
    val = freevar(zero: 0.0)                 ['val']
    $18load_global.6 = global(numba: <module 'numba' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/__init__.py'>) ['$18load_global.6']
    $20load_attr.7 = getattr(value=$18load_global.6, attr=parfors) ['$18load_global.6', '$20load_attr.7']
    $22load_attr.8 = getattr(value=$20load_attr.7, attr=parfor) ['$20load_attr.7', '$22load_attr.8']
    $24load_method.9 = getattr(value=$22load_attr.8, attr=internal_prange) ['$22load_attr.8', '$24load_method.9']
    $26load_global.10 = global(len: <built-in function len>) ['$26load_global.10']
    $30call_function.12 = call $26load_global.10(in_arr, func=$26load_global.10, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$26load_global.10', '$30call_function.12', 'in_arr']
    $32call_method.13 = call $24load_method.9($30call_function.12, func=$24load_method.9, args=[Var($30call_function.12, parfor.py:301)], kws=(), vararg=None) ['$24load_method.9', '$30call_function.12', '$32call_method.13']
    $34get_iter.14 = getiter(value=$32call_method.13) ['$32call_method.13', '$34get_iter.14']
    $phi36.0 = $34get_iter.14                ['$34get_iter.14', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 54             ['$36for_iter.3']
label 38:
    i = $phi38.1                             ['$phi38.1', 'i']
    $46binary_subscr.5 = getitem(value=in_arr, index=i, fn=<built-in function getitem>) ['$46binary_subscr.5', 'i', 'in_arr']
    $48inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=val, rhs=$46binary_subscr.5, static_lhs=Undefined, static_rhs=Undefined) ['$46binary_subscr.5', '$48inplace_add.6', 'val']
    val = $48inplace_add.6                   ['$48inplace_add.6', 'val']
    jump 36                                  []
label 54:
    $56load_global.1 = global(len: <built-in function len>) ['$56load_global.1']
    $60call_function.3 = call $56load_global.1(in_arr, func=$56load_global.1, args=[Var(in_arr, parfor.py:299)], kws=(), vararg=None) ['$56load_global.1', '$60call_function.3', 'in_arr']
    $62binary_true_divide.4 = val / $60call_function.3 ['$60call_function.3', '$62binary_true_divide.4', 'val']
    $64return_value.5 = cast(value=$62binary_true_divide.4) ['$62binary_true_divide.4', '$64return_value.5']
    return $64return_value.5                 ['$64return_value.5']

Sat, 02 Apr 2022 20:27:37 byteflow.py[line:74] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=12, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=13, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$sched4.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$sched4.1', '$const6.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$26call_function.12']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi30.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi30.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack []
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$const40.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=32 nstack_initial=2)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:103] DEBUG stack: ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=32, inst=STORE_FAST(arg=12, lineno=2)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$phi32.1']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=36, inst=STORE_FAST(arg=13, lineno=3)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0', '$const34.2']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:262] DEBUG dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:263] DEBUG stack ['$phi32.0']
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:135] DEBUG end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:100] DEBUG pending: deque([State(pc_initial=30 nstack_initial=1)])
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:163] DEBUG -------------------------Prune PHIs-------------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:232] DEBUG Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:189] DEBUG defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:190] DEBUG phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:211] DEBUG changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:220] DEBUG keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:226] DEBUG new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:236] DEBUG ----------------------DONE Prune PHIs-----------------------
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
Sat, 02 Apr 2022 20:27:37 byteflow.py[line:147] DEBUG block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Sat, 02 Apr 2022 20:27:37 interpreter.py[line:379] DEBUG label 0:
    sched = arg(0, name=sched)               ['sched']
    _d_880 = arg(1, name=_d_880)             ['_d_880']
    _n_879 = arg(2, name=_n_879)             ['_n_879']
    X = arg(3, name=X)                       ['X']
    current__values = arg(4, name=current__values) ['current__values']
    gains = arg(5, name=gains)               ['gains']
    idxs = arg(6, name=idxs)                 ['idxs']
    k = arg(7, name=k)                       ['k']
    max__values = arg(8, name=max__values)   ['max__values']
    selections = arg(9, name=selections)     ['selections']
    n__selected = arg(10, name=n__selected)  ['n__selected']
    total__gains = arg(11, name=total__gains) ['total__gains']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_868 = $phi32.1             ['$phi32.1', 'parfor__index_868']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 0
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: sched.949 = arg(0, name=sched)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: _d_880 = arg(1, name=_d_880)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: _n_879 = arg(2, name=_n_879)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: X = arg(3, name=X)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: current__values = arg(4, name=current__values)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: gains = arg(5, name=gains)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: idxs = arg(6, name=idxs)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: k = arg(7, name=k)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: max__values = arg(8, name=max__values)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: selections = arg(9, name=selections)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: n__selected = arg(10, name=n__selected)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: total__gains = arg(11, name=total__gains)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $2load_global.0.950 = global(range: <class 'range'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const6.2.951 = const(int, 0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $8binary_subscr.3.952 = getitem(value=sched.949, index=$const6.2.951, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const12.5.953 = const(int, 1)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $14binary_subscr.6.954 = getitem(value=sched.949, index=$const12.5.953, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $16load_global.7.955 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $18load_method.8.956 = getattr(value=$16load_global.7.955, attr=uint8)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const20.9.957 = const(int, 1)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $22call_method.10.958 = call $18load_method.8.956($const20.9.957, func=$18load_method.8.956, args=[Var($const20.9.957, <string>:2)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $24binary_add.11.959 = $14binary_subscr.6.954 + $22call_method.10.958
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $26call_function.12.960 = call $2load_global.0.950($8binary_subscr.3.952, $24binary_add.11.959, func=$2load_global.0.950, args=[Var($8binary_subscr.3.952, <string>:2), Var($24binary_add.11.959, <string>:2)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $28get_iter.13.961 = getiter(value=$26call_function.12.960)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $phi30.0.962 = $28get_iter.13.961
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $34load_global.2 = global(range: <class 'range'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: bool56 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $174build_slice.8 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: zero.842 = const(int, 0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: replacement_slice.843 = call $174build_slice.8(zero.842, _d_880, func=$174build_slice.8, args=(Var(zero.842, facilityLocation.py:63), Var(_d_880, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: wrap.845 = global(wrap_index: <intrinsic wrap_index>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: msg.848 = const(str, Sizes of $168binary_subscr.5, maximum do not match on /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/apricot/functions/facilityLocation.py (63))
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: assert.849 = global(assert_equiv: <intrinsic assert_equiv>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const230.34 = const(int, 1)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const76.8 = const(float, 2.0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $116build_slice.27 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: zero.823 = const(int, 0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: replacement_slice.824 = call $116build_slice.27(zero.823, _d_880, func=$116build_slice.27, args=(Var(zero.823, facilityLocation.py:59), Var(_d_880, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: wrap.826 = global(wrap_index: <intrinsic wrap_index>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $130build_slice.35 = global(slice: <class 'slice'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: zero.832 = const(int, 0)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: replacement_slice.833 = call $130build_slice.35(zero.832, _d_880, func=$130build_slice.35, args=(Var(zero.832, facilityLocation.py:59), Var(_d_880, facilityLocation.py:49)), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $np_g_var.857 = global(np: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $empty_attr_attr.858 = getattr(value=$np_g_var.857, attr=empty)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $np_typ_var.859 = getattr(value=$np_g_var.857, attr=float64)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: bool160 = global(bool: <class 'bool'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 30
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $30for_iter.1.963 = iternext(value=$phi30.0.962)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $30for_iter.2.964 = pair_first(value=$30for_iter.1.963)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $30for_iter.3.965 = pair_second(value=$30for_iter.1.963)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $phi32.1.966 = $30for_iter.2.964
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $30for_iter.3.965, 32, 543
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 32
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: parfor__index_868 = $phi32.1.966
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 40
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 543
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $const40.0.967 = const(NoneType, None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $42return_value.1.968 = cast(value=$const40.0.967)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: return $42return_value.1.968
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 40
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $38call_function.4 = call $34load_global.2(_n_879, func=$34load_global.2, args=[Var(_n_879, facilityLocation.py:49)], kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $40get_iter.5 = getiter(value=$38call_function.4)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 73
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 73
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $42for_iter.2 = iternext(value=$40get_iter.5)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $i.881 = pair_first(value=$42for_iter.2)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $42for_iter.4 = pair_second(value=$42for_iter.2)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $42for_iter.4, 83, 502
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 83
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $50binary_subscr.5 = getitem(value=n__selected, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $54compare_op.7 = $50binary_subscr.5 == k
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $56pred = call bool56($54compare_op.7, func=bool56, args=(Var($54compare_op.7, facilityLocation.py:54),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $56pred, 85, 99
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 284
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 73
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 502
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 540
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 540
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 542
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 103
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5 = getitem(value=current__values, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5_shape.840 = getattr(value=$168binary_subscr.5, attr=shape)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $168binary_subscr.5_size0.841 = static_getitem(value=$168binary_subscr.5_shape.840, index=0, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: var.846 = call wrap.845(_d_880, $168binary_subscr.5_size0.841, func=wrap.845, args=[Var(_d_880, facilityLocation.py:49), Var($168binary_subscr.5_size0.841, facilityLocation.py:63)], kws={}, vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: post_wrap_slice_size.847 = var.846 - zero.842
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: ret.850 = call assert.849(msg.848, post_wrap_slice_size.847, var.827, func=assert.849, args=[Var(msg.848, facilityLocation.py:63), Var(post_wrap_slice_size.847, facilityLocation.py:63), Var(var.827, facilityLocation.py:59)], kws={}, vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: id=9[LoopNest(index_variable = parfor_index.854, range = (0, post_wrap_slice_size.847, 1))]{559: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/apricot/functions/facilityLocation.py (63)>}Var(parfor_index.854, facilityLocation.py:63)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: id=11[LoopNest(index_variable = parfor_index.864, range = (0, var.827, 1))]{484: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/parfors/parfor.py (301)>}Var(parfor_index.864, parfor.py:301)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $62binary_true_divide.4.759 = val.734 / var.827
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: total__gains[parfor__index_868] = $62binary_true_divide.4.759
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $200binary_subscr.20 = getitem(value=n__selected, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $202build_tuple.21 = build_tuple(items=[Var(parfor__index_868, facilityLocation.py:52), Var($200binary_subscr.20, facilityLocation.py:66)])
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: selections[$202build_tuple.21] = idx
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $216binary_subscr.27 = getitem(value=n__selected, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $218build_tuple.28 = build_tuple(items=[Var(parfor__index_868, facilityLocation.py:52), Var($216binary_subscr.27, facilityLocation.py:67)])
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: gains[$218build_tuple.28] = gain
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $228binary_subscr.33 = getitem(value=n__selected, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $232inplace_add.35 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$228binary_subscr.33, rhs=$const230.34, static_lhs=Undefined, static_rhs=Undefined)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: n__selected[parfor__index_868] = $232inplace_add.35
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 284
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 99
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: idx = getitem(value=idxs, index=$i.881, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $74binary_subscr.7 = getitem(value=max__values, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $78binary_true_divide.9 = $74binary_subscr.7 / $const76.8
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $84binary_subscr.12 = getitem(value=total__gains, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $86binary_subtract.13 = $78binary_true_divide.9 - $84binary_subscr.12
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $94binary_subscr.17 = getitem(value=n__selected, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $96binary_subtract.18 = k - $94binary_subscr.17
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: threshold = $86binary_subtract.13 / $96binary_subtract.18
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $102load_global.20 = global(numpy: <module 'numpy' from '/home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numpy/__init__.py'>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24 = getitem(value=X, index=$i.881, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24_shape.821 = getattr(value=$110binary_subscr.24, attr=shape)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $110binary_subscr.24_size0.822 = static_getitem(value=$110binary_subscr.24_shape.821, index=0, index_var=None, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: var.827 = call wrap.826(_d_880, $110binary_subscr.24_size0.822, func=wrap.826, args=[Var(_d_880, facilityLocation.py:49), Var($110binary_subscr.24_size0.822, facilityLocation.py:59)], kws={}, vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $118binary_subscr.29 = getitem(value=$110binary_subscr.24, index=replacement_slice.824, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $124binary_subscr.32 = getitem(value=current__values, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $132binary_subscr.37 = getitem(value=$124binary_subscr.32, index=replacement_slice.833, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: id=10[LoopNest(index_variable = parfor_index.856, range = (0, var.827, 1))]{560: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/apricot/functions/facilityLocation.py (59)>}Var(parfor_index.856, facilityLocation.py:59)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: id=12[LoopNest(index_variable = parfor_index.866, range = (0, var.827, 1))]{281: <ir.Block at /home/x/xuxilie/anaconda3/lib/python3.8/site-packages/numba/parfors/parfor.py (301)>}Var(parfor_index.866, parfor.py:301)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $62binary_true_divide.4.793 = val.768 / var.827
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $148binary_subscr.44 = getitem(value=total__gains, index=parfor__index_868, fn=<built-in function getitem>)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: gain = $62binary_true_divide.4.793 - $148binary_subscr.44
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $158compare_op.48 = gain > threshold
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: $160pred = call bool160($158compare_op.48, func=bool160, args=(Var($158compare_op.48, facilityLocation.py:62),), kws=(), vararg=None)
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: branch $160pred, 103, 284
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 85
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 540
Sat, 02 Apr 2022 20:27:37 ssa.py[line:149] DEBUG ==== SSA block analysis pass on 542
Sat, 02 Apr 2022 20:27:37 ssa.py[line:178] DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f96201799d0>
Sat, 02 Apr 2022 20:27:37 ssa.py[line:180] DEBUG on stmt: jump 30
Sat, 02 Apr 2022 20:27:37 ssa.py[line:141] DEBUG defs defaultdict(<class 'list'>,
            {'$102load_global.20': [<numba.core.ir.Assign object at 0x7f96208e3fd0>],
             '$110binary_subscr.24': [<numba.core.ir.Assign object at 0x7f96208e3100>],
             '$110binary_subscr.24_shape.821': [<numba.core.ir.Assign object at 0x7f9620039ac0>],
             '$110binary_subscr.24_size0.822': [<numba.core.ir.Assign object at 0x7f96208e8b20>],
             '$116build_slice.27': [<numba.core.ir.Assign object at 0x7f96208e3580>],
             '$118binary_subscr.29': [<numba.core.ir.Assign object at 0x7f9620042a60>],
             '$124binary_subscr.32': [<numba.core.ir.Assign object at 0x7f9620042e80>],
             '$130build_slice.35': [<numba.core.ir.Assign object at 0x7f9620042280>],
             '$132binary_subscr.37': [<numba.core.ir.Assign object at 0x7f9620042700>],
             '$148binary_subscr.44': [<numba.core.ir.Assign object at 0x7f96200b91f0>],
             '$14binary_subscr.6.954': [<numba.core.ir.Assign object at 0x7f9622acb4f0>],
             '$158compare_op.48': [<numba.core.ir.Assign object at 0x7f962005ddf0>],
             '$160pred': [<numba.core.ir.Assign object at 0x7f962005d1f0>],
             '$168binary_subscr.5': [<numba.core.ir.Assign object at 0x7f9620042970>],
             '$168binary_subscr.5_shape.840': [<numba.core.ir.Assign object at 0x7f967eb6c6d0>],
             '$168binary_subscr.5_size0.841': [<numba.core.ir.Assign object at 0x7f967eb6cc40>],
             '$16load_global.7.955': [<numba.core.ir.Assign object at 0x7f9621faaeb0>],
             '$174build_slice.8': [<numba.core.ir.Assign object at 0x7f962005d400>],
             '$18load_method.8.956': [<numba.core.ir.Assign object at 0x7f9621faae20>],
             '$200binary_subscr.20': [<numba.core.ir.Assign object at 0x7f96200bfbb0>],
             '$202build_tuple.21': [<numba.core.ir.Assign object at 0x7f96200bff40>],
             '$216binary_subscr.27': [<numba.core.ir.Assign object at 0x7f9623ae6190>],
             '$218build_tuple.28': [<numba.core.ir.Assign object at 0x7f9623ae62e0>],
             '$228binary_subscr.33': [<numba.core.ir.Assign object at 0x7f96200ccf70>],
             '$22call_method.10.958': [<numba.core.ir.Assign object at 0x7f9621faa9d0>],
             '$232inplace_add.35': [<numba.core.ir.Assign object at 0x7f960ff51160>],
             '$24binary_add.11.959': [<numba.core.ir.Assign object at 0x7f96201a0640>],
             '$26call_function.12.960': [<numba.core.ir.Assign object at 0x7f96201a07c0>],
             '$28get_iter.13.961': [<numba.core.ir.Assign object at 0x7f96201a0910>],
             '$2load_global.0.950': [<numba.core.ir.Assign object at 0x7f96201a0160>],
             '$30for_iter.1.963': [<numba.core.ir.Assign object at 0x7f96201a0c10>],
             '$30for_iter.2.964': [<numba.core.ir.Assign object at 0x7f96201a0d30>],
             '$30for_iter.3.965': [<numba.core.ir.Assign object at 0x7f96201a0e20>],
             '$34load_global.2': [<numba.core.ir.Assign object at 0x7f962004e670>],
             '$38call_function.4': [<numba.core.ir.Assign object at 0x7f962004e760>],
             '$40get_iter.5': [<numba.core.ir.Assign object at 0x7f962004e5b0>],
             '$42for_iter.2': [<numba.core.ir.Assign object at 0x7f96208cebe0>],
             '$42for_iter.4': [<numba.core.ir.Assign object at 0x7f96208ce820>],
             '$42return_value.1.968': [<numba.core.ir.Assign object at 0x7f9621f867c0>],
             '$50binary_subscr.5': [<numba.core.ir.Assign object at 0x7f96208ce550>],
             '$54compare_op.7': [<numba.core.ir.Assign object at 0x7f96208ce0d0>],
             '$56pred': [<numba.core.ir.Assign object at 0x7f9620066df0>],
             '$62binary_true_divide.4.759': [<numba.core.ir.Assign object at 0x7f9623e77070>],
             '$62binary_true_divide.4.793': [<numba.core.ir.Assign object at 0x7f962003b400>],
             '$74binary_subscr.7': [<numba.core.ir.Assign object at 0x7f9622aecaf0>],
             '$78binary_true_divide.9': [<numba.core.ir.Assign object at 0x7f9622aecdf0>],
             '$84binary_subscr.12': [<numba.core.ir.Assign object at 0x7f9622aec940>],
             '$86binary_subtract.13': [<numba.core.ir.Assign object at 0x7f9622aec7c0>],
             '$8binary_subscr.3.952': [<numba.core.ir.Assign object at 0x7f9621fa90d0>],
             '$94binary_subscr.17': [<numba.core.ir.Assign object at 0x7f9622aec130>],
             '$96binary_subtract.18': [<numba.core.ir.Assign object at 0x7f9622aecbb0>],
             '$const12.5.953': [<numba.core.ir.Assign object at 0x7f96200bc340>],
             '$const20.9.957': [<numba.core.ir.Assign object at 0x7f9621faab50>],
             '$const230.34': [<numba.core.ir.Assign object at 0x7f960ff511c0>],
             '$const40.0.967': [<numba.core.ir.Assign object at 0x7f9621f86640>],
             '$const6.2.951': [<numba.core.ir.Assign object at 0x7f96201a0460>],
             '$const76.8': [<numba.core.ir.Assign object at 0x7f9622aecf10>],
             '$empty_attr_attr.858': [<numba.core.ir.Assign object at 0x7f967ed88fd0>],
             '$i.881': [<numba.core.ir.Assign object at 0x7f96208ce7c0>],
             '$np_g_var.857': [<numba.core.ir.Assign object at 0x7f967ed88d60>],
             '$np_typ_var.859': [<numba.core.ir.Assign object at 0x7f967ed88ca0>],
             '$phi30.0.962': [<numba.core.ir.Assign object at 0x7f962017e250>],
             '$phi32.1.966': [<numba.core.ir.Assign object at 0x7f96201a0b20>],
             'X': [<numba.core.ir.Assign object at 0x7f962017e6a0>],
             '_d_880': [<numba.core.ir.Assign object at 0x7f962017e460>],
             '_n_879': [<numba.core.ir.Assign object at 0x7f962017e580>],
             'assert.849': [<numba.core.ir.Assign object at 0x7f967ed6cb50>],
             'bool160': [<numba.core.ir.Assign object at 0x7f962005d160>],
             'bool56': [<numba.core.ir.Assign object at 0x7f96208cef70>],
             'current__values': [<numba.core.ir.Assign object at 0x7f962017e7c0>],
             'gain': [<numba.core.ir.Assign object at 0x7f96200b9ca0>],
             'gains': [<numba.core.ir.Assign object at 0x7f962017e8e0>],
             'idx': [<numba.core.ir.Assign object at 0x7f96200665b0>],
             'idxs': [<numba.core.ir.Assign object at 0x7f962017ea00>],
             'k': [<numba.core.ir.Assign object at 0x7f962017eb20>],
             'max__values': [<numba.core.ir.Assign object at 0x7f962017ec40>],
             'msg.848': [<numba.core.ir.Assign object at 0x7f967ed6cd00>],
             'n__selected': [<numba.core.ir.Assign object at 0x7f962017ee80>],
             'parfor__index_868': [<numba.core.ir.Assign object at 0x7f9621f86100>],
             'post_wrap_slice_size.847': [<numba.core.ir.Assign object at 0x7f967ed9bdf0>],
             'replacement_slice.824': [<numba.core.ir.Assign object at 0x7f96200c8bb0>],
             'replacement_slice.833': [<numba.core.ir.Assign object at 0x7f967eef14c0>],
             'replacement_slice.843': [<numba.core.ir.Assign object at 0x7f967ed9b9a0>],
             'ret.850': [<numba.core.ir.Assign object at 0x7f967ed6c610>],
             'sched.949': [<numba.core.ir.Assign object at 0x7f962017e340>],
             'selections': [<numba.core.ir.Assign object at 0x7f962017ed60>],
             'threshold': [<numba.core.ir.Assign object at 0x7f96208e33d0>],
             'total__gains': [<numba.core.ir.Assign object at 0x7f962017efa0>],
             'var.827': [<numba.core.ir.Assign object at 0x7f96200c8f40>],
             'var.846': [<numba.core.ir.Assign object at 0x7f967ed9b460>],
             'wrap.826': [<numba.core.ir.Assign object at 0x7f96200c8fd0>],
             'wrap.845': [<numba.core.ir.Assign object at 0x7f967ed9b070>],
             'zero.823': [<numba.core.ir.Assign object at 0x7f960ff70940>],
             'zero.832': [<numba.core.ir.Assign object at 0x7f96200c4460>],
             'zero.842': [<numba.core.ir.Assign object at 0x7f967ef735e0>]})
Sat, 02 Apr 2022 20:27:37 ssa.py[line:143] DEBUG SSA violators set()
